/*
 Navicat Premium Data Transfer

 Source Server         : myServer
 Source Server Type    : MySQL
 Source Server Version : 80012
 Source Host           : localhost:3306
 Source Schema         : mydb

 Target Server Type    : MySQL
 Target Server Version : 80012
 File Encoding         : 65001

 Date: 17/10/2018 21:42:57
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for activity
-- ----------------------------
DROP TABLE IF EXISTS `activity`;
CREATE TABLE `activity`  (
  `activityId` int(11) NOT NULL,
  `activityTitle` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `activityDays` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `beginTime` date NULL DEFAULT NULL,
  `endTime` date NULL DEFAULT NULL,
  `personNum` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `money` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `telNum` int(11) NULL DEFAULT NULL,
  `activityIntroduce` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `manageCheck` int(11) NOT NULL DEFAULT 2,
  `user_userId` int(11) NOT NULL,
  PRIMARY KEY (`activityId`) USING BTREE,
  INDEX `fk_activity_user1_idx`(`user_userId`) USING BTREE,
  INDEX `activityId`(`activityId`) USING BTREE,
  INDEX `activityId_2`(`activityId`) USING BTREE,
  INDEX `activityId_3`(`activityId`) USING BTREE,
  INDEX `activityId_4`(`activityId`) USING BTREE,
  CONSTRAINT `fk_activity_user1` FOREIGN KEY (`user_userId`) REFERENCES `user` (`userid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of activity
-- ----------------------------
INSERT INTO `activity` VALUES (12, '苏州', '3', '2018-10-01', '2018-10-03', '10', '200', 1231231322, '旅游', 2, 1);
INSERT INTO `activity` VALUES (123321, '苏州', '3', '2018-10-01', '2018-10-03', '10', '200', 1231231322, '旅游', 2, 1);

-- ----------------------------
-- Table structure for activitycomment
-- ----------------------------
DROP TABLE IF EXISTS `activitycomment`;
CREATE TABLE `activitycomment`  (
  `activityCommentId` int(11) NOT NULL,
  `activityTime` date NULL DEFAULT NULL,
  `activityCommentContent` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `activity_activityId` int(11) NOT NULL,
  `userstatus` int(11) NULL DEFAULT 2,
  `userid` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`activityCommentId`) USING BTREE,
  INDEX `fk_activityComment_activity1_idx`(`activity_activityId`) USING BTREE,
  CONSTRAINT `fk_activityComment_activity1` FOREIGN KEY (`activity_activityId`) REFERENCES `activity` (`activityid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of activitycomment
-- ----------------------------
INSERT INTO `activitycomment` VALUES (1, '2018-09-10', '很好玩', 12, 1, 1);
INSERT INTO `activitycomment` VALUES (2, '2018-09-09', '一般吧，不舒服', 12, 1, 866);
INSERT INTO `activitycomment` VALUES (3, '2018-09-09', '哈哈哈', 123321, 1, 832);

-- ----------------------------
-- Table structure for collection
-- ----------------------------
DROP TABLE IF EXISTS `collection`;
CREATE TABLE `collection`  (
  `collectionId` int(11) NOT NULL AUTO_INCREMENT,
  `scenic_scenicId` int(11) NOT NULL,
  `route_routeId` int(11) NOT NULL,
  `user_userId` int(11) NOT NULL,
  PRIMARY KEY (`collectionId`) USING BTREE,
  INDEX `fk_collection_scenic1_idx`(`scenic_scenicId`) USING BTREE,
  INDEX `fk_collection_route1_idx`(`route_routeId`) USING BTREE,
  INDEX `fk_collection_user1_idx`(`user_userId`) USING BTREE,
  CONSTRAINT `fk_collection_route1` FOREIGN KEY (`route_routeId`) REFERENCES `route` (`routeid`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_collection_scenic1` FOREIGN KEY (`scenic_scenicId`) REFERENCES `scenic` (`scenicid`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_collection_user1` FOREIGN KEY (`user_userId`) REFERENCES `user` (`userid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 13 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of collection
-- ----------------------------
INSERT INTO `collection` VALUES (1, 351, 255, 832);
INSERT INTO `collection` VALUES (2, 350, 252, 866);
INSERT INTO `collection` VALUES (3, 352, 250, 855);
INSERT INTO `collection` VALUES (10, 350, 253, 832);
INSERT INTO `collection` VALUES (12, 350, 253, 832);

-- ----------------------------
-- Table structure for joinactivity
-- ----------------------------
DROP TABLE IF EXISTS `joinactivity`;
CREATE TABLE `joinactivity`  (
  `joinActivityId` int(11) NOT NULL,
  `provideId` int(11) NOT NULL,
  `userStatus` int(11) NOT NULL DEFAULT 2,
  `user_userId` int(11) NOT NULL,
  `activity_activityId` int(11) NOT NULL,
  PRIMARY KEY (`joinActivityId`) USING BTREE,
  INDEX `fk_joinActivity_user1_idx`(`user_userId`) USING BTREE,
  INDEX `fk_joinActivity_activity1_idx`(`activity_activityId`) USING BTREE,
  CONSTRAINT `fk_joinActivity_activity1` FOREIGN KEY (`activity_activityId`) REFERENCES `activity` (`activityid`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_joinActivity_user1` FOREIGN KEY (`user_userId`) REFERENCES `user` (`userid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for manage
-- ----------------------------
DROP TABLE IF EXISTS `manage`;
CREATE TABLE `manage`  (
  `manageId` int(11) NOT NULL,
  `manageName` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `managePwd` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`manageId`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of manage
-- ----------------------------
INSERT INTO `manage` VALUES (1, 'mby', 'a790452f032a34ea80339bef474b93f4');

-- ----------------------------
-- Table structure for public
-- ----------------------------
DROP TABLE IF EXISTS `public`;
CREATE TABLE `public`  (
  `publicId` int(11) NOT NULL,
  `publicTitle` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `publicContent` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`publicId`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of public
-- ----------------------------
INSERT INTO `public` VALUES (1, '小心出行', '9月17苏州大雨 山竹来袭小心出门');
INSERT INTO `public` VALUES (2, '苏州百年面馆打折', '百年老店装修结束，明日开业大酬宾啊。限时限量啊');

-- ----------------------------
-- Table structure for route
-- ----------------------------
DROP TABLE IF EXISTS `route`;
CREATE TABLE `route`  (
  `routeId` int(11) NOT NULL,
  `routeName` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `routeIntroduction` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `Days` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `hotRoute` int(11) NOT NULL,
  `routeImage` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`routeId`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of route
-- ----------------------------
INSERT INTO `route` VALUES (250, '姑苏游园，经典园林1日游', '苏州以园林而出名，不大的地方有拙政园、留园、狮子林等，各有各的特色，而且距离上海也不远，一天就可以来回，选个空闲的时间去苏州的园林逛逛吧。1天', '1', 1, 'https://dimg06.c-ctrip.com/images/fd/tg/g4/M01/4A/BF/CggYHVXjzyeAOeymABuBTaHIgFc792_D_180_180.jpg');
INSERT INTO `route` VALUES (251, '漫游苏州，经典1日游', '如果你没有太长的时间在苏州停留，这份攻略能让你在一天之内，领略苏州最经典的园林和景点', '1', 1, 'https://dimg07.c-ctrip.com/images/100o0b0000005q7yd532D_D_180_180.jpg');
INSERT INTO `route` VALUES (252, '沙家浜、服装城1日游', '沙家浜既有红色革命背景又有优美的自然风光，是常熟著名的旅游景点。坐着游船穿梭于沙家浜的芦苇荡中，欣赏湿地美景，追忆当年红军在芦苇荡中躲避敌军的情景。而常熟服装城购物旅游区则有5000多个品牌的服装服饰等你挑选。一天的行程，带你到沙家浜体验阿庆嫂的革命生涯，到服装城尽情购物。', '1', 0, 'https://dimg10.c-ctrip.com/images/tg/229/433/646/17e363d5938a4892b613ebd03c120b9e_D_180_180.jpg');
INSERT INTO `route` VALUES (253, '历史遗迹、人文故居1日游', '游览常熟别致的江南园林，看地标之一方塔园中的方塔，参观名人故居，在展览馆、博物馆了解常熟深厚的历史底蕴，这条路线带你领略常熟人文魅力。景点与景点间的距离基本在1.5公里以内，但因为常熟的这些景点下午关门比较早，游览的节奏还需紧凑一些。', '1', 0, 'https://dimg11.c-ctrip.com/images/tg/205/611/558/cebf4164ebe5483d9eecbfe060ef140e_D_180_180.jpg');
INSERT INTO `route` VALUES (254, '周庄自驾1日游', '逛周庄不需要刻意按路线走，随便地一边走一边逛最是惬意的了，周庄内的主要景点由东向西依次是张厅、沈厅，过富安桥或者是双桥后是澄虚道院，之后就到了迷楼。附近还有沈万三故居、沈万三水冢、牌楼塔影、文化街、怪楼等等。途中饿了可以吃一些当地小吃，比如万三蹄、万三糕和全福贡酥等等。当然你也可以选择在周庄住上一晚，笃笃悠悠地看。', '1', 0, 'https://dimg06.c-ctrip.com/images/10040q000000glvpn857A_D_180_180.jpg');
INSERT INTO `route` VALUES (255, '闲庭信步在苏州，经典2日游', '古色古香的园林，平江路、观前街、山塘街一条条老街，漫步苏州，或看水乡居民日常起居，或品尝美食，或扎入琳琅满目的小店带来的繁华中，各有各的不同，各有各的好。', '2', 0, 'https://dimg06.c-ctrip.com/images/fd/tg/g4/M01/4A/BF/CggYHVXjzyeAOeymABuBTaHIgFc792_D_180_180.jpg');
INSERT INTO `route` VALUES (256, '登高访古，悠闲2日游', '苏州以人文景点为主，可是看多了难免会腻味，其实苏州也不乏自然景观，本行程有园林、有古寺、有古镇、有山，园林不去总是挤满人的拙政园而去定园，天平山上的乱石头能带来攀爬的乐趣，时间安排上宽松，游览的景点不单调。', '2', 0, 'https://dimg04.c-ctrip.com/images/tg/212/267/706/838380c6ad484855b8351543d302cac0_D_180_180.jpg');
INSERT INTO `route` VALUES (257, '逛园看塔，苏州休闲2日游', '苏州品味园林之美以及街道的历史文化底蕴~', '2', 1, 'https://dimg03.c-ctrip.com/images/fd/tg/g1/M03/7A/6A/CghzfVWws-yAcClPAAsjzh_k3OE586_D_180_180.jpg');
INSERT INTO `route` VALUES (258, '自驾太湖东、西山2日游', '东、西山位于太湖边，是周末度假出游的好地方。东山以名胜古迹居多，如雕花楼、启园，古紫金庵，三山古文化遗址。西山与东山隔湖相望，以自然风光为主，西山国家森林公园内的缥缈峰为太湖七十二峰之首，二天的时间可以都游览到，晚上还能吃一顿当地的农家菜。', '2', 0, 'https://dimg12.c-ctrip.com/images/100m0c0000006426p4317_D_180_180.jpg');
INSERT INTO `route` VALUES (259, '游虞山尚湖，经典2日游', '两天的时间，带你爬虞山游尚湖，玩得会比较细和全面，绝不走马观花。游览这两个常熟市内具有代表性的景点及周边，是常熟旅游的经典路线，适合绝大多数的游客。', '2', 0, 'https://dimg05.c-ctrip.com/images/fd/tg/g4/M02/39/53/CggYHlXKpxCAWwSqACXa-c7n1qo838_D_180_180.jpg');
INSERT INTO `route` VALUES (260, '游遍苏州，经典景点3日游', '苏州古韵的继承，拙政园、狮子林、山塘街~', '3', 0, 'https://dimg07.c-ctrip.com/images/100c0k000000c5n1q4F97_D_180_180.jpg');

-- ----------------------------
-- Table structure for routedetails
-- ----------------------------
DROP TABLE IF EXISTS `routedetails`;
CREATE TABLE `routedetails`  (
  `routeDetailsId` int(11) NOT NULL AUTO_INCREMENT,
  `routeName` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `Days` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `placeNumber` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `routeIntroduction` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `tripPlace` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `playTime` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `openTime` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `route_routeId` int(11) NOT NULL,
  PRIMARY KEY (`routeDetailsId`) USING BTREE,
  INDEX `fk_routeDetails_route1_idx`(`route_routeId`) USING BTREE,
  CONSTRAINT `fk_routeDetails_route1` FOREIGN KEY (`route_routeId`) REFERENCES `route` (`routeid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of routedetails
-- ----------------------------
INSERT INTO `routedetails` VALUES (1, '姑苏游园，经典园林1日游', '1', '8个', NULL, '苏州', '2小时', '全年', 250);
INSERT INTO `routedetails` VALUES (2, '漫游苏州，经典1日游', '1', '5个', NULL, '苏州', '2-3小时', '2-5月', 251);
INSERT INTO `routedetails` VALUES (3, '沙家浜、服装城1日游', '1', '6个', NULL, '常熟', '2-3小时', '8-12月', 252);
INSERT INTO `routedetails` VALUES (4, '历史遗迹、人文故居1日游', '1', '7个', NULL, '常熟', '2小时', '8-12月', 253);
INSERT INTO `routedetails` VALUES (5, '周庄自驾1日游', '1', '10个', NULL, '周庄', '3小时', '1-5月', 254);
INSERT INTO `routedetails` VALUES (6, '闲庭信步在苏州，经典2日游', '2', '11个', NULL, '苏州', '4小时', '全年', 255);
INSERT INTO `routedetails` VALUES (7, '登高访古，悠闲2日游', '2', '5个', NULL, '苏州', '4-5小时', '8-12月', 256);
INSERT INTO `routedetails` VALUES (8, '逛园看塔，苏州休闲2日游', '2', '6个', NULL, '苏州', '5-6小时', '7-10月', 257);
INSERT INTO `routedetails` VALUES (9, '自驾太湖东、西山2日游', '2', '4个', NULL, '苏州', '2-3小时', '全年', 258);
INSERT INTO `routedetails` VALUES (10, '游虞山尚湖，经典2日游', '2', '10个', NULL, '常熟', '3-4小时', '1-6月', 259);
INSERT INTO `routedetails` VALUES (11, '游遍苏州，经典景点3日游', '3', '6个', NULL, '数组', '7-8小时', '全年', 260);

-- ----------------------------
-- Table structure for scenic
-- ----------------------------
DROP TABLE IF EXISTS `scenic`;
CREATE TABLE `scenic`  (
  `scenicId` int(11) NOT NULL AUTO_INCREMENT,
  `scenicName` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `fromArea` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `timeArrange` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenicLevel` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `hotScenic` int(11) NOT NULL,
  `scenicAddress` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `openHours` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenicImage` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenicIntroduce` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenicLocation_scenicLocationId` int(11) NOT NULL,
  PRIMARY KEY (`scenicId`) USING BTREE,
  INDEX `fk_scenic_scenicLocation1_idx`(`scenicLocation_scenicLocationId`) USING BTREE,
  INDEX `scenicId`(`scenicId`) USING BTREE,
  INDEX `scenicId_2`(`scenicId`) USING BTREE,
  INDEX `scenicId_3`(`scenicId`) USING BTREE,
  INDEX `scenicId_4`(`scenicId`) USING BTREE,
  INDEX `scenicId_5`(`scenicId`) USING BTREE,
  CONSTRAINT `fk_scenic_scenicLocation1` FOREIGN KEY (`scenicLocation_scenicLocationId`) REFERENCES `sceniclocation` (`sceniclocationid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 399 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of scenic
-- ----------------------------
INSERT INTO `scenic` VALUES (350, '苏州市天平山风景名胜区', '', '', '4A景区', 1, '江苏省苏州市吴中区灵天路 ', '7:30-17:00', 'https://pic5.40017.cn/01/000/08/f6/rBLkBlsffHqAYTNRAAMQePZ57xw462_540x304_00.jpg', '', 1);
INSERT INTO `scenic` VALUES (351, '穹窿山(苏州太湖旅游区)', '', '', '4A景区', 0, '江苏省苏州市吴中区穹窿山风景区苏州绕城高速光福路出口下1公里', '8:30-16:30，入园时间截止16:00。', 'https://pic4.40017.cn/scenery/destination/2016/07/13/14/7mtN1h.jpg.webp', '', 1);
INSERT INTO `scenic` VALUES (352, '甪直古镇', '', '', '4A景区', 0, '江苏省苏州城东南25公里', '8:00-17:00（游船时间：8:30-16:00）', 'https://pic4.40017.cn/scenery/destination/2016/10/21/17/ZeMyeT.jpg.webp', '', 1);
INSERT INTO `scenic` VALUES (353, '苏州太湖湖滨国家湿地公园', NULL, NULL, '5A景区', 0, '江苏省苏州市吴中区胥香路和环太湖大道交汇处苏州太湖湖滨国家湿地公园', '8:30-17:00；游船营业时间：9:00-15:30', 'https://pic4.40017.cn/scenery/destination/2016/11/01/16/Mls3GH.jpg.webp', NULL, 1);
INSERT INTO `scenic` VALUES (354, '东山雕花楼', NULL, NULL, '5A景区', 0, '江苏省苏州市吴中区东山镇紫金路58号', '8:30-17:00', 'https://pic4.40017.cn/scenery/destination/2016/11/03/15/9rW71H.jpg.webp', NULL, 1);
INSERT INTO `scenic` VALUES (355, '苏州上方山国家森林公园', NULL, NULL, '4A景区', 1, '江苏省苏州市高新区横塘镇吴越路行春桥堍', '07:00-16:30', 'https://pic4.40017.cn/scenery/destination/2016/07/23/21/MpkImG.jpg.webp', NULL, 1);
INSERT INTO `scenic` VALUES (356, '重元寺', NULL, NULL, NULL, 0, '江苏省苏州工业园区唯亭阳澄湖半岛慈云路333号', '07:30-17:00', 'https://pic4.40017.cn/scenery/destination/2016/07/21/16/uc3rY0.jpg.webp', NULL, 2);
INSERT INTO `scenic` VALUES (357, '华谊兄弟电影世界', NULL, NULL, NULL, 0, '江苏省苏州市工业园区阳澄湖半岛度假区 ', '09:30~17:30', 'http://pic5.40017.cn/02/001/f8/c0/rBLkCVvAE9WAbLxdAAJo_OarUX8615.jpg', NULL, 2);
INSERT INTO `scenic` VALUES (358, '苏州半岛薰衣草庄园', NULL, NULL, NULL, 0, '江苏省苏州市工业园区阳澄环路999号', '09:00-16:30', 'https://pic5.40017.cn/01/000/fa/40/rBANC1vAcAeAQj53AAG1cU6-vI4742.jpg', NULL, 2);
INSERT INTO `scenic` VALUES (359, '苏州阳澄湖半岛旅游度假区', NULL, NULL, NULL, 0, ' 江苏省苏州工业园区阳澄湖环路999号阳澄湖半岛星华街游客中心 ', '9:00-17:00', 'https://pic5.40017.cn/02/001/df/04/rBLkCVr7r02AcNPzAAHYg2jgdwg076.jpg', NULL, 2);
INSERT INTO `scenic` VALUES (360, '苏州麦鲁小城', NULL, NULL, NULL, 1, '江苏省苏州工业园区圆融时代广场生活休闲区E棟圆融童乐园301室', '10:00-14:00', 'https://pic5.40017.cn/02/000/8f/18/rBANDFlCODCAeeNwAAQAAHMiFq4457.jpg', NULL, 2);
INSERT INTO `scenic` VALUES (361, '金鸡湖夜游', NULL, NULL, NULL, 0, '江苏省苏州市工业园区金鸡湖月光码头或湖西望湖阁码头', '19:30（周一至周五）和19:00（周六至周日）', 'https://pic5.40017.cn/02/000/86/ab/rBLkCFtn_deAScPpAAFkwFtgVWk282_540x304_00.jpg', NULL, 2);
INSERT INTO `scenic` VALUES (362, '白马涧 ', NULL, NULL, '4A景区', 1, '江苏省苏州新区枫桥街道白马涧生态园龙池风景区', '9:00-17:00', 'https://pic4.40017.cn/scenery/destination/2016/07/12/10/oJTgWM.jpg.webp', NULL, 3);
INSERT INTO `scenic` VALUES (363, '江苏大阳山国家森林公园文殊寺景区', NULL, NULL, '4A景区', 0, '江苏省苏州市新区浒墅关经济开发区阳山环路8号', '09:00-16:30（15:30截止换票入园）', 'https://pic4.40017.cn/scenery/destination/2016/07/20/16/K13QwY.jpg.webp', NULL, 3);
INSERT INTO `scenic` VALUES (364, '苏州太湖国家湿地公园', NULL, NULL, '4A景区', 1, '江苏省苏州高新区镇湖绣品街1号', '9:00-16:30', 'https://pic5.40017.cn/01/001/51/1d/rBLkBVtEL9WAdCAzAAJNRuHB9yM811.jpg', NULL, 3);
INSERT INTO `scenic` VALUES (365, '大阳山国家森林公园植物园景区', NULL, NULL, '4A景区', 0, '江苏省苏州市高新区浒墅关开发区南阳山路', '9:00-16:30（15:30截止换票入园）', 'https://pic5.40017.cn/01/000/80/13/rBANC1q8o0uAfKPcAALZ63DSlyA854.jpg', NULL, 3);
INSERT INTO `scenic` VALUES (366, '阳山温泉度假山庄', NULL, NULL, NULL, 1, '江苏省苏州浒墅关经济开发区阳山环路999号（石阳路往北到底）', '13:00-22:00', 'https://pic5.40017.cn/01/001/0e/c7/rBLkBlujaZ6AD_8RAAL7xm6tU6c931.jpg', NULL, 3);
INSERT INTO `scenic` VALUES (367, '白鹤寺', NULL, NULL, NULL, 0, '江苏苏州市虎丘区枫桥街道马涧路高景山 ', ' 8:00-16:00\r\n\r\n8:00-16:00', 'https://pic5.40017.cn/02/000/a5/9d/rBANDFt75z-AdnKwAATzn0dVNJ8918_800x475_00.jpg', NULL, 3);
INSERT INTO `scenic` VALUES (368, '周庄', NULL, NULL, '5A景区', 1, '江苏省苏州市昆山周庄全福路43号', '7:30-19:50', 'http://pic5.40017.cn/01/001/67/7b/rBANC1usUkKAIKEOAAIS8rNPtX4402.jpg', NULL, 4);
INSERT INTO `scenic` VALUES (369, '千灯古镇', NULL, NULL, '4A景区', 0, '江苏省昆山市千灯古镇尚书路1号 ', '8:30-16:30', 'https://pic5.40017.cn/02/001/73/dc/rBLkCFqz0MOAAzDUAAMQ2NckJSQ928.jpg', NULL, 4);
INSERT INTO `scenic` VALUES (370, '锦溪 ', NULL, NULL, '4A景区', 1, '江苏省昆山市锦溪镇', '8:00-17:00', 'https://pic4.40017.cn/scenery/destination/2016/10/31/17/5HL5ES.jpg.webp', NULL, 4);
INSERT INTO `scenic` VALUES (371, '阳澄湖水上公园游乐场', NULL, NULL, NULL, 1, '江苏省昆山市巴城镇阳澄湖旅游度假区北门游乐场售票处', '9:00-17:00', 'https://pic5.40017.cn/01/001/b8/0f/rBLkBVrhOEGAFysuAAGHsWkdmDQ107.jpg', NULL, 4);
INSERT INTO `scenic` VALUES (372, '周庄绿乐园', NULL, NULL, NULL, 1, '江苏省苏州市昆山市全旺路88号绿乐园', '8:00-17:30（暑期延长到19:00）\r\n', 'https://pic5.40017.cn/01/000/53/bd/rBLkBVtFyZiAJHsWAAE-zvWWv4I780.jpg', NULL, 4);
INSERT INTO `scenic` VALUES (373, '周庄生命奥秘博物馆', NULL, NULL, NULL, 1, '江苏省苏州昆山市周庄镇大桥路82号', '9:00-17:00', 'https://pic4.40017.cn/scenery/destination/2016/10/24/10/Ko8yg9.jpg.webp', NULL, 4);
INSERT INTO `scenic` VALUES (374, '莲花岛景区', NULL, NULL, NULL, 1, '江苏省苏州市阳澄湖旅游集散中心 ', '9:00-16:30', 'https://pic4.40017.cn/scenery/destination/2017/03/14/13/s3PdH0.jpg.webp', NULL, 5);
INSERT INTO `scenic` VALUES (375, '荷塘月色湿地公园', NULL, NULL, NULL, 1, '江苏省苏州市相城区太阳路西4575号（与广济北路交汇口西）', '8:30-16:30', 'https://pic5.40017.cn/02/001/86/94/rBLkCFtn7sWAdtjoAALA6E8IXMU299.jpg', NULL, 5);
INSERT INTO `scenic` VALUES (376, '苏州中国花卉植物园', NULL, NULL, NULL, 1, '江苏省苏州市相城区太阳路', '8:30-16:30', 'https://pic4.40017.cn/scenery/destination/2016/12/31/15/jQg2i5.jpg.webp', NULL, 5);
INSERT INTO `scenic` VALUES (377, '盛泽湖月季园', NULL, NULL, NULL, 1, '江苏省苏州相城区盛泽湖休闲度假区', '8:30–17:00', 'https://pic5.40017.cn/02/000/4d/11/rBLkCFqh7pyAHAaKAAJJdjPLgeA554.jpg', NULL, 5);
INSERT INTO `scenic` VALUES (378, '张家港市暨阳湖欢乐世界', NULL, NULL, NULL, 1, '江苏省张家港市杨舍镇暨阳湖生态园区', '09:00 - 17:00', 'https://pic4.40017.cn/scenery/destination/2016/10/13/14/7eVRxJ.jpg.webp', NULL, 6);
INSERT INTO `scenic` VALUES (379, '香山景区', NULL, NULL, '4A景区', 1, '江苏省苏州市张家港市南沙镇望江路', '04：30—21：30', 'https://pic4.40017.cn/scenery/destination/2016/10/27/15/t9ZV7P.jpg.webp', NULL, 6);
INSERT INTO `scenic` VALUES (380, '河阳山歌馆', NULL, NULL, NULL, 1, ' 江苏省张家港市凤凰镇河阳山歌馆', '8:30- 16:30', 'https://pic4.40017.cn/scenery/destination/2016/10/25/10/md9SxT.jpg.webp', NULL, 6);
INSERT INTO `scenic` VALUES (381, '恬庄古街', NULL, NULL, NULL, 1, ' 江苏省张家港市凤凰镇恬庄古街 ', '8:30-16:30', 'https://pic4.40017.cn/scenery/destination/2016/10/19/11/f8q5xm.jpg.webp', NULL, 6);
INSERT INTO `scenic` VALUES (382, '金凤凰温泉度假村', NULL, NULL, NULL, 1, '江苏省苏州张家港市凤凰镇金谷路 ', '13:00-22:00', 'https://pic3.40017.cn/scenery/destination/2015/04/18/13/8OjzTk.jpg.webp', NULL, 6);
INSERT INTO `scenic` VALUES (383, '张家港梦幻海洋王国', NULL, NULL, NULL, 1, '江苏省苏州市张家港市吾悦广场负一层', '10:00-20:00', 'https://pic4.40017.cn/scenery/destination/2016/10/19/15/foeOri.jpg.webp', NULL, 6);
INSERT INTO `scenic` VALUES (384, '太仓郑和公园', NULL, NULL, NULL, 1, '江苏省太仓市太仓港经济技术开发区南环路1号太仓郑和公园', '8:30-16:30', 'https://pic5.40017.cn/01/001/7b/88/rBANC1thaiuAWDegAAJ5RYwtxR0571.jpg', NULL, 7);
INSERT INTO `scenic` VALUES (385, '太仓现代农业园', NULL, NULL, NULL, 1, '江苏省苏州市太仓市沙溪镇岳王区新港公路南侧', '8:45-17:15', 'https://pic3.40017.cn/scenery/destination/2015/06/08/14/DWnCrf.jpg.webp', NULL, 7);
INSERT INTO `scenic` VALUES (386, '沙溪古镇', NULL, NULL, NULL, 1, ' 江苏省苏州市太仓市沙溪古镇白云路', '8:30-17:00', 'https://pic4.40017.cn/scenery/destination/2016/07/20/16/s6gqrI.jpg.webp', NULL, 7);
INSERT INTO `scenic` VALUES (387, '沙家浜 ', NULL, NULL, '5A景区', 1, '江苏省苏州市常熟市沙家浜镇锡太公路', '8:00-16:15', 'https://pic5.40017.cn/01/001/4f/18/rBLkBVtDLNSAODcjAALEMc0qhfg202.jpg', NULL, 8);
INSERT INTO `scenic` VALUES (388, '梅李聚沙园', NULL, NULL, '4A景区', 1, '江苏省常熟市梅李镇梅东路1号 ', '8:00-16:00', 'https://pic3.40017.cn/scenery/destination/2015/04/18/04/OAC6Z1.jpg.webp', NULL, 8);
INSERT INTO `scenic` VALUES (389, '常熟虞山风景区 ', NULL, NULL, '5A景区', 1, '江苏省苏州市常熟市虞山南路宝岩生态园东门', '8:00-16:00', 'https://pic4.40017.cn/scenery/destination/2016/10/25/16/qIq4r6.jpg.webp', NULL, 8);
INSERT INTO `scenic` VALUES (390, '尚湖风景区 ', NULL, NULL, '5A景区', 1, '江苏省苏州市常熟市虞山镇外西三环路尚湖景区 ', '8:10-16:10', 'https://pic4.40017.cn/scenery/destination/2016/07/23/19/JECinC.jpg.webp', NULL, 8);
INSERT INTO `scenic` VALUES (391, '蒋巷村', NULL, NULL, '4A景区', 1, '江苏省苏州市常熟市支塘镇蒋巷村', '8:00 - 16:00', 'https://pic3.40017.cn/scenery/destination/2015/04/18/15/2BL8oQ.jpg.webp', NULL, 8);
INSERT INTO `scenic` VALUES (392, '方塔园', NULL, NULL, NULL, 1, ' 江苏省苏州市常熟市环城东路靠近新颜桥', '8:00-16:00', 'https://pic4.40017.cn/scenery/destination/2016/10/26/09/JB3qiU.jpg.webp', NULL, 8);
INSERT INTO `scenic` VALUES (393, '拙政园', NULL, NULL, '5A景区', 1, '江苏省苏州市平江区东北街178号', '7:30-17:30', 'http://pic5.40017.cn/01/001/79/16/rBANC1tgOvSAHfmjAAJkmUOiXAg451.jpg', NULL, 9);
INSERT INTO `scenic` VALUES (394, '苏州狮子林', NULL, NULL, '4A景区', 1, '江苏省苏州市园林路23号 ', '7:30-17:30', 'https://pic4.40017.cn/scenery/destination/2016/10/25/14/aKaDVZ.jpg.webp', NULL, 9);
INSERT INTO `scenic` VALUES (395, '网师园', NULL, NULL, '4A景区', 1, '江苏省苏州市银杏桥北阔街头巷11号', '7:00-17:30', 'https://pic5.40017.cn/02/001/aa/37/rBLkCVnLSXKAMkVXAAKbcZlh5oE132.jpg', NULL, 9);
INSERT INTO `scenic` VALUES (396, '平江路怪楼', NULL, NULL, NULL, 1, '江苏省苏州市姑苏区平江路236号', '11:00-20:00', 'https://pic5.40017.cn/02/000/e3/43/rBLkCVubWG6AQdXyAAGPcrAeGaI897.jpg', NULL, 9);
INSERT INTO `scenic` VALUES (397, '苏州5D星空错觉艺术馆', NULL, NULL, NULL, 1, '江苏省苏州市姑苏区观前路步行街久泰商厦4楼（大成坊旁）', ' 09:00-22:00', 'https://pic5.40017.cn/02/001/b3/47/rBLkCFuDt2CADvWMAAIc2DiAyBI459_800x475_00.jpg', NULL, 9);
INSERT INTO `scenic` VALUES (398, '山塘街昆曲博物馆', NULL, NULL, NULL, 1, '江苏省苏州市姑苏区山塘街通贵桥下塘45号', '19:30-20:30', 'https://pic5.40017.cn/02/001/57/cf/rBLkCFoAJ_uAcRvLAAI-uCGU15Y045.jpg', NULL, 9);

-- ----------------------------
-- Table structure for scenicimage
-- ----------------------------
DROP TABLE IF EXISTS `scenicimage`;
CREATE TABLE `scenicimage`  (
  `scenicImageId` int(11) NOT NULL AUTO_INCREMENT,
  `image1` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `image2` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `image3` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `image4` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `image5` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenicIntroduceID` int(11) NOT NULL,
  PRIMARY KEY (`scenicImageId`) USING BTREE,
  INDEX `fk_scenicImage_scenicIntroduce1_idx`(`scenicIntroduceID`) USING BTREE,
  CONSTRAINT `fk_scenicImage_scenicIntroduce1` FOREIGN KEY (`scenicIntroduceID`) REFERENCES `scenicintroduce` (`scenicintroduceid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for scenicintroduce
-- ----------------------------
DROP TABLE IF EXISTS `scenicintroduce`;
CREATE TABLE `scenicintroduce`  (
  `scenicIntroduceID` int(11) NOT NULL AUTO_INCREMENT,
  `scenicTitle` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenicImage` int(11) NULL DEFAULT NULL,
  `scenicParagraph` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenicName` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenicLevel` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenicAddress` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `openHours` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `scenic_scenicId` int(11) NOT NULL,
  PRIMARY KEY (`scenicIntroduceID`) USING BTREE,
  INDEX `fk_scenicIntroduce_scenic1_idx`(`scenic_scenicId`) USING BTREE,
  CONSTRAINT `fk_scenicIntroduce_scenic1` FOREIGN KEY (`scenic_scenicId`) REFERENCES `scenic` (`scenicid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 53 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of scenicintroduce
-- ----------------------------
INSERT INTO `scenicintroduce` VALUES (3, NULL, NULL, NULL, '苏州市天平山风景名胜区', '4A景区', '江苏省苏州市吴中区灵天路 ', '7:30-17:00', 350);
INSERT INTO `scenicintroduce` VALUES (4, NULL, NULL, NULL, '穹窿山(苏州太湖旅游区)', '4A景区', '江苏省苏州市吴中区穹窿山风景区苏州绕城高速光福路出口下1公里', '8:30-16:30，入园时间截止16:00。', 351);
INSERT INTO `scenicintroduce` VALUES (5, NULL, NULL, NULL, '甪直古镇', '4A景区', '江苏省苏州城东南25公里', '8:00-17:00（游船时间：8:30-16:00）', 352);
INSERT INTO `scenicintroduce` VALUES (6, NULL, NULL, NULL, '苏州太湖湖滨国家湿地公园', '5A景区', '江苏省苏州市吴中区胥香路和环太湖大道交汇处苏州太湖湖滨国家湿地公园', '8:30-17:00；游船营业时间：9:00-15:30', 353);
INSERT INTO `scenicintroduce` VALUES (7, NULL, NULL, NULL, '东山雕花楼', '5A景区', '江苏省苏州市吴中区东山镇紫金路58号', '8:30-17:00', 354);
INSERT INTO `scenicintroduce` VALUES (8, NULL, NULL, NULL, '苏州上方山国家森林公园', '4A景区', '江苏省苏州市高新区横塘镇吴越路行春桥堍', '07:00-16:30', 355);
INSERT INTO `scenicintroduce` VALUES (9, NULL, NULL, NULL, '重元寺', NULL, '江苏省苏州工业园区唯亭阳澄湖半岛慈云路333号', '07:30-17:00', 356);
INSERT INTO `scenicintroduce` VALUES (10, NULL, NULL, NULL, '华谊兄弟电影世界', NULL, '江苏省苏州市工业园区阳澄湖半岛度假区 ', '09:30~17:30', 357);
INSERT INTO `scenicintroduce` VALUES (11, NULL, NULL, NULL, '苏州半岛薰衣草庄园', NULL, '江苏省苏州市工业园区阳澄环路999号', '09:00-16:30', 358);
INSERT INTO `scenicintroduce` VALUES (12, NULL, NULL, NULL, '苏州阳澄湖半岛旅游度假区', NULL, ' 江苏省苏州工业园区阳澄湖环路999号阳澄湖半岛星华街游客中心 ', '9:00-17:00', 359);
INSERT INTO `scenicintroduce` VALUES (13, NULL, NULL, NULL, '苏州麦鲁小城', NULL, '江苏省苏州工业园区圆融时代广场生活休闲区E棟圆融童乐园301室', '10:00-14:00', 360);
INSERT INTO `scenicintroduce` VALUES (14, NULL, NULL, NULL, '金鸡湖夜游', NULL, '江苏省苏州市工业园区金鸡湖月光码头或湖西望湖阁码头', '19:30（周一至周五）和19:00（周六至周日）', 361);
INSERT INTO `scenicintroduce` VALUES (15, NULL, NULL, NULL, '白马涧 ', '4A景区', '江苏省苏州新区枫桥街道白马涧生态园龙池风景区', '9:00-17:00', 362);
INSERT INTO `scenicintroduce` VALUES (16, NULL, NULL, NULL, '江苏大阳山国家森林公园文殊寺景区', '4A景区', '江苏省苏州市新区浒墅关经济开发区阳山环路8号', '09:00-16:30（15:30截止换票入园）', 363);
INSERT INTO `scenicintroduce` VALUES (17, NULL, NULL, NULL, '苏州太湖国家湿地公园', '4A景区', '江苏省苏州高新区镇湖绣品街1号', '9:00-16:30', 364);
INSERT INTO `scenicintroduce` VALUES (18, NULL, NULL, NULL, '大阳山国家森林公园植物园景区', '4A景区', '江苏省苏州市高新区浒墅关开发区南阳山路', '9:00-16:30（15:30截止换票入园）', 365);
INSERT INTO `scenicintroduce` VALUES (19, NULL, NULL, NULL, '阳山温泉度假山庄', NULL, '江苏省苏州浒墅关经济开发区阳山环路999号（石阳路往北到底）', '13:00-22:00', 366);
INSERT INTO `scenicintroduce` VALUES (20, NULL, NULL, NULL, '白鹤寺', NULL, '江苏苏州市虎丘区枫桥街道马涧路高景山 ', ' 8:00-16:00\r\n\r\n8:00-16:00', 367);
INSERT INTO `scenicintroduce` VALUES (21, NULL, NULL, NULL, '周庄', '5A景区', '江苏省苏州市昆山周庄全福路43号', '7:30-19:50', 368);
INSERT INTO `scenicintroduce` VALUES (22, NULL, NULL, NULL, '千灯古镇', '4A景区', '江苏省昆山市千灯古镇尚书路1号 ', '8:30-16:30', 369);
INSERT INTO `scenicintroduce` VALUES (23, NULL, NULL, NULL, '锦溪 ', '4A景区', '江苏省昆山市锦溪镇', '8:00-17:00', 370);
INSERT INTO `scenicintroduce` VALUES (24, NULL, NULL, NULL, '阳澄湖水上公园游乐场', NULL, '江苏省昆山市巴城镇阳澄湖旅游度假区北门游乐场售票处', '9:00-17:00', 371);
INSERT INTO `scenicintroduce` VALUES (25, NULL, NULL, NULL, '周庄绿乐园', NULL, '江苏省苏州市昆山市全旺路88号绿乐园', '8:00-17:30（暑期延长到19:00）\r\n', 372);
INSERT INTO `scenicintroduce` VALUES (26, NULL, NULL, NULL, '周庄生命奥秘博物馆', NULL, '江苏省苏州昆山市周庄镇大桥路82号', '9:00-17:00', 373);
INSERT INTO `scenicintroduce` VALUES (27, NULL, NULL, NULL, '莲花岛景区', NULL, '江苏省苏州市阳澄湖旅游集散中心 ', '9:00-16:30', 374);
INSERT INTO `scenicintroduce` VALUES (28, NULL, NULL, NULL, '荷塘月色湿地公园', NULL, '江苏省苏州市相城区太阳路西4575号（与广济北路交汇口西）', '8:30-16:30', 375);
INSERT INTO `scenicintroduce` VALUES (29, NULL, NULL, NULL, '苏州中国花卉植物园', NULL, '江苏省苏州市相城区太阳路', '8:30-16:30', 376);
INSERT INTO `scenicintroduce` VALUES (30, NULL, NULL, NULL, '盛泽湖月季园', NULL, '江苏省苏州相城区盛泽湖休闲度假区', '8:30–17:00', 377);
INSERT INTO `scenicintroduce` VALUES (31, NULL, NULL, NULL, '张家港市暨阳湖欢乐世界', NULL, '江苏省张家港市杨舍镇暨阳湖生态园区', '09:00 - 17:00', 378);
INSERT INTO `scenicintroduce` VALUES (32, NULL, NULL, NULL, '香山景区', '4A景区', '江苏省苏州市张家港市南沙镇望江路', '04：30—21：30', 379);
INSERT INTO `scenicintroduce` VALUES (33, NULL, NULL, NULL, '河阳山歌馆', NULL, ' 江苏省张家港市凤凰镇河阳山歌馆', '8:30- 16:30', 380);
INSERT INTO `scenicintroduce` VALUES (34, NULL, NULL, NULL, '恬庄古街', NULL, ' 江苏省张家港市凤凰镇恬庄古街 ', '8:30-16:30', 381);
INSERT INTO `scenicintroduce` VALUES (35, NULL, NULL, NULL, '金凤凰温泉度假村', NULL, '江苏省苏州张家港市凤凰镇金谷路 ', '13:00-22:00', 382);
INSERT INTO `scenicintroduce` VALUES (36, NULL, NULL, NULL, '张家港梦幻海洋王国', NULL, '江苏省苏州市张家港市吾悦广场负一层', '10:00-20:00', 383);
INSERT INTO `scenicintroduce` VALUES (37, NULL, NULL, NULL, '太仓郑和公园', NULL, '江苏省太仓市太仓港经济技术开发区南环路1号太仓郑和公园', '8:30-16:30', 384);
INSERT INTO `scenicintroduce` VALUES (38, NULL, NULL, NULL, '太仓现代农业园', NULL, '江苏省苏州市太仓市沙溪镇岳王区新港公路南侧', '8:45-17:15', 385);
INSERT INTO `scenicintroduce` VALUES (39, NULL, NULL, NULL, '沙溪古镇', NULL, ' 江苏省苏州市太仓市沙溪古镇白云路', '8:30-17:00', 386);
INSERT INTO `scenicintroduce` VALUES (40, NULL, NULL, NULL, '沙家浜 ', '5A景区', '江苏省苏州市常熟市沙家浜镇锡太公路', '8:00-16:15', 387);
INSERT INTO `scenicintroduce` VALUES (41, NULL, NULL, NULL, '梅李聚沙园', '4A景区', '江苏省常熟市梅李镇梅东路1号 ', '8:00-16:00', 388);
INSERT INTO `scenicintroduce` VALUES (42, NULL, NULL, NULL, '常熟虞山风景区 ', '5A景区', '江苏省苏州市常熟市虞山南路宝岩生态园东门', '8:00-16:00', 389);
INSERT INTO `scenicintroduce` VALUES (43, NULL, NULL, NULL, '尚湖风景区 ', '5A景区', '江苏省苏州市常熟市虞山镇外西三环路尚湖景区 ', '8:10-16:10', 390);
INSERT INTO `scenicintroduce` VALUES (44, NULL, NULL, NULL, '蒋巷村', '4A景区', '江苏省苏州市常熟市支塘镇蒋巷村', '8:00 - 16:00', 391);
INSERT INTO `scenicintroduce` VALUES (45, NULL, NULL, NULL, '方塔园', NULL, ' 江苏省苏州市常熟市环城东路靠近新颜桥', '8:00-16:00', 392);
INSERT INTO `scenicintroduce` VALUES (46, NULL, NULL, NULL, '拙政园', '5A景区', '江苏省苏州市平江区东北街178号', '7:30-17:30', 393);
INSERT INTO `scenicintroduce` VALUES (47, NULL, NULL, NULL, '苏州狮子林', '4A景区', '江苏省苏州市园林路23号 ', '7:30-17:30', 394);
INSERT INTO `scenicintroduce` VALUES (48, NULL, NULL, NULL, '网师园', '4A景区', '江苏省苏州市银杏桥北阔街头巷11号', '7:00-17:30', 395);
INSERT INTO `scenicintroduce` VALUES (49, NULL, NULL, NULL, '平江路怪楼', NULL, '江苏省苏州市姑苏区平江路236号', '11:00-20:00', 396);
INSERT INTO `scenicintroduce` VALUES (50, NULL, NULL, NULL, '苏州5D星空错觉艺术馆', NULL, '江苏省苏州市姑苏区观前路步行街久泰商厦4楼（大成坊旁）', ' 09:00-22:00', 397);
INSERT INTO `scenicintroduce` VALUES (51, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 398);
INSERT INTO `scenicintroduce` VALUES (52, NULL, NULL, NULL, '山塘街昆曲博物馆', NULL, '江苏省苏州市姑苏区山塘街通贵桥下塘45号', '19:30-20:30', 398);

-- ----------------------------
-- Table structure for sceniclocation
-- ----------------------------
DROP TABLE IF EXISTS `sceniclocation`;
CREATE TABLE `sceniclocation`  (
  `scenicLocationId` int(11) NOT NULL AUTO_INCREMENT,
  `locationName` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`scenicLocationId`) USING BTREE,
  INDEX `scenicLocationId`(`scenicLocationId`) USING BTREE,
  INDEX `scenicLocationId_2`(`scenicLocationId`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 10 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sceniclocation
-- ----------------------------
INSERT INTO `sceniclocation` VALUES (1, 'wuzhongqu');
INSERT INTO `sceniclocation` VALUES (2, 'yuanqu');
INSERT INTO `sceniclocation` VALUES (3, 'gaoxinqu');
INSERT INTO `sceniclocation` VALUES (4, 'kunshan');
INSERT INTO `sceniclocation` VALUES (5, 'xiangcheng');
INSERT INTO `sceniclocation` VALUES (6, 'zhangjiagang');
INSERT INTO `sceniclocation` VALUES (7, 'taicang');
INSERT INTO `sceniclocation` VALUES (8, 'changshu');
INSERT INTO `sceniclocation` VALUES (9, 'gusuqu');

-- ----------------------------
-- Table structure for travelnote
-- ----------------------------
DROP TABLE IF EXISTS `travelnote`;
CREATE TABLE `travelnote`  (
  `travelNoteId` int(11) NOT NULL AUTO_INCREMENT,
  `travelTitle` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `travelNoteContent` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `travelNoteImage` varchar(300) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `hotNote` int(1) UNSIGNED NULL DEFAULT 0,
  `manageCheck` int(11) NULL DEFAULT NULL,
  `userId` int(11) NOT NULL,
  `travelNotePriseNum` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`travelNoteId`) USING BTREE,
  INDEX `fk_游记表_user 用户信息1_idx`(`userId`) USING BTREE,
  INDEX `travelNoteId`(`travelNoteId`) USING BTREE,
  INDEX `travelNoteId_2`(`travelNoteId`) USING BTREE,
  INDEX `travelNoteId_3`(`travelNoteId`) USING BTREE,
  INDEX `travelNoteId_4`(`travelNoteId`) USING BTREE,
  INDEX `travelNoteId_5`(`travelNoteId`) USING BTREE,
  INDEX `travelNoteId_6`(`travelNoteId`) USING BTREE,
  INDEX `travelNoteId_7`(`travelNoteId`) USING BTREE,
  CONSTRAINT `fk` FOREIGN KEY (`userId`) REFERENCES `user` (`userid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 19 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of travelnote
-- ----------------------------
INSERT INTO `travelnote` VALUES (2, '夜逛七里山塘', '七里山塘又名七狸山塘，正式名称为山塘街，是江苏苏州金阊区一条有将近1200年历史的步行街，西起虎丘山下席场弄，东到阊门外古运河上的渡僧桥，全长3829.6米。\r\n\r\n唐宝历二年（825年），大诗人白居易从杭州调任苏州刺史，为了便利苏州水陆交通，开凿了一条西起虎丘东至阊门的山塘河，山塘河河北修建道路，称为“山塘街”，山塘河和山塘街长约七里，叫“七里山塘”。自古山塘街有“姑苏第一名街”之称。\r\n\r\n山塘街和山塘河有典型江南水乡的风貌，家家户户前街后河，河上小船来往如梭，街上店铺林立。横跨河上的古桥有7座：山塘桥、通贵桥（又名瑞云桥）、星桥、彩云桥（又名半塘桥）、普济桥、望山桥（曾名便山桥）和西山庙桥，竖贯堤上的古桥有8座：白姆桥、毛家桥、桐桥（曾名洞桥、胜安桥）、白公桥、青山桥、绿水桥、斟酌桥和万点桥，而对岸竖贯之桥也是八座，有同善桥（小普济桥）、引善桥等。其中山塘桥、彩云桥、便山桥和洞桥四座桥建于宋代以前。其中通贵桥旁是明代南京吏部尚书吴一鹏的府第。星桥是昔日商业最繁盛的所在。西山庙桥南北两堍分别是花神庙和西山庙。而斟酌桥是山塘河、东山浜、野芳浜的交汇处，是当年画舫云集的所在，桥东堍的花园弄花香袭人，有不少诗词赞美斟酌桥畔的风光，例如：“斟酌桥头花草香，画船载酒醉斜阳。桥边水作鹅黄色，也逐笙歌过半塘。”、“半塘春水绿如渑，赢得桥留斟酌名。桥外酒帘轻扬处，画船箫鼓正酣声。”', 'https://pic5.40017.cn/02/001/46/d4/rBANDFs-lc2ALJEGAAHQf63SO2g480_750x_00.jpg', 1, NULL, 855, 20);
INSERT INTO `travelnote` VALUES (3, '千年斜塔，雨落虎丘 ', '苏州 人盼了3年的\r\n梦幻喷泉将重新上演！\r\n说说这次旅行\r\n我本是江南人，生于江南长于江南，江南的雨看的多，江南的小桥流水也遇见的很多，所以这里的风景一向甚少能引起的兴趣。大学的四年，我暂居苏州，春时、夏至、秋分、冬雪，每个季节的景色都看遍，唯有虎丘，四年的时间里，我只来过一次。\r\n上一次来虎丘，也是秋日，江南的秋，一直都是我最喜欢的季节。\r\n这一次再来虎丘，我已经毕业，离开苏州有三个多月了。这三个月里我从未回来过，可是刚刚下高铁的瞬间，还是觉得异常的亲切。\r\n【关于行程】\r\n9月23日，秋分。俗话说，秋风起，蟹脚痒。是啊，又到了一年吃大闸蟹的季节了。但是我们这种从小这个季节吃大闸蟹的人来说，这个时间远远还没有到大闸蟹肥美的季节。\r\n每年的9月，苏州的虎丘都会开始有庙会表演，持续时间约有一个月，值得一来\r\n23号一日，就只在虎丘一个景区里。\r\n【关于苏州】\r\n苏州，古称吴，简称为苏，又称姑苏、平江等，是国家历史文化名城和风景旅游城市。苏州属亚热带季风海洋性气候，四季分明，雨量充沛。种植水稻、小麦、油菜，出产棉花、蚕桑、林果，特产有碧螺春茶叶、长江刀鱼、太湖银鱼、阳澄湖大闸蟹等。\r\n【关于交通】\r\n苏州和无锡中间有一个苏南硕放机场，不过机场不大，吞吐量也不高，所以习惯性苏州人出行还是会选择上海浦东或者虹桥飞。\r\n苏州有很多高铁，每天往返于南京上海的铁路有几十趟，但节假日还是要提前购票，不然还是会买不到票。\r\n苏州汽车站有汽车南站、汽车北站，往省内绝大部分都有汽车。吴中汽车站可以到省内周庄、吴江之内的地方。\r\n内部交通\r\n苏州现在有地铁1号线、2号线、4号线，公交也很方便。\r\n【关于美食】\r\n苏式美食有很多，以甜为主。\r\n中秋季节最特色的的就是鲜肉月饼。其他的传统特色美食如松鼠桂鱼、响油鳝糊、碧落虾仁等。\r\n【关于虎丘】\r\n虎丘山海拔34.3米，面积0.19平方公里。景区现有面积100公顷，保护区面积475.9公顷，作为苏州的一个重要旅游窗口，虎丘屡获殊荣，先后被评为全国首批十佳文明风景旅游区示范点，国家AAAAA级旅游景区，全国文明单位。虎丘，原名海涌山，据《史记》记载，吴王阖闾葬于此，传说葬后三日有“白虎蹲其上”，故名虎丘。又一说为“丘如蹲虎”，以形为名。\r\n\r\n\r\n虎丘主景，传说众多\r\n虎丘山海拔34.3米，面积0.19平方公里。山体由侏罗系火山岩浆构成，千人石、试剑石、剑池等山石为流纹岩。虎丘山往东、北、西三个方向的整个平原地区第四系冲积层之下都分布着侏罗系火山岩。\r\n我曾暂居苏州五载，苏州大大小小的景也基本都走过，虎丘自然也不会例外。两年前来虎丘的时候，也是这样的秋天，秋高气爽最是适合出门逛逛了，也恰巧赶上了庙会，不过当初逛的并不仔细，两个小时就走马观花的走了一遭然后离开了。\r\n而这一次来，终于完完整整的浏览了一遭，那些曾经经过，却不知道典故的地方也终于都弄了明白。', 'https://tcw-public.b0.upaiyun.com/youji/2017-09-26/1852img11506414464070gXAJL.jpg!w800', 1, NULL, 844, 33);
INSERT INTO `travelnote` VALUES (4, '暑期苏州乐园之行', '　今天下午和妈妈去苏州乐园玩。我们有一张苏州乐园的卡，我们刷卡进去的。进去以后我们想先坐森林小火车，不过管理员说森林小火车半个小时以后才开。我和妈妈就先去玩具那儿玩了一会儿。我玩得正高兴，突然妈妈喊我，说“森林小火车来啦!”。我赶快去坐森林小火车。森林小火车开动以后，我顺手拔了几片小树叶。森林小火车绕着乐园转了一圈。我看到了许多玩具，还看见了瀑布，瀑布的水被风吹到了我们的脸上，感觉真凉快!瀑布象一块雪白的布，在太阳下闪闪发光。我们还经过了一个山洞，里面有一点点光，我一点也不害怕。森林小火车在路上有两处停靠点，一个是在一座桥，还有一个是在太空飞船那里。最后森林小火车开进了一个画满宇宙飞船的山洞。我感觉好像来到了太空一样，真好玩啊! 我们下了森林小火车又去玩了一会滑滑梯。后来我们又去了小小世界.一进门我们就看见五颜六色的灯一闪一闪的，真好看!我们坐上了一条黄色的船，船上只有我和妈妈两个人.我们坐船先到了世界风情，那里有很多人物，比如阿凡提，买火柴的小女孩，哪吒......又到了动物世界，里面有许多动物比如小鸟，海豚，海象，海豹......小船又经过童话世界，里面有许多童话故事力的主人公，象白雪公主和七个小矮人，葫芦娃，忍者神龟......让我想起很多有趣的动画片.最后小船快到终点时看到许多用不同国家语言写成的\"再见\"，我只看的懂中文的\"再见\".我们又去沙滩玩了一会，我在那捉了一会小鱼就回家了.今天我玩的可真高兴!', 'https://pic5.40017.cn/01/000/39/40/rBANC1s2b8CAJ5fiAAC7p_kqtr8920_750x_00.jpg', 1, NULL, 832, 25);
INSERT INTO `travelnote` VALUES (8, '慢游苏州太湖三山岛，看最美太湖日落', '虽然距离太湖不是很远，但一直还未前去一探，眼看秋天来了，天气凉爽了起来，但伴随着的阴雨天气潮闷也紧接着而来。于是，周末约了几个朋友准备去太湖转转，如果有可能环太湖一圈那就更好了。\r\n  太湖，是中国五大淡水湖之一，湖岸线漫长，自然风光优美，且拥有众多形态不一的岛屿，其中这些岛屿中以太湖三山岛最为出名，三山岛由北山、行山、小姑山三座山峰组成，名字也由此而来。同时这里也是国家湿地公园，山水相依，面积虽不大却风光秀丽，明代称之为小蓬莱，故有“太湖蓬莱”的美誉，犹如世外桃源一般隐匿于太湖之中。\r\n  在三山岛的那两天真的不要太惬意，清晨或傍晚岛上闲逛，中午找地方喝喝茶，骑骑单车采采果子，虽然不能环湖但也可以泛舟湖上，尽享湖光山色。这里也比较适合悠闲放松，比较慢节奏的生活，原生态的风景，一派返朴归真的乡野气息，如果能多住上几日也是挺不错的。来到岛上可以买票乘坐游览车游玩，也可以徒步游览，由于岛屿并不是很大，建议徒步游览，当然如果不愿意走太多路也可以租这里的自行车，环湖路相对平缓，比较好骑。我们的游览起点是在这块牌坊前，开始徒步游览三山岛。牌坊上有对联：万顷碧波粼粼泊泊来，三春清风徐徐阵阵至，横批：湖光山色，往后可见“太湖蓬莱”四个大字，描绘的便是此处的太湖水以及岛上清风袅袅的景象，让人心旷神怡。\r\n\r\n', 'https://pic5.40017.cn/03/000/98/0b/rB5oQFu8BgCAWOM3AA2UAI1KnRs316_750x_00.jpg', 1, NULL, 866, 40);
INSERT INTO `travelnote` VALUES (10, '穿越人海 の苏州、同里、周庄三日游 ', '拙政园位于娄门内东北街178号，是苏州园林中最大的，也是最著名的一座拙政园始建于明代，王献臣是该园第一位主人。他在嘉靖、正德年间，官居监察御史，晚年仕途不得意，罢官而归，买地造园，借《闲居赋》“拙者之为政”句意，取名为拙政园。园内主要景点有：兰雪堂、芙蓉榭、秫香馆、放眼亭、远香堂、小沧浪、留亭阁、浮翠阁等。\r\n\r\n交通路线：从苏州火车站坐40路西线、202路公交车到齐门站下车步行几百米即可到达。\r\n门票：旺季￥90，景区售票处有好几个，但是入园还是要从东北街南门这个入口进。我国的建筑，从古代的宫殿到近代的一般住房，绝大部分是对称的，左边怎么样，右边也怎么样。苏州园林完全没有在讲究对称，可是也很美，不过有点感觉身在迷宫，也可能是因为人太多的原因。苏州园林在每一个角落都注意图画美。阶砌旁边栽几丛书带草。墙上蔓延着爬山虎或者蔷薇木香。如果开窗正对着白色墙壁，太单调了，给补上几竿竹子或几棵芭蕉。诸如此类。我家附近的公园怎么就只是一个亭子，种些花呢？苏州园林里的门和窗，图案设计和雕镂琢磨功夫都是工艺美术的上品。大致说来，那些门和窗工细而决不庸俗，即使简朴而别具匠心。', 'https://pic5.40017.cn/01/000/35/04/rBLkBls05f6Adqe0AAEmbWuHpC4727_750x_00.jpg', 2, NULL, 1, 50);
INSERT INTO `travelnote` VALUES (11, '我和苏州一直有个约会', '当杭州等城市大刀阔斧赶现代化进程的时候，苏州像一个傲娇大家闺秀，丝毫没有打乱自己的信仰，依旧古朴韵律的节奏着。古城区不得肆意建造高楼大厦，新区却另辟道路繁花似锦， 两区功能划分明确，互不打扰，如此便是我最爱这座城市的地方了。\r\n几年间从上海去过无数次苏州了，今年才想着专心写一下这座处处见细节之美的城市。 \r\n建议其实比较随意，不是告诉各位亲们，怎样住宿怎么样吃喝，因为我坚持100个人心中会有100个苏州。 \r\n与其写这个，不如说下不得不去的一些地方吧。 \r\n比如【平江路】和【拙政园】虽然是爆款，但却有它经久不衰的理由。 \r\n除了老景点，每年递增的小资地点也值得一去。比如【李公堤】的一些酒吧，比如【凤凰文化广场】的【自在复合书店】，比如【圆融广场】摩天轮附近的水边，可以沿着走一圈。每一个季节的苏州，都是另一种美。\r\n【夏天的苏州】由于江南的闷热暑气，最适合去园林里坐一坐，郁郁葱葱的树枝，还有洋洋洒洒的荷叶衬托着娇嫩的荷花，园林里的温度要比外面低上了好几度。\r\n【冬日的苏州】我更愿意缩在平江路一条街，吃喝下午茶都在这里解决了。有时候啃20只卤鸡脚，喝杯茶叶，在河边可以欢喜的坐上一下午。没来苏州园林前，常听人说起，移步换景。 半信半疑之间，拿着单反就这么杀进园子。发现果不其然。每走几步，构图景色就完全不一样；并且园林常常用到“借景”的手法，很有层次。\r\n\r\n', 'https://pic5.40017.cn/02/001/35/40/rBLkCVs068KAcpKEAAKm7DJmGTU363_750x_00.jpg', 2, NULL, 869, 25);
INSERT INTO `travelnote` VALUES (12, '苏州.山塘街随拍', '山塘街历史悠久，始建于唐代宝历年间，是国家AAAA级旅游景区，被称誉为“姑苏第一名街”。此街位于古城苏州的西北部，东连“红尘中一、二等富贵风流之地”（《红楼梦》中描述）阊门，西接“吴中第一名胜”虎丘，全长约3600米，为唐代白居易率众修成。后人称之“白公堤”，又因堤长七华里，称为七里山塘。山塘街因其独特的地理位置和优越的水陆交通条件，曾是明清时期商贸、文化最为发达的街区之一。“上有天堂，下有苏杭。杭州有西湖，苏州有山塘。两处好地方，无限好风光。”这便是对山塘街的生动写照。山塘街东段导览图。七里山塘上有诸多的古寺、古祠、古牌坊、古会馆……这些古建筑，精雕细刻，古色古香，一派岁月沧桑感；还有耳熟能详的半塘传说，陈圆圆、董小宛等，装点了山塘的婉约一面，《山塘绝句》中就有“山塘满路皆脂粉”的句子；但五人墓和葛贤墓，却给游客留下另一种感慨。山塘街可以分为东西两段，东段从阊门渡僧桥起至半塘桥，这一段大多是商铺和住家，各种商店一家挨着一家，东段又以星桥一带最为热闹繁华。山塘街的西段指半塘桥至虎丘山。这一段渐近郊外，河面比东段要开阔，河边或绿树成荫、芳草依依，或蒹葭苍苍、村舍野艇。\r\n\r\n', 'https://pic5.40017.cn/01/001/33/fc/rBANC1s0zriAC57uAAF38YS8mhE572_750x_00.jpg', 2, NULL, 868, 34);
INSERT INTO `travelnote` VALUES (13, '那日花开，在苏州最隐逸的园林', '艺圃前身是明代进士袁祖庚所建的醉颖堂。袁官至浙江按察副使(考核官吏、管理司法的官)，四十岁后辞官退隐，在此造宅园，悬挂匾额曰“城市山林”。1659年，清初为明崇祯进士姜埰（号敬亭，山东莱阳人）辗转寓居苏州，成了艺圃的第三任主人，并改药圃为颐圃、敬亭山房。姜埰逝世，次子姜实节又将敬亭山房改名为艺圃。后来此园又数易其主，但园名仍叫艺圃。道光十九年（公元1839年）绸缎同业立为“七襄公所”，现留有小篆匾额。到了民国初，由于经济问题，园内房屋出租为民宅，艺圃变得支离零落，破败不堪。上世纪80年代，政府出资对其进行了完整修缮，2001年又把东部住宅部分收归艺圃，修复开放。艺圃的第二任主人是明代状元文震孟（文征明之曾孙），官至大学士，改“醉颖堂”名为“药圃”，文震孟尽管地位愈来愈高，但在艺圃却从未扩充过一分土地、加建过一楹房屋，基本上保存了“醉颖堂”时期“写意山水园”的特色。修缮后的窗是典型的明式格子窗，窗外的亭子就是艺圃有名的“乳鱼亭”，同样体现了明代的风格，据说部分构件为明代遗物。', 'https://pic5.40017.cn/01/000/57/ec/rBANC1tIt7eAC46qAAHvVZJbFWM418_750x_00.jpg', 2, NULL, 855, 25);
INSERT INTO `travelnote` VALUES (14, '倾“姑苏城外寒山寺”而往 ', '啊~~~先让本地瓜感叹几句。\r\n中秋节去的姑苏,然后上上上星期才把图片找好,顺便修了一下。新手,照片修的不好,纯属按照个人的喜好来修的(虽然说本地瓜的品味有待提升),打开这个网页的各位也别叨逼叨,我自己知道就好了~颜色什么呀~配色什么呀~要多浮夸有多浮夸~我也造,毕竟我自己都看不下去了,嗯~额!~懒癌患者。\r\n因为我是中秋节去的,所以说你们懂呀!!!那就是人多呀~多~呀~虽然说下着雨~但是也阻挡不了人们的热情~对,就是这么热情。\r\n“姑苏城外寒山寺,夜半钟声到客船”\r\n小时候,学习这首诗词的时候就蛮有赶脚的,印象蛮深刻的。直到长大了之后才知道姑苏原来就是苏州。\r\n一心念念叨叨的江南怎么能少得了苏州呢?\r\n直到中秋的前一个周这个念头才越发的强烈起来了,于是就开始定各种票,网上搜罗各种攻略:哪里好玩呀?什么好吃呀?天气怎么样?要穿什么呀?\r\n在我的三观里,不存在什么说走就走的旅行,没有目的的旅行称之为旅游。为了留出肚子来吃苏州的小吃,我在逛完了拙政园之后去全家…… 全家…… 买了三明治!~对你木有看错!就是三明治~\r\n社交软件上一搜,苏州松鹤楼的松鼠鱼蛮有名字的……但是好大一条……太甜太腻……我选择了放弃……投奔了桂花糕……生煎……糕点的怀抱……\r\nps:对了,每个景点都有客服中心,里面有电视讲解这个景点的历史故事,还有免费的导游讲解,不够有些要凑够人数……也有讲解机……这种地方最好跟着听一听,毕竟中国文化博大精深嘛~我跟着听了一点点的~不全~所以下面基本是我的碎碎念和照片~毕竟网上游记辣么多~百度都有介绍~我是按照我行走的步伐来排照片的~\r\n在ps:票都是在网络上买的,进景点的时候有的直接刷身份证就好,但是,寒山寺需要取票之后,拿票根进去的~', 'https://pic5.40017.cn/02/001/6a/02/rBLkCVtVeTiAB19lAAEYhhG11kw847_750x_00.jpg', 0, NULL, 832, 25);
INSERT INTO `travelnote` VALUES (15, '苏州 闲散林木，渎一无二，古镇风韵', '门对香溪，背靠灵岩，\r\n乾隆皇帝每次下江南游木渎古镇的时候，必到虹饮山房，\r\n在这里游园、看戏、品茗、吟诗，直到夜色降临，才依依不舍离去。\r\n古松园内的罗汉松，苍翠虬劲。榜眼府第的石雕，精美至极。品尝完最美味的藏书羊肉，来到这里，没想到白象这么大，\r\n闲闲散散地沉浸在秋林中，花儿依然绽放，还和小伙伴们玩了玩真人CS。\r\n\r\n苏州素来以山水秀丽、园林典雅而闻名天下，\r\n有“江南园林甲天下，苏州园林甲江南”的美称，\r\n又因其小桥流水人家的水乡古城特色，有“东方水都”之称。\r\n如同苏州的精致园林一般，姑苏的春色，也是伴着吴侬软语，和着咿呀的江南小调，悄然显露。苏州，就是这需要慢步细行的温柔乡。“苏州园林甲天下”，苏州园林是建筑、山水、花木、雕刻、书画的综合艺术品，集自然美和艺术美于一体，构成了曲折迂回、步移景换的画面。除此之外，水乡古镇也是苏州的一大特色，四面环水，古代只有舟船与外界相通，所以街区和建筑保存完好。木渎古镇的历史同苏州古城一样悠久，这座水乡古镇本身稀松平常，沿着主街山塘街自西向东排布的古典园林严家花园、虹饮山房、古松园、榜眼府第，倒是带来了“园林古镇”的特色。\r\n伴着木渎山塘街的香溪和伍子胥率众开挖的人工运河胥江在东部的古桥斜桥下相汇，坐游船在充满历史故事的河道上晃晃悠悠，再听船娘用吴侬软语唱一曲也很不错。', 'https://pic5.40017.cn/02/000/4d/62/rBANDFtCd1WAW6SvAAJ6SsVUnks285_750x_00.jpg', 0, NULL, 844, 24);
INSERT INTO `travelnote` VALUES (16, '实拍太湖边壮丽璀璨的夕阳美景', '明天又要出门，去南岳衡山参加南岳摄影大赛，领略南岳的冬日美景，今天就再发一组苏州的片子，看看苏州太湖边东山岛上一次壮丽璀璨的夕阳美景吧！   我们是12月30日那天在同里用完午餐后，坐车赶往东山岛的。先在太湖码头坐游船，在烟波浩渺的太湖转了转，然后到达东山岛东部的启园。在启园转了一圈后，在太阳将要落山的半个多小时前，赶到了拍摄夕阳之地，湖滨公路旁一处比较开阔的地方。\r\n先看看启园吧，启园的园址原名叶家浜，是一处始建于民国时代的汉族古典园林建筑。原为民国实业家席启荪的私家花园，俗称席家花园，1933年席氏为纪念其上祖在此迎候康熙皇帝而兴建，占地50余亩。启园为江南不多见的山麓湖滨园林，依山而筑，傍湖而立，介乎山水之间。1984年被国务院批准列为太湖风景名胜区主要景点之一，经政府多次拨款整修扩建，才具今日之风貌。游罢启园，就在太湖东山镇外临湖的一条公路旁，拍到了这次日落。说实话，那天的日落很一般，日落时天空中没有云，光比大，光线强，俺加了“反渐变”镜，效果都很一般。直到太阳由亮到白，由白到黄，由黄到红，成了一轮红日以后，才有了“太湖夕阳”那壮丽璀璨的感觉，呵呵：', 'https://pic5.40017.cn/02/000/38/5e/rBLkCFs1utGANBLiAAC9pvx-ulk812_750x_00.jpg', 0, NULL, 865, 3);
INSERT INTO `travelnote` VALUES (17, '苏州园林—小游网师园', '网师园，一个富有诗意的名字，在苏州，名气不及拙政园，留园，却也是精致苏州园林的代表之作，敢问姑苏园林如此之多，而外国友人们却独爱网师园，这是为何？这座园子小而精的特性，的确最能代表园林意境。这可得从1978年说起呢。  \r\n\r\n1978年，美国纽约大都会艺术博物馆的友好人士来苏州 参观游览，被这里的 园林所陶醉 ，决意在其馆中建一座园林建筑。经过和苏州方面商谈，最后 决定仿照网师园的 殿春簃小院， 为了让美国 人民欣赏 中中国 的园林艺术 。这座园子最后 取名为“明轩”。 明轩由苏州园林工匠设计建造，一下子轰动了纽约 、轰动了美国 。施工期间，美国前总统 尼克松几次前去 参观 。明轩作为苏州园林的代表，开创了中国园林艺术 走出国门的先河。可能就是这个原因，导致每天来这里参观的外国人特别多，这里也是苏州园林中唯一开放也花园的地方，晚上在这里品上一壶茶，听上一段昆曲或评弹，享受一段正宗的苏式生活，可不美哉！  \r\n\r\n记得小时候来过这里，对这里的印象的确不深，不过从位于带城桥路边的阔家头 小巷子进去，沿路经过沈德潜故居和一些卖旅游纪念品的小摊，我们就进入了网师园，路不长，一两百米而已，却一下子从城市喧嚣走进了宁静氛围，一扇不大的对开门，走进厅堂，穿过回廊，一片池水假山，周边亭台楼阁，感觉甚好，坐在池边廊下的人们，说这话，聊着天，有带着小孩来感受园林的，有拿着画笔来描绘园林的，也有早晨来园林锻炼的年老者，总之，人少的时候，园子显得非常和谐，这也是普通老百姓生活在这里的真实写照。  ', 'https://pic5.40017.cn/01/001/3a/6b/rBLkBls2ya2AQ9TGAADIjhq5AYg787_750x_00.jpg', 0, NULL, 864, 5);
INSERT INTO `travelnote` VALUES (18, '渔洋山上观太湖、独行金鸡湖', '订购同程旅游网的酒店有幸获得100元激活码，又看到同程19日在苏州举办“细草摄影分享会”，毅然报名参加。同时在同程旅游客户端用激活码预订了苏州渔洋山景区的门票，80元，全免了哎。并上12306预订好火车票。\r\n\r\n19日上午在虹桥火车站乘6:42的动车，半个多小时就到苏州了，好快啊。7点半在苏州南广场乘上69路，5元。行程一个小时左右，该车途经苏州乐园和木渎古镇，很方便的。\r\n\r\n到景区后给景区检票人员看了电子门票后就可以进入了，10元钱乘坐景区观光车直接到山顶渔洋阁，贪婪地纵览太湖美景。接着进渔洋阁参观有关渔洋山的历史文化。看图片吧。经过法华寺，来到千斤井，知道了伍子胥与千斤小姐的传说。当年伍子胥遭楚平王追杀，穷困潦倒，是一浣纱小姐给于救助而生，日后成为吴国重臣后携千金前来报恩，得知小姐因救他而招诬陷投井而亡，伍子胥来到井边悲叹道：尔浣纱，我行乞，我腹饱，尔身溺，十年后，千金报。咬破​手指在石上血书：恩重如山，并将千金倒入井中。以示哀思之心和表达感恩之心。 ‍ ', 'https://pic5.40017.cn/01/000/39/5a/rBLkBls2QFOAeobZAAEK1QgO-Z0659_750x_00.jpg', 0, NULL, 863, 72);

-- ----------------------------
-- Table structure for travelnotecomment
-- ----------------------------
DROP TABLE IF EXISTS `travelnotecomment`;
CREATE TABLE `travelnotecomment`  (
  `travelNoteCommentId` int(11) NOT NULL AUTO_INCREMENT,
  `comment` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `user_userId` int(11) NOT NULL,
  `travelNote_travelNoteId` int(11) NOT NULL,
  PRIMARY KEY (`travelNoteCommentId`) USING BTREE,
  INDEX `fk_travelNoteComment_user1_idx`(`user_userId`) USING BTREE,
  INDEX `fk_travelNoteComment_travelNote1_idx`(`travelNote_travelNoteId`) USING BTREE,
  CONSTRAINT `fk_travelNoteComment_travelNote1` FOREIGN KEY (`travelNote_travelNoteId`) REFERENCES `travelnote` (`travelnoteid`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_travelNoteComment_user1` FOREIGN KEY (`user_userId`) REFERENCES `user` (`userid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 86 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of travelnotecomment
-- ----------------------------
INSERT INTO `travelnotecomment` VALUES (7, '美景如画，美人如画。', 832, 2);
INSERT INTO `travelnotecomment` VALUES (9, '赞', 1, 2);
INSERT INTO `travelnotecomment` VALUES (10, '相机不错', 868, 2);
INSERT INTO `travelnotecomment` VALUES (11, '真好', 844, 2);
INSERT INTO `travelnotecomment` VALUES (12, '不错', 864, 2);
INSERT INTO `travelnotecomment` VALUES (13, '大爱', 869, 2);
INSERT INTO `travelnotecomment` VALUES (14, '不错哟', 855, 2);
INSERT INTO `travelnotecomment` VALUES (15, '江山如此多娇', 865, 2);
INSERT INTO `travelnotecomment` VALUES (16, '好好好好', 866, 2);
INSERT INTO `travelnotecomment` VALUES (17, '照片已美哭！暖暖哒很温馨！', 863, 2);
INSERT INTO `travelnotecomment` VALUES (18, '漂亮', 832, 3);
INSERT INTO `travelnotecomment` VALUES (19, '奢侈的阳朔走', 1, 3);
INSERT INTO `travelnotecomment` VALUES (20, '楼主拍的真不错啊！', 868, 3);
INSERT INTO `travelnotecomment` VALUES (21, '赞', 855, 3);
INSERT INTO `travelnotecomment` VALUES (22, '太美了 么么哒', 865, 3);
INSERT INTO `travelnotecomment` VALUES (23, '不错', 866, 3);
INSERT INTO `travelnotecomment` VALUES (24, '好', 863, 3);
INSERT INTO `travelnotecomment` VALUES (25, '哇', 869, 4);
INSERT INTO `travelnotecomment` VALUES (26, '厉害呢', 855, 4);
INSERT INTO `travelnotecomment` VALUES (27, '看的我也想去了', 865, 4);
INSERT INTO `travelnotecomment` VALUES (28, '向你学习', 866, 4);
INSERT INTO `travelnotecomment` VALUES (29, '真不错呢', 863, 4);
INSERT INTO `travelnotecomment` VALUES (30, '好棒', 832, 4);
INSERT INTO `travelnotecomment` VALUES (31, '大爱', 868, 8);
INSERT INTO `travelnotecomment` VALUES (32, '好', 844, 8);
INSERT INTO `travelnotecomment` VALUES (33, '赞', 864, 8);
INSERT INTO `travelnotecomment` VALUES (34, '赞', 869, 8);
INSERT INTO `travelnotecomment` VALUES (35, '厉害', 855, 8);
INSERT INTO `travelnotecomment` VALUES (36, '不错呢', 865, 8);
INSERT INTO `travelnotecomment` VALUES (37, '哇', 869, 10);
INSERT INTO `travelnotecomment` VALUES (38, '赞', 855, 10);
INSERT INTO `travelnotecomment` VALUES (39, '相机拍的好赞', 865, 10);
INSERT INTO `travelnotecomment` VALUES (40, '赞', 866, 10);
INSERT INTO `travelnotecomment` VALUES (41, '厉害', 863, 10);
INSERT INTO `travelnotecomment` VALUES (42, '赞', 832, 11);
INSERT INTO `travelnotecomment` VALUES (43, '好', 1, 11);
INSERT INTO `travelnotecomment` VALUES (44, '很棒', 868, 11);
INSERT INTO `travelnotecomment` VALUES (45, '评论的都是人才', 844, 11);
INSERT INTO `travelnotecomment` VALUES (46, '好', 864, 11);
INSERT INTO `travelnotecomment` VALUES (47, '说的不错', 869, 11);
INSERT INTO `travelnotecomment` VALUES (48, '赞', 844, 12);
INSERT INTO `travelnotecomment` VALUES (49, '好赞啊', 864, 12);
INSERT INTO `travelnotecomment` VALUES (50, '真漂亮', 869, 12);
INSERT INTO `travelnotecomment` VALUES (51, '赞', 855, 12);
INSERT INTO `travelnotecomment` VALUES (52, '大爱', 865, 12);
INSERT INTO `travelnotecomment` VALUES (53, '赞', 866, 12);
INSERT INTO `travelnotecomment` VALUES (54, '赞', 832, 13);
INSERT INTO `travelnotecomment` VALUES (55, '厉害', 1, 13);
INSERT INTO `travelnotecomment` VALUES (56, '赞', 868, 13);
INSERT INTO `travelnotecomment` VALUES (57, '好', 844, 13);
INSERT INTO `travelnotecomment` VALUES (58, '人真多啊', 864, 13);
INSERT INTO `travelnotecomment` VALUES (59, '好赞', 855, 13);
INSERT INTO `travelnotecomment` VALUES (60, '赞', 844, 14);
INSERT INTO `travelnotecomment` VALUES (61, '大爱', 864, 14);
INSERT INTO `travelnotecomment` VALUES (62, '好', 869, 14);
INSERT INTO `travelnotecomment` VALUES (63, '棒棒的呀', 855, 14);
INSERT INTO `travelnotecomment` VALUES (64, '厉害呗', 865, 14);
INSERT INTO `travelnotecomment` VALUES (65, '真漂亮', 866, 14);
INSERT INTO `travelnotecomment` VALUES (66, '天热了', 832, 15);
INSERT INTO `travelnotecomment` VALUES (67, '爽', 1, 15);
INSERT INTO `travelnotecomment` VALUES (68, '漂亮', 868, 15);
INSERT INTO `travelnotecomment` VALUES (69, '赞', 844, 15);
INSERT INTO `travelnotecomment` VALUES (70, '不错不错啊', 864, 15);
INSERT INTO `travelnotecomment` VALUES (71, '赞', 869, 16);
INSERT INTO `travelnotecomment` VALUES (72, '说得好', 855, 16);
INSERT INTO `travelnotecomment` VALUES (73, '不错啊', 865, 16);
INSERT INTO `travelnotecomment` VALUES (74, '厉害', 866, 16);
INSERT INTO `travelnotecomment` VALUES (75, '好美啊', 863, 16);
INSERT INTO `travelnotecomment` VALUES (76, '拍的真美啊 ', 832, 17);
INSERT INTO `travelnotecomment` VALUES (77, '我也去过 没搂住拍的漂亮', 1, 17);
INSERT INTO `travelnotecomment` VALUES (78, '赞', 868, 17);
INSERT INTO `travelnotecomment` VALUES (79, '好', 844, 17);
INSERT INTO `travelnotecomment` VALUES (80, '大赞', 864, 17);
INSERT INTO `travelnotecomment` VALUES (81, '不错呢', 869, 18);
INSERT INTO `travelnotecomment` VALUES (82, '好', 855, 18);
INSERT INTO `travelnotecomment` VALUES (83, '真棒', 865, 18);
INSERT INTO `travelnotecomment` VALUES (84, '赞', 866, 18);
INSERT INTO `travelnotecomment` VALUES (85, '大爱', 863, 18);

-- ----------------------------
-- Table structure for travelnoteprise
-- ----------------------------
DROP TABLE IF EXISTS `travelnoteprise`;
CREATE TABLE `travelnoteprise`  (
  `travelNotePriseId` int(11) NOT NULL AUTO_INCREMENT,
  `travelNote_travelNoteId` int(11) NOT NULL,
  `user_userId` int(11) NOT NULL,
  `prisetime` time(6) NULL DEFAULT NULL,
  PRIMARY KEY (`travelNotePriseId`) USING BTREE,
  INDEX `fk_travelNotePrise_travelNote1_idx`(`travelNote_travelNoteId`) USING BTREE,
  INDEX `fk_travelNotePrise_user1_idx`(`user_userId`) USING BTREE,
  CONSTRAINT `fk_travelNotePrise_travelNote1` FOREIGN KEY (`travelNote_travelNoteId`) REFERENCES `travelnote` (`travelnoteid`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_travelNotePrise_user1` FOREIGN KEY (`user_userId`) REFERENCES `user` (`userid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `userId` int(11) NOT NULL AUTO_INCREMENT,
  `userName` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `userPwd` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `userPhone` varchar(11) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `userImage` varchar(300) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`userPhone`) USING BTREE,
  INDEX `userId`(`userId`) USING BTREE,
  INDEX `userId_2`(`userId`) USING BTREE,
  INDEX `userId_3`(`userId`) USING BTREE,
  INDEX `userId_4`(`userId`) USING BTREE,
  INDEX `userId_5`(`userId`) USING BTREE,
  INDEX `userId_6`(`userId`) USING BTREE,
  INDEX `userId_7`(`userId`) USING BTREE,
  INDEX `userId_8`(`userId`) USING BTREE,
  INDEX `userId_9`(`userId`) USING BTREE,
  INDEX `userId_10`(`userId`) USING BTREE,
  INDEX `userId_11`(`userId`) USING BTREE,
  INDEX `userId_12`(`userId`) USING BTREE,
  INDEX `userId_13`(`userId`) USING BTREE,
  INDEX `userId_14`(`userId`) USING BTREE,
  INDEX `userId_15`(`userId`) USING BTREE,
  INDEX `userId_16`(`userId`) USING BTREE,
  INDEX `userId_17`(`userId`) USING BTREE,
  INDEX `userId_18`(`userId`) USING BTREE,
  INDEX `userId_19`(`userId`) USING BTREE,
  INDEX `userId_20`(`userId`) USING BTREE,
  INDEX `userId_21`(`userId`) USING BTREE,
  INDEX `userId_22`(`userId`) USING BTREE,
  INDEX `userId_23`(`userId`) USING BTREE,
  INDEX `userId_24`(`userId`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 870 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (832, '徐洁', '665544', '12390675632', 'https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2891276763,2105810070&fm=27&gp=0.jpg');
INSERT INTO `user` VALUES (1, '王思聪', '213654', '13103907892', 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=850016154,2966264409&fm=27&gp=0.jpg');
INSERT INTO `user` VALUES (868, 'tom', '34b7da764b21d298ef307d04d8152dc5', '15874236654', 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2080335900,1605411603&fm=27&gp=0.jpg');
INSERT INTO `user` VALUES (844, '樟树街', '224533', '18262047890', 'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1763044357,684998663&fm=27&gp=0.jpg');
INSERT INTO `user` VALUES (864, '陈梦杰', '77ga441', '18265478963', 'https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2612050777,637755064&fm=27&gp=0.jpg');
INSERT INTO `user` VALUES (869, '唐心', '522991', '18325964789', 'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=773579743,2271149885&fm=27&gp=0.jpg');
INSERT INTO `user` VALUES (855, '陈林', '123456', '18360839064', 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3329523335,731969596&fm=27&gp=0.jpg');
INSERT INTO `user` VALUES (865, '沈栋', '49154ae5', '18365419676', 'https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=347837335,1617350328&fm=27&gp=0.jpg');
INSERT INTO `user` VALUES (866, '流畅', '226632', '18562038772', 'http://img4.imgtn.bdimg.com/it/u=3223186911,2863052117&fm=26&gp=0.jpg');
INSERT INTO `user` VALUES (863, '王杰', '5412fa55', '18636547895', 'https://img2.woyaogexing.com/2018/10/17/5c6048e1134f4915947ede65ebbde637!400x400.jpeg');

-- ----------------------------
-- View structure for version
-- ----------------------------
DROP VIEW IF EXISTS `version`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY INVOKER VIEW `version` AS select '2.0.0' AS `sys_version`,version() AS `mysql_version`;

-- ----------------------------
-- View structure for wait_classes_global_by_avg_latency
-- ----------------------------
DROP VIEW IF EXISTS `wait_classes_global_by_avg_latency`;
CREATE ALGORITHM = TEMPTABLE SQL SECURITY INVOKER VIEW `wait_classes_global_by_avg_latency` AS select substring_index(`performance_schema`.`events_waits_summary_global_by_event_name`.`EVENT_NAME`,'/',3) AS `event_class`,sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`COUNT_STAR`) AS `total`,`sys`.`format_time`(cast(sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT`) as unsigned)) AS `total_latency`,`sys`.`format_time`(min(`performance_schema`.`events_waits_summary_global_by_event_name`.`MIN_TIMER_WAIT`)) AS `min_latency`,`sys`.`format_time`(ifnull((sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT`) / nullif(sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`COUNT_STAR`),0)),0)) AS `avg_latency`,`sys`.`format_time`(cast(max(`performance_schema`.`events_waits_summary_global_by_event_name`.`MAX_TIMER_WAIT`) as unsigned)) AS `max_latency` from `performance_schema`.`events_waits_summary_global_by_event_name` where ((`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT` > 0) and (`performance_schema`.`events_waits_summary_global_by_event_name`.`EVENT_NAME` <> 'idle')) group by `event_class` order by ifnull((sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT`) / nullif(sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`COUNT_STAR`),0)),0) desc;

-- ----------------------------
-- View structure for wait_classes_global_by_latency
-- ----------------------------
DROP VIEW IF EXISTS `wait_classes_global_by_latency`;
CREATE ALGORITHM = TEMPTABLE SQL SECURITY INVOKER VIEW `wait_classes_global_by_latency` AS select substring_index(`performance_schema`.`events_waits_summary_global_by_event_name`.`EVENT_NAME`,'/',3) AS `event_class`,sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`COUNT_STAR`) AS `total`,`sys`.`format_time`(sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT`)) AS `total_latency`,`sys`.`format_time`(min(`performance_schema`.`events_waits_summary_global_by_event_name`.`MIN_TIMER_WAIT`)) AS `min_latency`,`sys`.`format_time`(ifnull((sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT`) / nullif(sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`COUNT_STAR`),0)),0)) AS `avg_latency`,`sys`.`format_time`(max(`performance_schema`.`events_waits_summary_global_by_event_name`.`MAX_TIMER_WAIT`)) AS `max_latency` from `performance_schema`.`events_waits_summary_global_by_event_name` where ((`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT` > 0) and (`performance_schema`.`events_waits_summary_global_by_event_name`.`EVENT_NAME` <> 'idle')) group by substring_index(`performance_schema`.`events_waits_summary_global_by_event_name`.`EVENT_NAME`,'/',3) order by sum(`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT`) desc;

-- ----------------------------
-- View structure for waits_by_host_by_latency
-- ----------------------------
DROP VIEW IF EXISTS `waits_by_host_by_latency`;
CREATE ALGORITHM = MERGE SQL SECURITY INVOKER VIEW `waits_by_host_by_latency` AS select if(isnull(`performance_schema`.`events_waits_summary_by_host_by_event_name`.`HOST`),'background',`performance_schema`.`events_waits_summary_by_host_by_event_name`.`HOST`) AS `host`,`performance_schema`.`events_waits_summary_by_host_by_event_name`.`EVENT_NAME` AS `event`,`performance_schema`.`events_waits_summary_by_host_by_event_name`.`COUNT_STAR` AS `total`,`sys`.`format_time`(`performance_schema`.`events_waits_summary_by_host_by_event_name`.`SUM_TIMER_WAIT`) AS `total_latency`,`sys`.`format_time`(`performance_schema`.`events_waits_summary_by_host_by_event_name`.`AVG_TIMER_WAIT`) AS `avg_latency`,`sys`.`format_time`(`performance_schema`.`events_waits_summary_by_host_by_event_name`.`MAX_TIMER_WAIT`) AS `max_latency` from `performance_schema`.`events_waits_summary_by_host_by_event_name` where ((`performance_schema`.`events_waits_summary_by_host_by_event_name`.`EVENT_NAME` <> 'idle') and (`performance_schema`.`events_waits_summary_by_host_by_event_name`.`SUM_TIMER_WAIT` > 0)) order by if(isnull(`performance_schema`.`events_waits_summary_by_host_by_event_name`.`HOST`),'background',`performance_schema`.`events_waits_summary_by_host_by_event_name`.`HOST`),`performance_schema`.`events_waits_summary_by_host_by_event_name`.`SUM_TIMER_WAIT` desc;

-- ----------------------------
-- View structure for waits_by_user_by_latency
-- ----------------------------
DROP VIEW IF EXISTS `waits_by_user_by_latency`;
CREATE ALGORITHM = MERGE SQL SECURITY INVOKER VIEW `waits_by_user_by_latency` AS select if(isnull(`performance_schema`.`events_waits_summary_by_user_by_event_name`.`USER`),'background',`performance_schema`.`events_waits_summary_by_user_by_event_name`.`USER`) AS `user`,`performance_schema`.`events_waits_summary_by_user_by_event_name`.`EVENT_NAME` AS `event`,`performance_schema`.`events_waits_summary_by_user_by_event_name`.`COUNT_STAR` AS `total`,`sys`.`format_time`(`performance_schema`.`events_waits_summary_by_user_by_event_name`.`SUM_TIMER_WAIT`) AS `total_latency`,`sys`.`format_time`(`performance_schema`.`events_waits_summary_by_user_by_event_name`.`AVG_TIMER_WAIT`) AS `avg_latency`,`sys`.`format_time`(`performance_schema`.`events_waits_summary_by_user_by_event_name`.`MAX_TIMER_WAIT`) AS `max_latency` from `performance_schema`.`events_waits_summary_by_user_by_event_name` where ((`performance_schema`.`events_waits_summary_by_user_by_event_name`.`EVENT_NAME` <> 'idle') and (`performance_schema`.`events_waits_summary_by_user_by_event_name`.`USER` is not null) and (`performance_schema`.`events_waits_summary_by_user_by_event_name`.`SUM_TIMER_WAIT` > 0)) order by if(isnull(`performance_schema`.`events_waits_summary_by_user_by_event_name`.`USER`),'background',`performance_schema`.`events_waits_summary_by_user_by_event_name`.`USER`),`performance_schema`.`events_waits_summary_by_user_by_event_name`.`SUM_TIMER_WAIT` desc;

-- ----------------------------
-- View structure for waits_global_by_latency
-- ----------------------------
DROP VIEW IF EXISTS `waits_global_by_latency`;
CREATE ALGORITHM = MERGE SQL SECURITY INVOKER VIEW `waits_global_by_latency` AS select `performance_schema`.`events_waits_summary_global_by_event_name`.`EVENT_NAME` AS `event`,`performance_schema`.`events_waits_summary_global_by_event_name`.`COUNT_STAR` AS `total`,`sys`.`format_time`(`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT`) AS `total_latency`,`sys`.`format_time`(`performance_schema`.`events_waits_summary_global_by_event_name`.`AVG_TIMER_WAIT`) AS `avg_latency`,`sys`.`format_time`(`performance_schema`.`events_waits_summary_global_by_event_name`.`MAX_TIMER_WAIT`) AS `max_latency` from `performance_schema`.`events_waits_summary_global_by_event_name` where ((`performance_schema`.`events_waits_summary_global_by_event_name`.`EVENT_NAME` <> 'idle') and (`performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT` > 0)) order by `performance_schema`.`events_waits_summary_global_by_event_name`.`SUM_TIMER_WAIT` desc;

-- ----------------------------
-- Procedure structure for create_synonym_db
-- ----------------------------
DROP PROCEDURE IF EXISTS `create_synonym_db`;
delimiter ;;
CREATE PROCEDURE `create_synonym_db`(IN in_db_name VARCHAR(64),  IN in_synonym VARCHAR(64))
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes a source database name and synonym name, and then creates the \r\n synonym database with views that point to all of the tables within\r\n the source database.\r\n \r\n Useful for creating a \"ps\" synonym for \"performance_schema\",\r\n or \"is\" instead of \"information_schema\", for example.\r\n \r\n Parameters\r\n \r\n in_db_name (VARCHAR(64)):\r\n The database name that you would like to create a synonym for.\r\n in_synonym (VARCHAR(64)):\r\n The database synonym name.\r\n \r\n Example\r\n \r\n mysql> SHOW DATABASES;\r\n +--------------------+\r\n | Database           |\r\n +--------------------+\r\n | information_schema |\r\n | mysql              |\r\n | performance_schema |\r\n | sys                |\r\n | test               |\r\n +--------------------+\r\n 5 rows in set (0.00 sec)\r\n \r\n mysql> CALL sys.create_synonym_db(\'performance_schema\', \'ps\');\r\n +---------------------------------------+\r\n | summary                               |\r\n +---------------------------------------+\r\n | Created 74 views in the `ps` database |\r\n +---------------------------------------+\r\n 1 row in set (8.57 sec)\r\n \r\n Query OK, 0 rows affected (8.57 sec)\r\n \r\n mysql> SHOW DATABASES;\r\n +--------------------+\r\n | Database           |\r\n +--------------------+\r\n | information_schema |\r\n | mysql              |\r\n | performance_schema |\r\n | ps                 |\r\n | sys                |\r\n | test               |\r\n +--------------------+\r\n 6 rows in set (0.00 sec)\r\n \r\n mysql> SHOW FULL TABLES FROM ps;\r\n +------------------------------------------------------+------------+\r\n | Tables_in_ps                                         | Table_type |\r\n +------------------------------------------------------+------------+\r\n | accounts                                             | VIEW       |\r\n | cond_instances                                       | VIEW       |\r\n | events_stages_current                                | VIEW       |\r\n | events_stages_history                                | VIEW       |\r\n ...\r\n '
BEGIN DECLARE v_done bool DEFAULT FALSE; DECLARE v_db_name_check VARCHAR(64); DECLARE v_db_err_msg TEXT; DECLARE v_table VARCHAR(64); DECLARE v_views_created INT DEFAULT 0;  DECLARE db_doesnt_exist CONDITION FOR SQLSTATE '42000'; DECLARE db_name_exists CONDITION FOR SQLSTATE 'HY000';  DECLARE c_table_names CURSOR FOR  SELECT TABLE_NAME  FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_SCHEMA = in_db_name;  DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;  SELECT SCHEMA_NAME INTO v_db_name_check FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = in_db_name;  IF v_db_name_check IS NULL THEN SET v_db_err_msg = CONCAT('Unknown database ', in_db_name); SIGNAL SQLSTATE 'HY000' SET MESSAGE_TEXT = v_db_err_msg; END IF;  SELECT SCHEMA_NAME INTO v_db_name_check FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = in_synonym;  IF v_db_name_check = in_synonym THEN SET v_db_err_msg = CONCAT('Can\'t create database ', in_synonym, '; database exists'); SIGNAL SQLSTATE 'HY000' SET MESSAGE_TEXT = v_db_err_msg; END IF;  SET @create_db_stmt := CONCAT('CREATE DATABASE ', sys.quote_identifier(in_synonym)); PREPARE create_db_stmt FROM @create_db_stmt; EXECUTE create_db_stmt; DEALLOCATE PREPARE create_db_stmt;  SET v_done = FALSE; OPEN c_table_names; c_table_names: LOOP FETCH c_table_names INTO v_table; IF v_done THEN LEAVE c_table_names; END IF;  SET @create_view_stmt = CONCAT( 'CREATE SQL SECURITY INVOKER VIEW ', sys.quote_identifier(in_synonym), '.', sys.quote_identifier(v_table), ' AS SELECT * FROM ', sys.quote_identifier(in_db_name), '.', sys.quote_identifier(v_table) ); PREPARE create_view_stmt FROM @create_view_stmt; EXECUTE create_view_stmt; DEALLOCATE PREPARE create_view_stmt;  SET v_views_created = v_views_created + 1; END LOOP; CLOSE c_table_names;  SELECT CONCAT( 'Created ', v_views_created, ' view', IF(v_views_created != 1, 's', ''), ' in the ', sys.quote_identifier(in_synonym), ' database' ) AS summary;  END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for diagnostics
-- ----------------------------
DROP PROCEDURE IF EXISTS `diagnostics`;
delimiter ;;
CREATE PROCEDURE `diagnostics`(IN in_max_runtime int unsigned, IN in_interval int unsigned, IN in_auto_config enum ('current', 'medium', 'full'))
  READS SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Create a report of the current status of the server for diagnostics purposes. Data collected includes (some items depends on versions and settings):\r\n \r\n * The GLOBAL VARIABLES\r\n * Several sys schema views including metrics or equivalent (depending on version and settings)\r\n * Queries in the 95th percentile\r\n * Several ndbinfo views for MySQL Cluster\r\n * Replication (both master and slave) information.\r\n \r\n Some of the sys schema views are calculated as initial (optional), overall, delta:\r\n \r\n * The initial view is the content of the view at the start of this procedure.\r\n This output will be the same as the the start values used for the delta view.\r\n The initial view is included if @sys.diagnostics.include_raw = \'ON\'.\r\n * The overall view is the content of the view at the end of this procedure.\r\n This output is the same as the end values used for the delta view.\r\n The overall view is always included.\r\n * The delta view is the difference from the beginning to the end. Note that for min and max values\r\n they are simply the min or max value from the end view respectively, so does not necessarily reflect\r\n the minimum/maximum value in the monitored period.\r\n Note: except for the metrics views the delta is only calculation between the first and last outputs.\r\n \r\n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\r\n \r\n Versions supported:\r\n * MySQL 5.6: 5.6.10 and later\r\n * MySQL 5.7: 5.7.9 and later\r\n \r\n Parameters\r\n \r\n in_max_runtime (INT UNSIGNED):\r\n The maximum time to keep collecting data.\r\n Use NULL to get the default which is 60 seconds, otherwise enter a value greater than 0.\r\n in_interval (INT UNSIGNED):\r\n How long to sleep between data collections.\r\n Use NULL to get the default which is 30 seconds, otherwise enter a value greater than 0.\r\n in_auto_config (ENUM(\'current\', \'medium\', \'full\'))\r\n Automatically enable Performance Schema instruments and consumers.\r\n NOTE: The more that are enabled, the more impact on the performance.\r\n Supported values are:\r\n * current - use the current settings.\r\n * medium - enable some settings. This requires the SUPER privilege.\r\n * full - enables all settings. This will have a big impact on the\r\n performance - be careful using this option. This requires\r\n the SUPER privilege.\r\n If another setting the \'current\' is chosen, the current settings\r\n are restored at the end of the procedure.\r\n \r\n \r\n Configuration Options\r\n \r\n sys.diagnostics.allow_i_s_tables\r\n Specifies whether it is allowed to do table scan queries on information_schema.TABLES. This can be expensive if there\r\n are many tables. Set to \'ON\' to allow, \'OFF\' to not allow.\r\n Default is \'OFF\'.\r\n \r\n sys.diagnostics.include_raw\r\n Set to \'ON\' to include the raw data (e.g. the original output of \"SELECT * FROM sys.metrics\").\r\n Use this to get the initial values of the various views.\r\n Default is \'OFF\'.\r\n \r\n sys.statement_truncate_len\r\n How much of queries in the process list output to include.\r\n Default is 64.\r\n \r\n sys.debug\r\n Whether to provide debugging output.\r\n Default is \'OFF\'. Set to \'ON\' to include.\r\n \r\n \r\n Example\r\n \r\n To create a report and append it to the file diag.out:\r\n \r\n mysql> TEE diag.out;\r\n mysql> CALL sys.diagnostics(120, 30, \'current\');\r\n ...\r\n mysql> NOTEE;\r\n '
BEGIN DECLARE v_start, v_runtime, v_iter_start, v_sleep DECIMAL(20,2) DEFAULT 0.0; DECLARE v_has_innodb, v_has_ndb, v_has_ps, v_has_replication, v_has_ps_replication VARCHAR(8) CHARSET utf8mb4 DEFAULT 'NO'; DECLARE v_this_thread_enabled, v_has_metrics ENUM('YES', 'NO'); DECLARE v_table_name, v_banner VARCHAR(64) CHARSET utf8mb4; DECLARE v_sql_status_summary_select, v_sql_status_summary_delta, v_sql_status_summary_from, v_no_delta_names TEXT; DECLARE v_output_time, v_output_time_prev DECIMAL(20,3) UNSIGNED; DECLARE v_output_count, v_count, v_old_group_concat_max_len INT UNSIGNED DEFAULT 0; DECLARE v_status_summary_width TINYINT UNSIGNED DEFAULT 50; DECLARE v_done BOOLEAN DEFAULT FALSE; DECLARE c_ndbinfo CURSOR FOR SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'ndbinfo' AND TABLE_NAME NOT IN ( 'blocks', 'config_params', 'dict_obj_types', 'disk_write_speed_base', 'memory_per_fragment', 'memoryusage', 'operations_per_fragment', 'threadblocks' ); DECLARE c_sysviews_w_delta CURSOR FOR SELECT table_name FROM tmp_sys_views_delta ORDER BY table_name; DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;  SELECT INSTRUMENTED INTO v_this_thread_enabled FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID(); IF (v_this_thread_enabled = 'YES') THEN CALL sys.ps_setup_disable_thread(CONNECTION_ID()); END IF;  IF (in_max_runtime < in_interval) THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'in_max_runtime must be greater than or equal to in_interval'; END IF; IF (in_max_runtime = 0) THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'in_max_runtime must be greater than 0'; END IF; IF (in_interval = 0) THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'in_interval must be greater than 0'; END IF;  IF (@sys.diagnostics.allow_i_s_tables IS NULL) THEN SET @sys.diagnostics.allow_i_s_tables = sys.sys_get_config('diagnostics.allow_i_s_tables', 'OFF'); END IF; IF (@sys.diagnostics.include_raw IS NULL) THEN SET @sys.diagnostics.include_raw      = sys.sys_get_config('diagnostics.include_raw'     , 'OFF'); END IF; IF (@sys.debug IS NULL) THEN SET @sys.debug                        = sys.sys_get_config('debug'                       , 'OFF'); END IF; IF (@sys.statement_truncate_len IS NULL) THEN SET @sys.statement_truncate_len       = sys.sys_get_config('statement_truncate_len'      , '64' ); END IF;  SET @log_bin := @@sql_log_bin; IF (@log_bin = 1) THEN SET sql_log_bin = 0; END IF;  SET v_no_delta_names = CONCAT('s%{COUNT}.Variable_name NOT IN (', '''innodb_buffer_pool_pages_total'', ', '''innodb_page_size'', ', '''last_query_cost'', ', '''last_query_partial_plans'', ', '''qcache_total_blocks'', ', '''slave_last_heartbeat'', ', '''ssl_ctx_verify_depth'', ', '''ssl_ctx_verify_mode'', ', '''ssl_session_cache_size'', ', '''ssl_verify_depth'', ', '''ssl_verify_mode'', ', '''ssl_version'', ', '''buffer_flush_lsn_avg_rate'', ', '''buffer_flush_pct_for_dirty'', ', '''buffer_flush_pct_for_lsn'', ', '''buffer_pool_pages_total'', ', '''lock_row_lock_time_avg'', ', '''lock_row_lock_time_max'', ', '''innodb_page_size''', ')');  IF (in_auto_config <> 'current') THEN IF (@sys.debug = 'ON') THEN SELECT CONCAT('Updating Performance Schema configuration to ', in_auto_config) AS 'Debug'; END IF; CALL sys.ps_setup_save(0);  IF (in_auto_config = 'medium') THEN UPDATE performance_schema.setup_consumers SET ENABLED = 'YES' WHERE NAME NOT LIKE '%\_history%';  UPDATE performance_schema.setup_instruments SET ENABLED = 'YES', TIMED   = 'YES' WHERE NAME NOT LIKE 'wait/synch/%'; ELSEIF (in_auto_config = 'full') THEN UPDATE performance_schema.setup_consumers SET ENABLED = 'YES';  UPDATE performance_schema.setup_instruments SET ENABLED = 'YES', TIMED   = 'YES'; END IF;  UPDATE performance_schema.threads SET INSTRUMENTED = 'YES' WHERE PROCESSLIST_ID <> CONNECTION_ID(); END IF;  SET v_start        = UNIX_TIMESTAMP(NOW(2)), in_interval    = IFNULL(in_interval, 30), in_max_runtime = IFNULL(in_max_runtime, 60);  SET v_banner = REPEAT( '-', LEAST( GREATEST( 36, CHAR_LENGTH(VERSION()), CHAR_LENGTH(@@global.version_comment), CHAR_LENGTH(@@global.version_compile_os), CHAR_LENGTH(@@global.version_compile_machine), CHAR_LENGTH(@@global.socket), CHAR_LENGTH(@@global.datadir) ), 64 ) ); SELECT 'Hostname' AS 'Name', @@global.hostname AS 'Value' UNION ALL SELECT 'Port' AS 'Name', @@global.port AS 'Value' UNION ALL SELECT 'Socket' AS 'Name', @@global.socket AS 'Value' UNION ALL SELECT 'Datadir' AS 'Name', @@global.datadir AS 'Value' UNION ALL SELECT 'Server UUID' AS 'Name', @@global.server_uuid AS 'Value' UNION ALL SELECT REPEAT('-', 23) AS 'Name', v_banner AS 'Value' UNION ALL SELECT 'MySQL Version' AS 'Name', VERSION() AS 'Value' UNION ALL SELECT 'Sys Schema Version' AS 'Name', (SELECT sys_version FROM sys.version) AS 'Value' UNION ALL SELECT 'Version Comment' AS 'Name', @@global.version_comment AS 'Value' UNION ALL SELECT 'Version Compile OS' AS 'Name', @@global.version_compile_os AS 'Value' UNION ALL SELECT 'Version Compile Machine' AS 'Name', @@global.version_compile_machine AS 'Value' UNION ALL SELECT REPEAT('-', 23) AS 'Name', v_banner AS 'Value' UNION ALL SELECT 'UTC Time' AS 'Name', UTC_TIMESTAMP() AS 'Value' UNION ALL SELECT 'Local Time' AS 'Name', NOW() AS 'Value' UNION ALL SELECT 'Time Zone' AS 'Name', @@global.time_zone AS 'Value' UNION ALL SELECT 'System Time Zone' AS 'Name', @@global.system_time_zone AS 'Value' UNION ALL SELECT 'Time Zone Offset' AS 'Name', TIMEDIFF(NOW(), UTC_TIMESTAMP()) AS 'Value';  SET v_has_innodb         = IFNULL((SELECT SUPPORT FROM information_schema.ENGINES WHERE ENGINE = 'InnoDB'), 'NO'), v_has_ndb            = IFNULL((SELECT SUPPORT FROM information_schema.ENGINES WHERE ENGINE = 'NDBCluster'), 'NO'), v_has_ps             = IFNULL((SELECT SUPPORT FROM information_schema.ENGINES WHERE ENGINE = 'PERFORMANCE_SCHEMA'), 'NO'), v_has_ps_replication = IF(v_has_ps = 'YES' AND EXISTS(SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'performance_schema' AND TABLE_NAME = 'replication_applier_status'), 'YES', 'NO' ), v_has_replication    =  IF(v_has_ps_replication = 'YES', IF((SELECT COUNT(*) FROM performance_schema.replication_connection_status) > 0, 'YES', 'NO'), IF(@@master_info_repository = 'TABLE', IF((SELECT COUNT(*) FROM mysql.slave_master_info) > 0, 'YES', 'NO'), IF(@@relay_log_info_repository = 'TABLE', IF((SELECT COUNT(*) FROM mysql.slave_relay_log_info) > 0, 'YES', 'NO'), 'MAYBE')) ) , v_has_metrics        = IF(v_has_ps = 'YES' OR (sys.version_major() = 5 AND sys.version_minor() = 6), 'YES', 'NO');  IF (@sys.debug = 'ON') THEN SELECT v_has_innodb AS 'Has_InnoDB', v_has_ndb AS 'Has_NDBCluster', v_has_ps AS 'Has_Performance_Schema', v_has_metrics AS 'Has_metrics', v_has_ps_replication 'AS Has_P_S_Replication', v_has_replication AS 'Has_Replication'; END IF;  IF (v_has_innodb IN ('DEFAULT', 'YES')) THEN SET @sys.diagnostics.sql = 'SHOW ENGINE InnoDB STATUS'; PREPARE stmt_innodb_status FROM @sys.diagnostics.sql; END IF;  IF (v_has_ps = 'YES') THEN SET @sys.diagnostics.sql = 'SHOW ENGINE PERFORMANCE_SCHEMA STATUS'; PREPARE stmt_ps_status FROM @sys.diagnostics.sql; END IF;  IF (v_has_ndb IN ('DEFAULT', 'YES')) THEN SET @sys.diagnostics.sql = 'SHOW ENGINE NDBCLUSTER STATUS'; PREPARE stmt_ndbcluster_status FROM @sys.diagnostics.sql; END IF;  SET @sys.diagnostics.sql_gen_query_template = 'SELECT CONCAT( ''SELECT '', GROUP_CONCAT( CASE WHEN (SUBSTRING(TABLE_NAME, 3), COLUMN_NAME) IN ( (''io_global_by_file_by_bytes'', ''total''), (''io_global_by_wait_by_bytes'', ''total_requested'') ) THEN CONCAT(''sys.format_bytes('', COLUMN_NAME, '') AS '', COLUMN_NAME) WHEN COLUMN_NAME LIKE ''%latency'' THEN CONCAT(''sys.format_time('', COLUMN_NAME, '') AS '', COLUMN_NAME) WHEN SUBSTRING(COLUMN_NAME, -7) = ''_memory'' OR SUBSTRING(COLUMN_NAME, -17) = ''_memory_allocated'' OR ((SUBSTRING(COLUMN_NAME, -5) = ''_read'' OR SUBSTRING(COLUMN_NAME, -8) = ''_written'' OR SUBSTRING(COLUMN_NAME, -6) = ''_write'') AND SUBSTRING(COLUMN_NAME, 1, 6) <> ''COUNT_'') THEN CONCAT(''sys.format_bytes('', COLUMN_NAME, '') AS '', COLUMN_NAME) ELSE COLUMN_NAME END ORDER BY ORDINAL_POSITION SEPARATOR '',\n       '' ), ''\n  FROM tmp_'', SUBSTRING(TABLE_NAME FROM 3), ''_%{OUTPUT}'' ) AS Query INTO @sys.diagnostics.sql_select FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = ''sys'' AND TABLE_NAME = ? GROUP BY TABLE_NAME';  SET @sys.diagnostics.sql_gen_query_delta = 'SELECT CONCAT( ''SELECT '', GROUP_CONCAT( CASE WHEN FIND_IN_SET(COLUMN_NAME COLLATE utf8_general_ci, diag.pk) THEN COLUMN_NAME WHEN diag.TABLE_NAME = ''io_global_by_file_by_bytes'' AND COLUMN_NAME COLLATE utf8_general_ci = ''write_pct'' THEN CONCAT(''IFNULL(ROUND(100-(((e.total_read-IFNULL(s.total_read, 0))'', ''/NULLIF(((e.total_read-IFNULL(s.total_read, 0))+(e.total_written-IFNULL(s.total_written, 0))), 0))*100), 2), 0.00) AS '', COLUMN_NAME) WHEN (diag.TABLE_NAME, COLUMN_NAME) IN ( (''io_global_by_file_by_bytes'', ''total''), (''io_global_by_wait_by_bytes'', ''total_requested'') ) THEN CONCAT(''sys.format_bytes(e.'', COLUMN_NAME, ''-IFNULL(s.'', COLUMN_NAME, '', 0)) AS '', COLUMN_NAME) WHEN SUBSTRING(COLUMN_NAME, 1, 4) IN (''max_'', ''min_'') AND SUBSTRING(COLUMN_NAME, -8) = ''_latency'' THEN CONCAT(''sys.format_time(e.'', COLUMN_NAME, '') AS '', COLUMN_NAME) WHEN COLUMN_NAME COLLATE utf8_general_ci = ''avg_latency'' THEN CONCAT(''sys.format_time((e.total_latency - IFNULL(s.total_latency, 0))'', ''/NULLIF(e.total - IFNULL(s.total, 0), 0)) AS '', COLUMN_NAME) WHEN SUBSTRING(COLUMN_NAME, -12) = ''_avg_latency'' THEN CONCAT(''sys.format_time((e.'', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), ''_latency - IFNULL(s.'', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), ''_latency, 0))'', ''/NULLIF(e.'', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), ''s - IFNULL(s.'', SUBSTRING(COLUMN_NAME FROM 1 FOR CHAR_LENGTH(COLUMN_NAME)-12), ''s, 0), 0)) AS '', COLUMN_NAME) WHEN COLUMN_NAME LIKE ''%latency'' THEN CONCAT(''sys.format_time(e.'', COLUMN_NAME, '' - IFNULL(s.'', COLUMN_NAME, '', 0)) AS '', COLUMN_NAME) WHEN COLUMN_NAME IN (''avg_read'', ''avg_write'', ''avg_written'') THEN CONCAT(''sys.format_bytes(IFNULL((e.total_'', IF(COLUMN_NAME = ''avg_read'', ''read'', ''written''), ''-IFNULL(s.total_'', IF(COLUMN_NAME = ''avg_read'', ''read'', ''written''), '', 0))'', ''/NULLIF(e.count_'', IF(COLUMN_NAME = ''avg_read'', ''read'', ''write''), ''-IFNULL(s.count_'', IF(COLUMN_NAME = ''avg_read'', ''read'', ''write''), '', 0), 0), 0)) AS '', COLUMN_NAME) WHEN SUBSTRING(COLUMN_NAME, -7) = ''_memory'' OR SUBSTRING(COLUMN_NAME, -17) = ''_memory_allocated'' OR ((SUBSTRING(COLUMN_NAME, -5) = ''_read'' OR SUBSTRING(COLUMN_NAME, -8) = ''_written'' OR SUBSTRING(COLUMN_NAME, -6) = ''_write'') AND SUBSTRING(COLUMN_NAME, 1, 6) <> ''COUNT_'') THEN CONCAT(''sys.format_bytes(e.'', COLUMN_NAME, '' - IFNULL(s.'', COLUMN_NAME, '', 0)) AS '', COLUMN_NAME) ELSE CONCAT(''(e.'', COLUMN_NAME, '' - IFNULL(s.'', COLUMN_NAME, '', 0)) AS '', COLUMN_NAME) END ORDER BY ORDINAL_POSITION SEPARATOR '',\n       '' ), ''\n  FROM tmp_'', diag.TABLE_NAME, ''_end e LEFT OUTER JOIN tmp_'', diag.TABLE_NAME, ''_start s USING ('', diag.pk, '')'' ) AS Query INTO @sys.diagnostics.sql_select FROM tmp_sys_views_delta diag INNER JOIN information_schema.COLUMNS c ON c.TABLE_NAME COLLATE utf8_general_ci = CONCAT(''x$'', diag.TABLE_NAME) WHERE c.TABLE_SCHEMA = ''sys'' AND diag.TABLE_NAME = ? GROUP BY diag.TABLE_NAME';  IF (v_has_ps = 'YES') THEN DROP TEMPORARY TABLE IF EXISTS tmp_sys_views_delta; CREATE TEMPORARY TABLE tmp_sys_views_delta ( TABLE_NAME varchar(64) NOT NULL, order_by text COMMENT 'ORDER BY clause for the initial and overall views', order_by_delta text COMMENT 'ORDER BY clause for the delta views', where_delta text COMMENT 'WHERE clause to use for delta views to only include rows with a "count" > 0', limit_rows int unsigned COMMENT 'The maximum number of rows to include for the view', pk varchar(128) COMMENT 'Used with the FIND_IN_SET() function so use comma separated list without whitespace', PRIMARY KEY (TABLE_NAME) );  IF (@sys.debug = 'ON') THEN SELECT 'Populating tmp_sys_views_delta' AS 'Debug'; END IF; INSERT INTO tmp_sys_views_delta VALUES ('host_summary'                       , '%{TABLE}.statement_latency DESC', '(e.statement_latency-IFNULL(s.statement_latency, 0)) DESC', '(e.statements - IFNULL(s.statements, 0)) > 0', NULL, 'host'), ('host_summary_by_file_io'            , '%{TABLE}.io_latency DESC', '(e.io_latency-IFNULL(s.io_latency, 0)) DESC', '(e.ios - IFNULL(s.ios, 0)) > 0', NULL, 'host'), ('host_summary_by_file_io_type'       , '%{TABLE}.host, %{TABLE}.total_latency DESC', 'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'host,event_name'), ('host_summary_by_stages'             , '%{TABLE}.host, %{TABLE}.total_latency DESC', 'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'host,event_name'), ('host_summary_by_statement_latency'  , '%{TABLE}.total_latency DESC', '(e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'host'), ('host_summary_by_statement_type'     , '%{TABLE}.host, %{TABLE}.total_latency DESC', 'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'host,statement'), ('io_by_thread_by_latency'            , '%{TABLE}.total_latency DESC', '(e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'user,thread_id,processlist_id'), ('io_global_by_file_by_bytes'         , '%{TABLE}.total DESC', '(e.total-IFNULL(s.total, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', 100, 'file'), ('io_global_by_file_by_latency'       , '%{TABLE}.total_latency DESC', '(e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', 100, 'file'), ('io_global_by_wait_by_bytes'         , '%{TABLE}.total_requested DESC', '(e.total_requested-IFNULL(s.total_requested, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'event_name'), ('io_global_by_wait_by_latency'       , '%{TABLE}.total_latency DESC', '(e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'event_name'), ('schema_index_statistics'            , '(%{TABLE}.select_latency+%{TABLE}.insert_latency+%{TABLE}.update_latency+%{TABLE}.delete_latency) DESC', '((e.select_latency+e.insert_latency+e.update_latency+e.delete_latency)-IFNULL(s.select_latency+s.insert_latency+s.update_latency+s.delete_latency, 0)) DESC', '((e.rows_selected+e.insert_latency+e.rows_updated+e.rows_deleted)-IFNULL(s.rows_selected+s.rows_inserted+s.rows_updated+s.rows_deleted, 0)) > 0', 100, 'table_schema,table_name,index_name'), ('schema_table_statistics'            , '%{TABLE}.total_latency DESC', '(e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total_latency-IFNULL(s.total_latency, 0)) > 0', 100, 'table_schema,table_name'), ('schema_tables_with_full_table_scans', '%{TABLE}.rows_full_scanned DESC', '(e.rows_full_scanned-IFNULL(s.rows_full_scanned, 0)) DESC', '(e.rows_full_scanned-IFNULL(s.rows_full_scanned, 0)) > 0', 100, 'object_schema,object_name'), ('user_summary'                       , '%{TABLE}.statement_latency DESC', '(e.statement_latency-IFNULL(s.statement_latency, 0)) DESC', '(e.statements - IFNULL(s.statements, 0)) > 0', NULL, 'user'), ('user_summary_by_file_io'            , '%{TABLE}.io_latency DESC', '(e.io_latency-IFNULL(s.io_latency, 0)) DESC', '(e.ios - IFNULL(s.ios, 0)) > 0', NULL, 'user'), ('user_summary_by_file_io_type'       , '%{TABLE}.user, %{TABLE}.latency DESC', 'e.user, (e.latency-IFNULL(s.latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'user,event_name'), ('user_summary_by_stages'             , '%{TABLE}.user, %{TABLE}.total_latency DESC', 'e.user, (e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'user,event_name'), ('user_summary_by_statement_latency'  , '%{TABLE}.total_latency DESC', '(e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'user'), ('user_summary_by_statement_type'     , '%{TABLE}.user, %{TABLE}.total_latency DESC', 'e.user, (e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'user,statement'), ('wait_classes_global_by_avg_latency' , 'IFNULL(%{TABLE}.total_latency / NULLIF(%{TABLE}.total, 0), 0) DESC', 'IFNULL((e.total_latency-IFNULL(s.total_latency, 0)) / NULLIF((e.total - IFNULL(s.total, 0)), 0), 0) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'event_class'), ('wait_classes_global_by_latency'     , '%{TABLE}.total_latency DESC', '(e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'event_class'), ('waits_by_host_by_latency'           , '%{TABLE}.host, %{TABLE}.total_latency DESC', 'e.host, (e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'host,event'), ('waits_by_user_by_latency'           , '%{TABLE}.user, %{TABLE}.total_latency DESC', 'e.user, (e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'user,event'), ('waits_global_by_latency'            , '%{TABLE}.total_latency DESC', '(e.total_latency-IFNULL(s.total_latency, 0)) DESC', '(e.total - IFNULL(s.total, 0)) > 0', NULL, 'events') ; END IF;   SELECT '  =======================  Configuration  =======================  ' AS ''; SELECT 'GLOBAL VARIABLES' AS 'The following output is:'; SELECT LOWER(VARIABLE_NAME) AS Variable_name, VARIABLE_VALUE AS Variable_value FROM performance_schema.global_variables ORDER BY VARIABLE_NAME;  IF (v_has_ps = 'YES') THEN SELECT 'Performance Schema Setup - Actors' AS 'The following output is:'; SELECT * FROM performance_schema.setup_actors;  SELECT 'Performance Schema Setup - Consumers' AS 'The following output is:'; SELECT NAME AS Consumer, ENABLED, sys.ps_is_consumer_enabled(NAME) AS COLLECTS FROM performance_schema.setup_consumers;  SELECT 'Performance Schema Setup - Instruments' AS 'The following output is:'; SELECT SUBSTRING_INDEX(NAME, '/', 2) AS 'InstrumentClass', ROUND(100*SUM(IF(ENABLED = 'YES', 1, 0))/COUNT(*), 2) AS 'EnabledPct', ROUND(100*SUM(IF(TIMED = 'YES', 1, 0))/COUNT(*), 2) AS 'TimedPct' FROM performance_schema.setup_instruments GROUP BY SUBSTRING_INDEX(NAME, '/', 2) ORDER BY SUBSTRING_INDEX(NAME, '/', 2);  SELECT 'Performance Schema Setup - Objects' AS 'The following output is:'; SELECT * FROM performance_schema.setup_objects;  SELECT 'Performance Schema Setup - Threads' AS 'The following output is:'; SELECT `TYPE` AS ThreadType, COUNT(*) AS 'Total', ROUND(100*SUM(IF(INSTRUMENTED = 'YES', 1, 0))/COUNT(*), 2) AS 'InstrumentedPct' FROM performance_schema.threads GROUP BY TYPE; END IF;   IF (v_has_replication = 'NO') THEN SELECT 'No Replication Configured' AS 'Replication Status'; ELSE SELECT CONCAT('Replication Configured: ', v_has_replication, ' - Performance Schema Replication Tables: ', v_has_ps_replication) AS 'Replication Status';  IF (v_has_ps_replication = 'YES') THEN SELECT 'Replication - Connection Configuration' AS 'The following output is:'; SELECT * FROM performance_schema.replication_connection_configuration ORDER BY CHANNEL_NAME ; END IF;  IF (v_has_ps_replication = 'YES') THEN SELECT 'Replication - Applier Configuration' AS 'The following output is:'; SELECT * FROM performance_schema.replication_applier_configuration ORDER BY CHANNEL_NAME; END IF;  IF (@@master_info_repository = 'TABLE') THEN SELECT 'Replication - Master Info Repository Configuration' AS 'The following output is:'; SELECT  Channel_name, Host, User_name, Port, Connect_retry, Enabled_ssl, Ssl_ca, Ssl_capath, Ssl_cert, Ssl_cipher, Ssl_key, Ssl_verify_server_cert, Heartbeat, Bind, Ignored_server_ids, Uuid, Retry_count, Ssl_crl, Ssl_crlpath, Tls_version, Enabled_auto_position FROM mysql.slave_master_info ORDER BY Channel_name ; END IF;  IF (@@relay_log_info_repository = 'TABLE') THEN SELECT 'Replication - Relay Log Repository Configuration' AS 'The following output is:'; SELECT  Channel_name, Sql_delay, Number_of_workers, Id FROM mysql.slave_relay_log_info ORDER BY Channel_name ; END IF; END IF;   IF (v_has_ndb IN ('DEFAULT', 'YES')) THEN SELECT 'Cluster Thread Blocks' AS 'The following output is:'; SELECT * FROM ndbinfo.threadblocks; END IF;  IF (v_has_ps = 'YES') THEN IF (@sys.diagnostics.include_raw = 'ON') THEN SELECT '  ========================  Initial Status  ========================  ' AS ''; END IF;  DROP TEMPORARY TABLE IF EXISTS tmp_digests_start; CALL sys.statement_performance_analyzer('create_tmp', 'tmp_digests_start', NULL); CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); CALL sys.statement_performance_analyzer('save', 'tmp_digests_start', NULL);  IF (@sys.diagnostics.include_raw = 'ON') THEN SET @sys.diagnostics.sql = REPLACE(@sys.diagnostics.sql_gen_query_template, '%{OUTPUT}', 'start'); IF (@sys.debug = 'ON') THEN SELECT 'The following query will be used to generate the query for each sys view' AS 'Debug'; SELECT @sys.diagnostics.sql AS 'Debug'; END IF; PREPARE stmt_gen_query FROM @sys.diagnostics.sql; END IF; SET v_done = FALSE; OPEN c_sysviews_w_delta; c_sysviews_w_delta_loop: LOOP FETCH c_sysviews_w_delta INTO v_table_name; IF v_done THEN LEAVE c_sysviews_w_delta_loop; END IF;  IF (@sys.debug = 'ON') THEN SELECT CONCAT('The following queries are for storing the initial content of ', v_table_name) AS 'Debug'; END IF;  CALL sys.execute_prepared_stmt(CONCAT('DROP TEMPORARY TABLE IF EXISTS `tmp_', v_table_name, '_start`')); CALL sys.execute_prepared_stmt(CONCAT('CREATE TEMPORARY TABLE `tmp_', v_table_name, '_start` SELECT * FROM `sys`.`x$', v_table_name, '`'));  IF (@sys.diagnostics.include_raw = 'ON') THEN SET @sys.diagnostics.table_name = CONCAT('x$', v_table_name); EXECUTE stmt_gen_query USING @sys.diagnostics.table_name; SELECT CONCAT(@sys.diagnostics.sql_select, IF(order_by IS NOT NULL, CONCAT('\n ORDER BY ', REPLACE(order_by, '%{TABLE}', CONCAT('tmp_', v_table_name, '_start'))), ''), IF(limit_rows IS NOT NULL, CONCAT('\n LIMIT ', limit_rows), '') ) INTO @sys.diagnostics.sql_select FROM tmp_sys_views_delta WHERE TABLE_NAME COLLATE utf8mb4_0900_as_ci = v_table_name; SELECT CONCAT('Initial ', v_table_name) AS 'The following output is:'; CALL sys.execute_prepared_stmt(@sys.diagnostics.sql_select); END IF; END LOOP; CLOSE c_sysviews_w_delta;  IF (@sys.diagnostics.include_raw = 'ON') THEN DEALLOCATE PREPARE stmt_gen_query; END IF; END IF;  SET v_sql_status_summary_select = 'SELECT Variable_name', v_sql_status_summary_delta  = '', v_sql_status_summary_from   = '';  REPEAT SET v_output_count = v_output_count + 1; IF (v_output_count > 1) THEN SET v_sleep = in_interval-(UNIX_TIMESTAMP(NOW(2))-v_iter_start); SELECT NOW() AS 'Time', CONCAT('Going to sleep for ', v_sleep, ' seconds. Please do not interrupt') AS 'The following output is:'; DO SLEEP(in_interval); END IF; SET v_iter_start = UNIX_TIMESTAMP(NOW(2));  SELECT NOW(), CONCAT('Iteration Number ', IFNULL(v_output_count, 'NULL')) AS 'The following output is:';  IF (@@log_bin = 1) THEN SELECT 'SHOW MASTER STATUS' AS 'The following output is:'; SHOW MASTER STATUS; END IF;  IF (v_has_replication <> 'NO') THEN SELECT 'SHOW SLAVE STATUS' AS 'The following output is:'; SHOW SLAVE STATUS;  IF (v_has_ps_replication = 'YES') THEN SELECT 'Replication Connection Status' AS 'The following output is:'; SELECT * FROM performance_schema.replication_connection_status;  SELECT 'Replication Applier Status' AS 'The following output is:'; SELECT * FROM performance_schema.replication_applier_status ORDER BY CHANNEL_NAME;  SELECT 'Replication Applier Status - Coordinator' AS 'The following output is:'; SELECT * FROM performance_schema.replication_applier_status_by_coordinator ORDER BY CHANNEL_NAME;  SELECT 'Replication Applier Status - Worker' AS 'The following output is:'; SELECT * FROM performance_schema.replication_applier_status_by_worker ORDER BY CHANNEL_NAME, WORKER_ID; END IF;  IF (@@master_info_repository = 'TABLE') THEN SELECT 'Replication - Master Log Status' AS 'The following output is:'; SELECT Master_log_name, Master_log_pos FROM mysql.slave_master_info; END IF;  IF (@@relay_log_info_repository = 'TABLE') THEN SELECT 'Replication - Relay Log Status' AS 'The following output is:'; SELECT sys.format_path(Relay_log_name) AS Relay_log_name, Relay_log_pos, Master_log_name, Master_log_pos FROM mysql.slave_relay_log_info;  SELECT 'Replication - Worker Status' AS 'The following output is:'; SELECT Id, sys.format_path(Relay_log_name) AS Relay_log_name, Relay_log_pos, Master_log_name, Master_log_pos, sys.format_path(Checkpoint_relay_log_name) AS Checkpoint_relay_log_name, Checkpoint_relay_log_pos, Checkpoint_master_log_name, Checkpoint_master_log_pos, Checkpoint_seqno, Checkpoint_group_size, HEX(Checkpoint_group_bitmap) AS Checkpoint_group_bitmap , Channel_name FROM mysql.slave_worker_info ORDER BY  Channel_name, Id; END IF; END IF;  SET v_table_name = CONCAT('tmp_metrics_', v_output_count); CALL sys.execute_prepared_stmt(CONCAT('DROP TEMPORARY TABLE IF EXISTS ', v_table_name));  CALL sys.execute_prepared_stmt(CONCAT('CREATE TEMPORARY TABLE ', v_table_name, ' ( Variable_name VARCHAR(193) NOT NULL, Variable_value VARCHAR(1024), Type VARCHAR(225) NOT NULL, Enabled ENUM(''YES'', ''NO'', ''PARTIAL'') NOT NULL, PRIMARY KEY (Type, Variable_name) ) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4'));  IF (v_has_metrics) THEN SET @sys.diagnostics.sql = CONCAT( 'INSERT INTO ', v_table_name, ' SELECT Variable_name, REPLACE(Variable_value, ''\n'', ''\\\\n'') AS Variable_value, Type, Enabled FROM sys.metrics' ); ELSE SET @sys.diagnostics.sql = CONCAT( 'INSERT INTO ', v_table_name, '(SELECT LOWER(VARIABLE_NAME) AS Variable_name, REPLACE(VARIABLE_VALUE, ''\n'', ''\\\\n'') AS Variable_value, ''Global Status'' AS Type, ''YES'' AS Enabled FROM performance_schema.global_status ) UNION ALL ( SELECT NAME AS Variable_name, COUNT AS Variable_value, CONCAT(''InnoDB Metrics - '', SUBSYSTEM) AS Type, IF(STATUS = ''enabled'', ''YES'', ''NO'') AS Enabled FROM information_schema.INNODB_METRICS WHERE NAME NOT IN ( ''lock_row_lock_time'', ''lock_row_lock_time_avg'', ''lock_row_lock_time_max'', ''lock_row_lock_waits'', ''buffer_pool_reads'', ''buffer_pool_read_requests'', ''buffer_pool_write_requests'', ''buffer_pool_wait_free'', ''buffer_pool_read_ahead'', ''buffer_pool_read_ahead_evicted'', ''buffer_pool_pages_total'', ''buffer_pool_pages_misc'', ''buffer_pool_pages_data'', ''buffer_pool_bytes_data'', ''buffer_pool_pages_dirty'', ''buffer_pool_bytes_dirty'', ''buffer_pool_pages_free'', ''buffer_pages_created'', ''buffer_pages_written'', ''buffer_pages_read'', ''buffer_data_reads'', ''buffer_data_written'', ''file_num_open_files'', ''os_log_bytes_written'', ''os_log_fsyncs'', ''os_log_pending_fsyncs'', ''os_log_pending_writes'', ''log_waits'', ''log_write_requests'', ''log_writes'', ''innodb_dblwr_writes'', ''innodb_dblwr_pages_written'', ''innodb_page_size'') ) UNION ALL ( SELECT ''NOW()'' AS Variable_name, NOW(3) AS Variable_value, ''System Time'' AS Type, ''YES'' AS Enabled ) UNION ALL ( SELECT ''UNIX_TIMESTAMP()'' AS Variable_name, ROUND(UNIX_TIMESTAMP(NOW(3)), 3) AS Variable_value, ''System Time'' AS Type, ''YES'' AS Enabled ) ORDER BY Type, Variable_name;' ); END IF; CALL sys.execute_prepared_stmt(@sys.diagnostics.sql);  CALL sys.execute_prepared_stmt( CONCAT('(SELECT Variable_value INTO @sys.diagnostics.output_time FROM ', v_table_name, ' WHERE Type = ''System Time'' AND Variable_name = ''UNIX_TIMESTAMP()'')') ); SET v_output_time = @sys.diagnostics.output_time;  SET v_sql_status_summary_select = CONCAT(v_sql_status_summary_select, ', CONCAT( LEFT(s', v_output_count, '.Variable_value, ', v_status_summary_width, '), IF(', REPLACE(v_no_delta_names, '%{COUNT}', v_output_count), ' AND s', v_output_count, '.Variable_value REGEXP ''^[0-9]+(\\\\.[0-9]+)?$'', CONCAT('' ('', ROUND(s', v_output_count, '.Variable_value/', v_output_time, ', 2), ''/sec)''), '''') ) AS ''Output ', v_output_count, ''''), v_sql_status_summary_from   = CONCAT(v_sql_status_summary_from, ' ', IF(v_output_count = 1, '  FROM ', '       INNER JOIN '), v_table_name, ' s', v_output_count, IF (v_output_count = 1, '', ' USING (Type, Variable_name)')); IF (v_output_count > 1) THEN SET v_sql_status_summary_delta  = CONCAT(v_sql_status_summary_delta, ', IF(', REPLACE(v_no_delta_names, '%{COUNT}', v_output_count), ' AND s', (v_output_count-1), '.Variable_value REGEXP ''^[0-9]+(\\\\.[0-9]+)?$'' AND s', v_output_count, '.Variable_value REGEXP ''^[0-9]+(\\\\.[0-9]+)?$'', CONCAT(IF(s', (v_output_count-1), '.Variable_value REGEXP ''^[0-9]+\\\\.[0-9]+$'' OR s', v_output_count, '.Variable_value REGEXP ''^[0-9]+\\\\.[0-9]+$'', ROUND((s', v_output_count, '.Variable_value-s', (v_output_count-1), '.Variable_value), 2), (s', v_output_count, '.Variable_value-s', (v_output_count-1), '.Variable_value) ), '' ('', ROUND((s', v_output_count, '.Variable_value-s', (v_output_count-1), '.Variable_value)/(', v_output_time, '-', v_output_time_prev, '), 2), ''/sec)'' ), '''' ) AS ''Delta (', (v_output_count-1), ' -> ', v_output_count, ')'''); END IF;  SET v_output_time_prev = v_output_time;  IF (@sys.diagnostics.include_raw = 'ON') THEN IF (v_has_metrics) THEN SELECT 'SELECT * FROM sys.metrics' AS 'The following output is:'; ELSE SELECT 'sys.metrics equivalent' AS 'The following output is:'; END IF; CALL sys.execute_prepared_stmt(CONCAT('SELECT Type, Variable_name, Enabled, Variable_value FROM ', v_table_name, ' ORDER BY Type, Variable_name')); END IF;  IF (v_has_innodb IN ('DEFAULT', 'YES')) THEN SELECT 'SHOW ENGINE INNODB STATUS' AS 'The following output is:'; EXECUTE stmt_innodb_status; SELECT 'InnoDB - Transactions' AS 'The following output is:'; SELECT * FROM information_schema.INNODB_TRX; END IF;  IF (v_has_ndb IN ('DEFAULT', 'YES')) THEN SELECT 'SHOW ENGINE NDBCLUSTER STATUS' AS 'The following output is:'; EXECUTE stmt_ndbcluster_status;  SELECT 'ndbinfo.memoryusage' AS 'The following output is:'; SELECT node_id, memory_type, sys.format_bytes(used) AS used, used_pages, sys.format_bytes(total) AS total, total_pages, ROUND(100*(used/total), 2) AS 'Used %' FROM ndbinfo.memoryusage;  SET v_done = FALSE; OPEN c_ndbinfo; c_ndbinfo_loop: LOOP FETCH c_ndbinfo INTO v_table_name; IF v_done THEN LEAVE c_ndbinfo_loop; END IF;  SELECT CONCAT('SELECT * FROM ndbinfo.', v_table_name) AS 'The following output is:'; CALL sys.execute_prepared_stmt(CONCAT('SELECT * FROM `ndbinfo`.`', v_table_name, '`')); END LOOP; CLOSE c_ndbinfo;  SELECT * FROM information_schema.FILES; END IF;  SELECT 'SELECT * FROM sys.processlist' AS 'The following output is:'; SELECT processlist.* FROM sys.processlist;  IF (v_has_ps = 'YES') THEN IF (sys.ps_is_consumer_enabled('events_waits_history_long') = 'YES') THEN SELECT 'SELECT * FROM sys.latest_file_io' AS 'The following output is:'; SELECT * FROM sys.latest_file_io; END IF;  IF (EXISTS(SELECT 1 FROM performance_schema.setup_instruments WHERE NAME LIKE 'memory/%' AND ENABLED = 'YES')) THEN SELECT 'SELECT * FROM sys.memory_by_host_by_current_bytes' AS 'The following output is:'; SELECT * FROM sys.memory_by_host_by_current_bytes;  SELECT 'SELECT * FROM sys.memory_by_thread_by_current_bytes' AS 'The following output is:'; SELECT * FROM sys.memory_by_thread_by_current_bytes;  SELECT 'SELECT * FROM sys.memory_by_user_by_current_bytes' AS 'The following output is:'; SELECT * FROM sys.memory_by_user_by_current_bytes;  SELECT 'SELECT * FROM sys.memory_global_by_current_bytes' AS 'The following output is:'; SELECT * FROM sys.memory_global_by_current_bytes; END IF; END IF;  SET v_runtime = (UNIX_TIMESTAMP(NOW(2)) - v_start); UNTIL (v_runtime + in_interval >= in_max_runtime) END REPEAT;  IF (v_has_ps = 'YES') THEN SELECT 'SHOW ENGINE PERFORMANCE_SCHEMA STATUS' AS 'The following output is:'; EXECUTE stmt_ps_status; END IF;  IF (v_has_innodb IN ('DEFAULT', 'YES')) THEN DEALLOCATE PREPARE stmt_innodb_status; END IF; IF (v_has_ps = 'YES') THEN DEALLOCATE PREPARE stmt_ps_status; END IF; IF (v_has_ndb IN ('DEFAULT', 'YES')) THEN DEALLOCATE PREPARE stmt_ndbcluster_status; END IF;   SELECT '  ============================  Schema Information  ============================  ' AS '';  SELECT COUNT(*) AS 'Total Number of Tables' FROM information_schema.TABLES;  IF (@sys.diagnostics.allow_i_s_tables = 'ON') THEN SELECT 'Storage Engine Usage' AS 'The following output is:'; SELECT ENGINE, COUNT(*) AS NUM_TABLES, sys.format_bytes(SUM(DATA_LENGTH)) AS DATA_LENGTH, sys.format_bytes(SUM(INDEX_LENGTH)) AS INDEX_LENGTH, sys.format_bytes(SUM(DATA_LENGTH+INDEX_LENGTH)) AS TOTAL FROM information_schema.TABLES GROUP BY ENGINE;  SELECT 'Schema Object Overview' AS 'The following output is:'; SELECT * FROM sys.schema_object_overview;  SELECT 'Tables without a PRIMARY KEY' AS 'The following output is:'; SELECT TABLES.TABLE_SCHEMA, ENGINE, COUNT(*) AS NumTables FROM information_schema.TABLES LEFT OUTER JOIN information_schema.STATISTICS ON STATISTICS.TABLE_SCHEMA = TABLES.TABLE_SCHEMA AND STATISTICS.TABLE_NAME = TABLES.TABLE_NAME AND STATISTICS.INDEX_NAME = 'PRIMARY' WHERE STATISTICS.TABLE_NAME IS NULL AND TABLES.TABLE_SCHEMA NOT IN ('mysql', 'information_schema', 'performance_schema', 'sys') AND TABLES.TABLE_TYPE = 'BASE TABLE' GROUP BY TABLES.TABLE_SCHEMA, ENGINE; END IF;  IF (v_has_ps = 'YES') THEN SELECT 'Unused Indexes' AS 'The following output is:'; SELECT object_schema, COUNT(*) AS NumUnusedIndexes FROM performance_schema.table_io_waits_summary_by_index_usage WHERE index_name IS NOT NULL AND count_star = 0 AND object_schema NOT IN ('mysql', 'sys') AND index_name != 'PRIMARY' GROUP BY object_schema; END IF;  IF (v_has_ps = 'YES') THEN SELECT '  =========================  Overall Status  =========================  ' AS '';  SELECT 'CALL sys.ps_statement_avg_latency_histogram()' AS 'The following output is:'; CALL sys.ps_statement_avg_latency_histogram();  CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); CALL sys.statement_performance_analyzer('overall', NULL, 'with_runtimes_in_95th_percentile');  SET @sys.diagnostics.sql = REPLACE(@sys.diagnostics.sql_gen_query_template, '%{OUTPUT}', 'end'); IF (@sys.debug = 'ON') THEN SELECT 'The following query will be used to generate the query for each sys view' AS 'Debug'; SELECT @sys.diagnostics.sql AS 'Debug'; END IF; PREPARE stmt_gen_query FROM @sys.diagnostics.sql;  SET v_done = FALSE; OPEN c_sysviews_w_delta; c_sysviews_w_delta_loop: LOOP FETCH c_sysviews_w_delta INTO v_table_name; IF v_done THEN LEAVE c_sysviews_w_delta_loop; END IF;  IF (@sys.debug = 'ON') THEN SELECT CONCAT('The following queries are for storing the final content of ', v_table_name) AS 'Debug'; END IF;  CALL sys.execute_prepared_stmt(CONCAT('DROP TEMPORARY TABLE IF EXISTS `tmp_', v_table_name, '_end`')); CALL sys.execute_prepared_stmt(CONCAT('CREATE TEMPORARY TABLE `tmp_', v_table_name, '_end` SELECT * FROM `sys`.`x$', v_table_name, '`'));  SET @sys.diagnostics.table_name = CONCAT('x$', v_table_name); EXECUTE stmt_gen_query USING @sys.diagnostics.table_name; SELECT CONCAT(@sys.diagnostics.sql_select, IF(order_by IS NOT NULL, CONCAT('\n ORDER BY ', REPLACE(order_by, '%{TABLE}', CONCAT('tmp_', v_table_name, '_end'))), ''), IF(limit_rows IS NOT NULL, CONCAT('\n LIMIT ', limit_rows), '') ) INTO @sys.diagnostics.sql_select FROM tmp_sys_views_delta WHERE TABLE_NAME COLLATE utf8mb4_0900_as_ci = v_table_name; SELECT CONCAT('Overall ', v_table_name) AS 'The following output is:'; CALL sys.execute_prepared_stmt(@sys.diagnostics.sql_select); END LOOP; CLOSE c_sysviews_w_delta;  DEALLOCATE PREPARE stmt_gen_query;   SELECT '  ======================  Delta Status  ======================  ' AS '';  CALL sys.statement_performance_analyzer('delta', 'tmp_digests_start', 'with_runtimes_in_95th_percentile'); CALL sys.statement_performance_analyzer('cleanup', NULL, NULL);  DROP TEMPORARY TABLE tmp_digests_start;  IF (@sys.debug = 'ON') THEN SELECT 'The following query will be used to generate the query for each sys view delta' AS 'Debug'; SELECT @sys.diagnostics.sql_gen_query_delta AS 'Debug'; END IF; PREPARE stmt_gen_query_delta FROM @sys.diagnostics.sql_gen_query_delta;  SET v_old_group_concat_max_len = @@session.group_concat_max_len; SET @@session.group_concat_max_len = 2048; SET v_done = FALSE; OPEN c_sysviews_w_delta; c_sysviews_w_delta_loop: LOOP FETCH c_sysviews_w_delta INTO v_table_name; IF v_done THEN LEAVE c_sysviews_w_delta_loop; END IF;  SET @sys.diagnostics.table_name = v_table_name; EXECUTE stmt_gen_query_delta USING @sys.diagnostics.table_name; SELECT CONCAT(@sys.diagnostics.sql_select, IF(where_delta IS NOT NULL, CONCAT('\n WHERE ', where_delta), ''), IF(order_by_delta IS NOT NULL, CONCAT('\n ORDER BY ', order_by_delta), ''), IF(limit_rows IS NOT NULL, CONCAT('\n LIMIT ', limit_rows), '') ) INTO @sys.diagnostics.sql_select FROM tmp_sys_views_delta WHERE TABLE_NAME COLLATE utf8mb4_0900_as_ci = v_table_name;  SELECT CONCAT('Delta ', v_table_name) AS 'The following output is:'; CALL sys.execute_prepared_stmt(@sys.diagnostics.sql_select);  CALL sys.execute_prepared_stmt(CONCAT('DROP TEMPORARY TABLE `tmp_', v_table_name, '_end`')); CALL sys.execute_prepared_stmt(CONCAT('DROP TEMPORARY TABLE `tmp_', v_table_name, '_start`')); END LOOP; CLOSE c_sysviews_w_delta; SET @@session.group_concat_max_len = v_old_group_concat_max_len;  DEALLOCATE PREPARE stmt_gen_query_delta; DROP TEMPORARY TABLE tmp_sys_views_delta; END IF;  IF (v_has_metrics) THEN SELECT 'SELECT * FROM sys.metrics' AS 'The following output is:'; ELSE SELECT 'sys.metrics equivalent' AS 'The following output is:'; END IF; CALL sys.execute_prepared_stmt( CONCAT(v_sql_status_summary_select, v_sql_status_summary_delta, ', Type, s1.Enabled', v_sql_status_summary_from, ' ORDER BY Type, Variable_name' ) );  SET v_count = 0; WHILE (v_count < v_output_count) DO SET v_count = v_count + 1; SET v_table_name = CONCAT('tmp_metrics_', v_count); CALL sys.execute_prepared_stmt(CONCAT('DROP TEMPORARY TABLE IF EXISTS ', v_table_name)); END WHILE;  IF (in_auto_config <> 'current') THEN CALL sys.ps_setup_reload_saved(); SET sql_log_bin = @log_bin; END IF;  SET @sys.diagnostics.output_time            = NULL, @sys.diagnostics.sql                    = NULL, @sys.diagnostics.sql_gen_query_delta    = NULL, @sys.diagnostics.sql_gen_query_template = NULL, @sys.diagnostics.sql_select             = NULL, @sys.diagnostics.table_name             = NULL;  IF (v_this_thread_enabled = 'YES') THEN CALL sys.ps_setup_enable_thread(CONNECTION_ID()); END IF;  IF (@log_bin = 1) THEN SET sql_log_bin = @log_bin; END IF; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for execute_prepared_stmt
-- ----------------------------
DROP PROCEDURE IF EXISTS `execute_prepared_stmt`;
delimiter ;;
CREATE PROCEDURE `execute_prepared_stmt`(IN in_query longtext CHARACTER SET UTF8MB4)
  READS SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes the query in the argument and executes it using a prepared statement. The prepared statement is deallocated,\r\n so the procedure is mainly useful for executing one off dynamically created queries.\r\n \r\n The sys_execute_prepared_stmt prepared statement name is used for the query and is required not to exist.\r\n \r\n \r\n Parameters\r\n \r\n in_query (longtext CHARACTER SET UTF8MB4):\r\n The query to execute.\r\n \r\n \r\n Configuration Options\r\n \r\n sys.debug\r\n Whether to provide debugging output.\r\n Default is \'OFF\'. Set to \'ON\' to include.\r\n \r\n \r\n Example\r\n \r\n mysql> CALL sys.execute_prepared_stmt(\'SELECT * FROM sys.sys_config\');\r\n +------------------------+-------+---------------------+--------+\r\n | variable               | value | set_time            | set_by |\r\n +------------------------+-------+---------------------+--------+\r\n | statement_truncate_len | 64    | 2015-06-30 13:06:00 | NULL   |\r\n +------------------------+-------+---------------------+--------+\r\n 1 row in set (0.00 sec)\r\n \r\n Query OK, 0 rows affected (0.00 sec)\r\n '
BEGIN IF (@sys.debug IS NULL) THEN SET @sys.debug = sys.sys_get_config('debug', 'OFF'); END IF;  IF (in_query IS NULL OR LENGTH(in_query) < 4) THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "The @sys.execute_prepared_stmt.sql must contain a query"; END IF;  SET @sys.execute_prepared_stmt.sql = in_query;  IF (@sys.debug = 'ON') THEN SELECT @sys.execute_prepared_stmt.sql AS 'Debug'; END IF; PREPARE sys_execute_prepared_stmt FROM @sys.execute_prepared_stmt.sql; EXECUTE sys_execute_prepared_stmt; DEALLOCATE PREPARE sys_execute_prepared_stmt;  SET @sys.execute_prepared_stmt.sql = NULL; END
;;
delimiter ;

-- ----------------------------
-- Function structure for extract_schema_from_file_name
-- ----------------------------
DROP FUNCTION IF EXISTS `extract_schema_from_file_name`;
delimiter ;;
CREATE FUNCTION `extract_schema_from_file_name`(path VARCHAR(512))
 RETURNS varchar(64) CHARSET utf8mb4
  NO SQL 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes a raw file path, and attempts to extract the schema name from it.\r\n \r\n Useful for when interacting with Performance Schema data \r\n concerning IO statistics, for example.\r\n \r\n Currently relies on the fact that a table data file will be within a \r\n specified database directory (will not work with partitions or tables\r\n that specify an individual DATA_DIRECTORY).\r\n \r\n Parameters\r\n \r\n path (VARCHAR(512)):\r\n The full file path to a data file to extract the schema name from.\r\n \r\n Returns\r\n \r\n VARCHAR(64)\r\n \r\n Example\r\n \r\n mysql> SELECT sys.extract_schema_from_file_name(\'/var/lib/mysql/employees/employee.ibd\');\r\n +----------------------------------------------------------------------------+\r\n | sys.extract_schema_from_file_name(\'/var/lib/mysql/employees/employee.ibd\') |\r\n +----------------------------------------------------------------------------+\r\n | employees                                                                  |\r\n +----------------------------------------------------------------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN RETURN LEFT(SUBSTRING_INDEX(SUBSTRING_INDEX(REPLACE(path, '\\', '/'), '/', -2), '/', 1), 64); END
;;
delimiter ;

-- ----------------------------
-- Function structure for extract_table_from_file_name
-- ----------------------------
DROP FUNCTION IF EXISTS `extract_table_from_file_name`;
delimiter ;;
CREATE FUNCTION `extract_table_from_file_name`(path VARCHAR(512))
 RETURNS varchar(64) CHARSET utf8mb4
  NO SQL 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes a raw file path, and extracts the table name from it.\r\n \r\n Useful for when interacting with Performance Schema data \r\n concerning IO statistics, for example.\r\n \r\n Parameters\r\n \r\n path (VARCHAR(512)):\r\n The full file path to a data file to extract the table name from.\r\n \r\n Returns\r\n \r\n VARCHAR(64)\r\n \r\n Example\r\n \r\n mysql> SELECT sys.extract_table_from_file_name(\'/var/lib/mysql/employees/employee.ibd\');\r\n +---------------------------------------------------------------------------+\r\n | sys.extract_table_from_file_name(\'/var/lib/mysql/employees/employee.ibd\') |\r\n +---------------------------------------------------------------------------+\r\n | employee                                                                  |\r\n +---------------------------------------------------------------------------+\r\n 1 row in set (0.02 sec)\r\n '
BEGIN RETURN LEFT(SUBSTRING_INDEX(REPLACE(SUBSTRING_INDEX(REPLACE(path, '\\', '/'), '/', -1), '@0024', '$'), '.', 1), 64); END
;;
delimiter ;

-- ----------------------------
-- Function structure for format_bytes
-- ----------------------------
DROP FUNCTION IF EXISTS `format_bytes`;
delimiter ;;
CREATE FUNCTION `format_bytes`(bytes TEXT)
 RETURNS text CHARSET utf8mb4
  NO SQL 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes a raw bytes value, and converts it to a human readable format.\r\n \r\n Parameters\r\n \r\n bytes (TEXT):\r\n A raw bytes value.\r\n \r\n Returns\r\n \r\n TEXT\r\n \r\n Example\r\n \r\n mysql> SELECT sys.format_bytes(2348723492723746) AS size;\r\n +----------+\r\n | size     |\r\n +----------+\r\n | 2.09 PiB |\r\n +----------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> SELECT sys.format_bytes(2348723492723) AS size;\r\n +----------+\r\n | size     |\r\n +----------+\r\n | 2.14 TiB |\r\n +----------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> SELECT sys.format_bytes(23487234) AS size;\r\n +-----------+\r\n | size      |\r\n +-----------+\r\n | 22.40 MiB |\r\n +-----------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN IF bytes IS NULL THEN RETURN NULL; ELSEIF bytes >= 1125899906842624 THEN RETURN CONCAT(ROUND(bytes / 1125899906842624, 2), ' PiB'); ELSEIF bytes >= 1099511627776 THEN RETURN CONCAT(ROUND(bytes / 1099511627776, 2), ' TiB'); ELSEIF bytes >= 1073741824 THEN RETURN CONCAT(ROUND(bytes / 1073741824, 2), ' GiB'); ELSEIF bytes >= 1048576 THEN RETURN CONCAT(ROUND(bytes / 1048576, 2), ' MiB'); ELSEIF bytes >= 1024 THEN RETURN CONCAT(ROUND(bytes / 1024, 2), ' KiB'); ELSE RETURN CONCAT(ROUND(bytes, 0), ' bytes'); END IF; END
;;
delimiter ;

-- ----------------------------
-- Function structure for format_path
-- ----------------------------
DROP FUNCTION IF EXISTS `format_path`;
delimiter ;;
CREATE FUNCTION `format_path`(in_path VARCHAR(512))
 RETURNS varchar(512) CHARSET utf8mb4
  NO SQL 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes a raw path value, and strips out the datadir or tmpdir\r\n replacing with @@datadir and @@tmpdir respectively.\r\n \r\n Also normalizes the paths across operating systems, so backslashes\r\n on Windows are converted to forward slashes\r\n \r\n Parameters\r\n \r\n path (VARCHAR(512)):\r\n The raw file path value to format.\r\n \r\n Returns\r\n \r\n VARCHAR(512) CHARSET UTF8MB4\r\n \r\n Example\r\n \r\n mysql> select @@datadir;\r\n +-----------------------------------------------+\r\n | @@datadir                                     |\r\n +-----------------------------------------------+\r\n | /Users/mark/sandboxes/SmallTree/AMaster/data/ |\r\n +-----------------------------------------------+\r\n 1 row in set (0.06 sec)\r\n \r\n mysql> select format_path(\'/Users/mark/sandboxes/SmallTree/AMaster/data/mysql/proc.MYD\') AS path;\r\n +--------------------------+\r\n | path                     |\r\n +--------------------------+\r\n | @@datadir/mysql/proc.MYD |\r\n +--------------------------+\r\n 1 row in set (0.03 sec)\r\n '
BEGIN DECLARE v_path VARCHAR(512); DECLARE v_undo_dir VARCHAR(1024);  DECLARE path_separator CHAR(1) DEFAULT '/';  IF @@global.version_compile_os LIKE 'win%' THEN SET path_separator = '\\'; END IF;  IF in_path LIKE '/private/%' THEN SET v_path = REPLACE(in_path, '/private', ''); ELSE SET v_path = in_path; END IF;  SET v_undo_dir = IFNULL((SELECT VARIABLE_VALUE FROM performance_schema.global_variables WHERE VARIABLE_NAME = 'innodb_undo_directory'), '');  IF v_path IS NULL THEN RETURN NULL; ELSEIF v_path LIKE CONCAT(@@global.datadir, IF(SUBSTRING(@@global.datadir, -1) = path_separator, '%', CONCAT(path_separator, '%'))) ESCAPE '|' THEN SET v_path = REPLACE(v_path, @@global.datadir, CONCAT('@@datadir', IF(SUBSTRING(@@global.datadir, -1) = path_separator, path_separator, ''))); ELSEIF v_path LIKE CONCAT(@@global.tmpdir, IF(SUBSTRING(@@global.tmpdir, -1) = path_separator, '%', CONCAT(path_separator, '%'))) ESCAPE '|' THEN SET v_path = REPLACE(v_path, @@global.tmpdir, CONCAT('@@tmpdir', IF(SUBSTRING(@@global.tmpdir, -1) = path_separator, path_separator, ''))); ELSEIF v_path LIKE CONCAT(@@global.slave_load_tmpdir, IF(SUBSTRING(@@global.slave_load_tmpdir, -1) = path_separator, '%', CONCAT(path_separator, '%'))) ESCAPE '|' THEN SET v_path = REPLACE(v_path, @@global.slave_load_tmpdir, CONCAT('@@slave_load_tmpdir', IF(SUBSTRING(@@global.slave_load_tmpdir, -1) = path_separator, path_separator, ''))); ELSEIF v_path LIKE CONCAT(@@global.innodb_data_home_dir, IF(SUBSTRING(@@global.innodb_data_home_dir, -1) = path_separator, '%', CONCAT(path_separator, '%'))) ESCAPE '|' THEN SET v_path = REPLACE(v_path, @@global.innodb_data_home_dir, CONCAT('@@innodb_data_home_dir', IF(SUBSTRING(@@global.innodb_data_home_dir, -1) = path_separator, path_separator, ''))); ELSEIF v_path LIKE CONCAT(@@global.innodb_log_group_home_dir, IF(SUBSTRING(@@global.innodb_log_group_home_dir, -1) = path_separator, '%', CONCAT(path_separator, '%'))) ESCAPE '|' THEN SET v_path = REPLACE(v_path, @@global.innodb_log_group_home_dir, CONCAT('@@innodb_log_group_home_dir', IF(SUBSTRING(@@global.innodb_log_group_home_dir, -1) = path_separator, path_separator, ''))); ELSEIF v_path LIKE CONCAT(v_undo_dir, IF(SUBSTRING(v_undo_dir, -1) = path_separator, '%', CONCAT(path_separator, '%'))) ESCAPE '|' THEN SET v_path = REPLACE(v_path, v_undo_dir, CONCAT('@@innodb_undo_directory', IF(SUBSTRING(v_undo_dir, -1) = path_separator, path_separator, ''))); ELSEIF v_path LIKE CONCAT(@@global.basedir, IF(SUBSTRING(@@global.basedir, -1) = path_separator, '%', CONCAT(path_separator, '%'))) ESCAPE '|' THEN SET v_path = REPLACE(v_path, @@global.basedir, CONCAT('@@basedir', IF(SUBSTRING(@@global.basedir, -1) = path_separator, path_separator, ''))); END IF;  RETURN v_path; END
;;
delimiter ;

-- ----------------------------
-- Function structure for format_statement
-- ----------------------------
DROP FUNCTION IF EXISTS `format_statement`;
delimiter ;;
CREATE FUNCTION `format_statement`(statement LONGTEXT)
 RETURNS longtext CHARSET utf8mb4
  NO SQL 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Formats a normalized statement, truncating it if it is > 64 characters long by default.\r\n \r\n To configure the length to truncate the statement to by default, update the `statement_truncate_len`\r\n variable with `sys_config` table to a different value. Alternatively, to change it just for just \r\n your particular session, use `SET @sys.statement_truncate_len := <some new value>`.\r\n \r\n Useful for printing statement related data from Performance Schema from \r\n the command line.\r\n \r\n Parameters\r\n \r\n statement (LONGTEXT): \r\n The statement to format.\r\n \r\n Returns\r\n \r\n LONGTEXT\r\n \r\n Example\r\n \r\n mysql> SELECT sys.format_statement(digest_text)\r\n ->   FROM performance_schema.events_statements_summary_by_digest\r\n ->  ORDER by sum_timer_wait DESC limit 5;\r\n +-------------------------------------------------------------------+\r\n | sys.format_statement(digest_text)                                 |\r\n +-------------------------------------------------------------------+\r\n | CREATE SQL SECURITY INVOKER VI ... KE ? AND `variable_value` > ?  |\r\n | CREATE SQL SECURITY INVOKER VI ... ait` IS NOT NULL , `esc` . ... |\r\n | CREATE SQL SECURITY INVOKER VI ... ait` IS NOT NULL , `sys` . ... |\r\n | CREATE SQL SECURITY INVOKER VI ...  , `compressed_size` ) ) DESC  |\r\n | CREATE SQL SECURITY INVOKER VI ... LIKE ? ORDER BY `timer_start`  |\r\n +-------------------------------------------------------------------+\r\n 5 rows in set (0.00 sec)\r\n '
BEGIN IF @sys.statement_truncate_len IS NULL THEN SET @sys.statement_truncate_len = sys_get_config('statement_truncate_len', 64); END IF;  IF CHAR_LENGTH(statement) > @sys.statement_truncate_len THEN RETURN REPLACE(CONCAT(LEFT(statement, (@sys.statement_truncate_len/2)-2), ' ... ', RIGHT(statement, (@sys.statement_truncate_len/2)-2)), '\n', ' '); ELSE  RETURN REPLACE(statement, '\n', ' '); END IF; END
;;
delimiter ;

-- ----------------------------
-- Function structure for format_time
-- ----------------------------
DROP FUNCTION IF EXISTS `format_time`;
delimiter ;;
CREATE FUNCTION `format_time`(picoseconds TEXT)
 RETURNS text CHARSET utf8mb4
  NO SQL 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes a raw picoseconds value, and converts it to a human readable form.\r\n \r\n Picoseconds are the precision that all latency values are printed in\r\n within Performance Schema, however are not user friendly when wanting\r\n to scan output from the command line.\r\n \r\n Parameters\r\n \r\n picoseconds (TEXT):\r\n The raw picoseconds value to convert.\r\n \r\n Returns\r\n \r\n TEXT CHARSET UTF8MB4\r\n \r\n Example\r\n \r\n mysql> select format_time(342342342342345);\r\n +------------------------------+\r\n | format_time(342342342342345) |\r\n +------------------------------+\r\n | 00:05:42                     |\r\n +------------------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> select format_time(342342342);\r\n +------------------------+\r\n | format_time(342342342) |\r\n +------------------------+\r\n | 342.34 us              |\r\n +------------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> select format_time(34234);\r\n +--------------------+\r\n | format_time(34234) |\r\n +--------------------+\r\n | 34.23 ns           |\r\n +--------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN IF picoseconds IS NULL THEN RETURN NULL; ELSEIF picoseconds >= 604800000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 604800000000000000, 2), ' w'); ELSEIF picoseconds >= 86400000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 86400000000000000, 2), ' d'); ELSEIF picoseconds >= 3600000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 3600000000000000, 2), ' h'); ELSEIF picoseconds >= 60000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 60000000000000, 2), ' m'); ELSEIF picoseconds >= 1000000000000 THEN RETURN CONCAT(ROUND(picoseconds / 1000000000000, 2), ' s'); ELSEIF picoseconds >= 1000000000 THEN RETURN CONCAT(ROUND(picoseconds / 1000000000, 2), ' ms'); ELSEIF picoseconds >= 1000000 THEN RETURN CONCAT(ROUND(picoseconds / 1000000, 2), ' us'); ELSEIF picoseconds >= 1000 THEN RETURN CONCAT(ROUND(picoseconds / 1000, 2), ' ns'); ELSE RETURN CONCAT(picoseconds, ' ps'); END IF; END
;;
delimiter ;

-- ----------------------------
-- Function structure for list_add
-- ----------------------------
DROP FUNCTION IF EXISTS `list_add`;
delimiter ;;
CREATE FUNCTION `list_add`(in_list TEXT, in_add_value TEXT)
 RETURNS text CHARSET utf8mb4
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes a list, and a value to add to the list, and returns the resulting list.\r\n \r\n Useful for altering certain session variables, like sql_mode or optimizer_switch for instance.\r\n \r\n Parameters\r\n \r\n in_list (TEXT):\r\n The comma separated list to add a value to\r\n \r\n in_add_value (TEXT):\r\n The value to add to the input list\r\n \r\n Returns\r\n \r\n TEXT\r\n \r\n Example\r\n \r\n mysql> select @@sql_mode;\r\n +-----------------------------------------------------------------------------------+\r\n | @@sql_mode                                                                        |\r\n +-----------------------------------------------------------------------------------+\r\n | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |\r\n +-----------------------------------------------------------------------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> set sql_mode = sys.list_add(@@sql_mode, \'ANSI_QUOTES\');\r\n Query OK, 0 rows affected (0.06 sec)\r\n \r\n mysql> select @@sql_mode;\r\n +-----------------------------------------------------------------------------------------------+\r\n | @@sql_mode                                                                                    |\r\n +-----------------------------------------------------------------------------------------------+\r\n | ANSI_QUOTES,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |\r\n +-----------------------------------------------------------------------------------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n '
BEGIN  IF (in_add_value IS NULL) THEN SIGNAL SQLSTATE '02200' SET MESSAGE_TEXT = 'Function sys.list_add: in_add_value input variable should not be NULL', MYSQL_ERRNO = 1138; END IF;  IF (in_list IS NULL OR LENGTH(in_list) = 0) THEN RETURN in_add_value; END IF;  RETURN (SELECT CONCAT(TRIM(BOTH ',' FROM TRIM(in_list)), ',', in_add_value));  END
;;
delimiter ;

-- ----------------------------
-- Function structure for list_drop
-- ----------------------------
DROP FUNCTION IF EXISTS `list_drop`;
delimiter ;;
CREATE FUNCTION `list_drop`(in_list TEXT, in_drop_value TEXT)
 RETURNS text CHARSET utf8mb4
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes a list, and a value to attempt to remove from the list, and returns the resulting list.\r\n \r\n Useful for altering certain session variables, like sql_mode or optimizer_switch for instance.\r\n \r\n Parameters\r\n \r\n in_list (TEXT):\r\n The comma separated list to drop a value from\r\n \r\n in_drop_value (TEXT):\r\n The value to drop from the input list\r\n \r\n Returns\r\n \r\n TEXT\r\n \r\n Example\r\n \r\n mysql> select @@sql_mode;\r\n +-----------------------------------------------------------------------------------------------+\r\n | @@sql_mode                                                                                    |\r\n +-----------------------------------------------------------------------------------------------+\r\n | ANSI_QUOTES,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |\r\n +-----------------------------------------------------------------------------------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> set sql_mode = sys.list_drop(@@sql_mode, \'ONLY_FULL_GROUP_BY\');\r\n Query OK, 0 rows affected (0.03 sec)\r\n \r\n mysql> select @@sql_mode;\r\n +----------------------------------------------------------------------------+\r\n | @@sql_mode                                                                 |\r\n +----------------------------------------------------------------------------+\r\n | ANSI_QUOTES,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |\r\n +----------------------------------------------------------------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n '
BEGIN  IF (in_drop_value IS NULL) THEN SIGNAL SQLSTATE '02200' SET MESSAGE_TEXT = 'Function sys.list_drop: in_drop_value input variable should not be NULL', MYSQL_ERRNO = 1138; END IF;  IF (in_list IS NULL OR LENGTH(in_list) = 0) THEN RETURN in_list; END IF;  RETURN (SELECT TRIM(BOTH ',' FROM REPLACE(REPLACE(CONCAT(',', in_list), CONCAT(',', in_drop_value), ''), CONCAT(', ', in_drop_value), '')));  END
;;
delimiter ;

-- ----------------------------
-- Function structure for ps_is_account_enabled
-- ----------------------------
DROP FUNCTION IF EXISTS `ps_is_account_enabled`;
delimiter ;;
CREATE FUNCTION `ps_is_account_enabled`(in_host VARCHAR(60),  in_user VARCHAR(32))
 RETURNS enum('YES','NO') CHARSET utf8mb4
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Determines whether instrumentation of an account is enabled \r\n within Performance Schema.\r\n \r\n Parameters\r\n \r\n in_host VARCHAR(60): \r\n The hostname of the account to check.\r\n in_user VARCHAR(32):\r\n The username of the account to check.\r\n \r\n Returns\r\n \r\n ENUM(\'YES\', \'NO\', \'PARTIAL\')\r\n \r\n Example\r\n \r\n mysql> SELECT sys.ps_is_account_enabled(\'localhost\', \'root\');\r\n +------------------------------------------------+\r\n | sys.ps_is_account_enabled(\'localhost\', \'root\') |\r\n +------------------------------------------------+\r\n | YES                                            |\r\n +------------------------------------------------+\r\n 1 row in set (0.01 sec)\r\n '
BEGIN RETURN IF(EXISTS(SELECT 1 FROM performance_schema.setup_actors WHERE (`HOST` = '%' OR in_host LIKE `HOST`) AND (`USER` = '%' OR `USER` = in_user) AND (`ENABLED` = 'YES') ), 'YES', 'NO' ); END
;;
delimiter ;

-- ----------------------------
-- Function structure for ps_is_consumer_enabled
-- ----------------------------
DROP FUNCTION IF EXISTS `ps_is_consumer_enabled`;
delimiter ;;
CREATE FUNCTION `ps_is_consumer_enabled`(in_consumer varchar(64))
 RETURNS enum('YES','NO') CHARSET utf8mb4
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Determines whether a consumer is enabled (taking the consumer hierarchy into consideration)\r\n within the Performance Schema.\r\n \r\n An exception with errno 3047 is thrown if an unknown consumer name is passed to the function.\r\n A consumer name of NULL returns NULL.\r\n \r\n Parameters\r\n \r\n in_consumer VARCHAR(64): \r\n The name of the consumer to check.\r\n \r\n Returns\r\n \r\n ENUM(\'YES\', \'NO\')\r\n \r\n Example\r\n \r\n mysql> SELECT sys.ps_is_consumer_enabled(\'events_stages_history\');\r\n +-----------------------------------------------------+\r\n | sys.ps_is_consumer_enabled(\'events_stages_history\') |\r\n +-----------------------------------------------------+\r\n | NO                                                  |\r\n +-----------------------------------------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN DECLARE v_is_enabled ENUM('YES', 'NO') DEFAULT NULL; DECLARE v_error_msg VARCHAR(128);  IF (in_consumer IS NULL) THEN RETURN NULL; END IF;  SET v_is_enabled = ( SELECT (CASE WHEN c.NAME = 'global_instrumentation' THEN c.ENABLED WHEN c.NAME = 'thread_instrumentation' THEN IF(cg.ENABLED = 'YES' AND c.ENABLED = 'YES', 'YES', 'NO') WHEN c.NAME LIKE '%\_digest'           THEN IF(cg.ENABLED = 'YES' AND c.ENABLED = 'YES', 'YES', 'NO') WHEN c.NAME LIKE '%\_current'          THEN IF(cg.ENABLED = 'YES' AND ct.ENABLED = 'YES' AND c.ENABLED = 'YES', 'YES', 'NO') ELSE IF(cg.ENABLED = 'YES' AND ct.ENABLED = 'YES' AND c.ENABLED = 'YES' AND ( SELECT cc.ENABLED FROM performance_schema.setup_consumers cc WHERE NAME = CONCAT(SUBSTRING_INDEX(c.NAME, '_', 2), '_current') ) = 'YES', 'YES', 'NO') END) AS IsEnabled FROM performance_schema.setup_consumers c INNER JOIN performance_schema.setup_consumers cg INNER JOIN performance_schema.setup_consumers ct WHERE cg.NAME       = 'global_instrumentation' AND ct.NAME   = 'thread_instrumentation' AND c.NAME    = in_consumer );  IF (v_is_enabled IS NOT NULL) THEN RETURN v_is_enabled; ELSE SET v_error_msg = CONCAT('Invalid argument error: ', in_consumer, ' in function sys.ps_is_consumer_enabled.'); SIGNAL SQLSTATE 'HY000' SET MESSAGE_TEXT = v_error_msg, MYSQL_ERRNO  = 3047; END IF; END
;;
delimiter ;

-- ----------------------------
-- Function structure for ps_is_instrument_default_enabled
-- ----------------------------
DROP FUNCTION IF EXISTS `ps_is_instrument_default_enabled`;
delimiter ;;
CREATE FUNCTION `ps_is_instrument_default_enabled`(in_instrument VARCHAR(128))
 RETURNS enum('YES','NO') CHARSET utf8mb4
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Returns whether an instrument is enabled by default in this version of MySQL.\r\n \r\n Parameters\r\n \r\n in_instrument VARCHAR(128): \r\n The instrument to check.\r\n \r\n Returns\r\n \r\n ENUM(\'YES\', \'NO\')\r\n \r\n Example\r\n \r\n mysql> SELECT sys.ps_is_instrument_default_enabled(\'statement/sql/select\');\r\n +--------------------------------------------------------------+\r\n | sys.ps_is_instrument_default_enabled(\'statement/sql/select\') |\r\n +--------------------------------------------------------------+\r\n | YES                                                          |\r\n +--------------------------------------------------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN DECLARE v_enabled ENUM('YES', 'NO');  SET v_enabled = IF(in_instrument LIKE 'wait/io/file/%' OR in_instrument LIKE 'wait/io/table/%' OR in_instrument LIKE 'statement/%' OR in_instrument LIKE 'memory/performance_schema/%' OR in_instrument IN ('wait/lock/table/sql/handler', 'idle')  OR in_instrument LIKE 'stage/innodb/%' OR in_instrument = 'stage/sql/copy to tmp table'  , 'YES', 'NO' );  RETURN v_enabled; END
;;
delimiter ;

-- ----------------------------
-- Function structure for ps_is_instrument_default_timed
-- ----------------------------
DROP FUNCTION IF EXISTS `ps_is_instrument_default_timed`;
delimiter ;;
CREATE FUNCTION `ps_is_instrument_default_timed`(in_instrument VARCHAR(128))
 RETURNS enum('YES','NO') CHARSET utf8mb4
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Returns whether an instrument is timed by default in this version of MySQL.\r\n \r\n Parameters\r\n \r\n in_instrument VARCHAR(128): \r\n The instrument to check.\r\n \r\n Returns\r\n \r\n ENUM(\'YES\', \'NO\')\r\n \r\n Example\r\n \r\n mysql> SELECT sys.ps_is_instrument_default_timed(\'statement/sql/select\');\r\n +------------------------------------------------------------+\r\n | sys.ps_is_instrument_default_timed(\'statement/sql/select\') |\r\n +------------------------------------------------------------+\r\n | YES                                                        |\r\n +------------------------------------------------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN DECLARE v_timed ENUM('YES', 'NO');  SET v_timed = IF(in_instrument LIKE 'wait/io/file/%' OR in_instrument LIKE 'wait/io/table/%' OR in_instrument LIKE 'statement/%' OR in_instrument IN ('wait/lock/table/sql/handler', 'idle')  OR in_instrument LIKE 'stage/innodb/%' OR in_instrument = 'stage/sql/copy to tmp table'  , 'YES', 'NO' );  RETURN v_timed; END
;;
delimiter ;

-- ----------------------------
-- Function structure for ps_is_thread_instrumented
-- ----------------------------
DROP FUNCTION IF EXISTS `ps_is_thread_instrumented`;
delimiter ;;
CREATE FUNCTION `ps_is_thread_instrumented`(in_connection_id BIGINT UNSIGNED)
 RETURNS enum('YES','NO','UNKNOWN') CHARSET utf8mb4
  READS SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Checks whether the provided connection id is instrumented within Performance Schema.\r\n \r\n Parameters\r\n \r\n in_connection_id (BIGINT UNSIGNED):\r\n The id of the connection to check.\r\n \r\n Returns\r\n \r\n ENUM(\'YES\', \'NO\', \'UNKNOWN\')\r\n \r\n Example\r\n \r\n mysql> SELECT sys.ps_is_thread_instrumented(CONNECTION_ID());\r\n +------------------------------------------------+\r\n | sys.ps_is_thread_instrumented(CONNECTION_ID()) |\r\n +------------------------------------------------+\r\n | YES                                            |\r\n +------------------------------------------------+\r\n '
BEGIN DECLARE v_enabled ENUM('YES', 'NO', 'UNKNOWN');  IF (in_connection_id IS NULL) THEN RETURN NULL; END IF;  SELECT INSTRUMENTED INTO v_enabled FROM performance_schema.threads  WHERE PROCESSLIST_ID = in_connection_id;  IF (v_enabled IS NULL) THEN RETURN 'UNKNOWN'; ELSE RETURN v_enabled; END IF; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_disable_background_threads
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_disable_background_threads`;
delimiter ;;
CREATE PROCEDURE `ps_setup_disable_background_threads`()
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Disable all background thread instrumentation within Performance Schema.\r\n \r\n Parameters\r\n \r\n None.\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_disable_background_threads();\r\n +--------------------------------+\r\n | summary                        |\r\n +--------------------------------+\r\n | Disabled 18 background threads |\r\n +--------------------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN UPDATE performance_schema.threads SET instrumented = 'NO' WHERE type = 'BACKGROUND';  SELECT CONCAT('Disabled ', @rows := ROW_COUNT(), ' background thread', IF(@rows != 1, 's', '')) AS summary; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_disable_consumer
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_disable_consumer`;
delimiter ;;
CREATE PROCEDURE `ps_setup_disable_consumer`(IN consumer VARCHAR(128))
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Disables consumers within Performance Schema \r\n matching the input pattern.\r\n \r\n Parameters\r\n \r\n consumer (VARCHAR(128)):\r\n A LIKE pattern match (using \"%consumer%\") of consumers to disable\r\n \r\n Example\r\n \r\n To disable all consumers:\r\n \r\n mysql> CALL sys.ps_setup_disable_consumer(\'\');\r\n +--------------------------+\r\n | summary                  |\r\n +--------------------------+\r\n | Disabled 15 consumers    |\r\n +--------------------------+\r\n 1 row in set (0.02 sec)\r\n \r\n To disable just the event_stage consumers:\r\n \r\n mysql> CALL sys.ps_setup_disable_comsumers(\'stage\');\r\n +------------------------+\r\n | summary                |\r\n +------------------------+\r\n | Disabled 3 consumers   |\r\n +------------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN UPDATE performance_schema.setup_consumers SET enabled = 'NO' WHERE name LIKE CONCAT('%', consumer, '%');  SELECT CONCAT('Disabled ', @rows := ROW_COUNT(), ' consumer', IF(@rows != 1, 's', '')) AS summary; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_disable_instrument
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_disable_instrument`;
delimiter ;;
CREATE PROCEDURE `ps_setup_disable_instrument`(IN in_pattern VARCHAR(128))
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Disables instruments within Performance Schema \r\n matching the input pattern.\r\n \r\n Parameters\r\n \r\n in_pattern (VARCHAR(128)):\r\n A LIKE pattern match (using \"%in_pattern%\") of events to disable\r\n \r\n Example\r\n \r\n To disable all mutex instruments:\r\n \r\n mysql> CALL sys.ps_setup_disable_instrument(\'wait/synch/mutex\');\r\n +--------------------------+\r\n | summary                  |\r\n +--------------------------+\r\n | Disabled 155 instruments |\r\n +--------------------------+\r\n 1 row in set (0.02 sec)\r\n \r\n To disable just a specific TCP/IP based network IO instrument:\r\n \r\n mysql> CALL sys.ps_setup_disable_instrument(\'wait/io/socket/sql/server_tcpip_socket\');\r\n +------------------------+\r\n | summary                |\r\n +------------------------+\r\n | Disabled 1 instruments |\r\n +------------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n To disable all instruments:\r\n \r\n mysql> CALL sys.ps_setup_disable_instrument(\'\');\r\n +--------------------------+\r\n | summary                  |\r\n +--------------------------+\r\n | Disabled 547 instruments |\r\n +--------------------------+\r\n 1 row in set (0.01 sec)\r\n '
BEGIN UPDATE performance_schema.setup_instruments SET enabled = 'NO', timed = 'NO' WHERE name LIKE CONCAT('%', in_pattern, '%');  SELECT CONCAT('Disabled ', @rows := ROW_COUNT(), ' instrument', IF(@rows != 1, 's', '')) AS summary; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_disable_thread
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_disable_thread`;
delimiter ;;
CREATE PROCEDURE `ps_setup_disable_thread`(IN in_connection_id BIGINT)
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Disable the given connection/thread in Performance Schema.\r\n \r\n Parameters\r\n \r\n in_connection_id (BIGINT):\r\n The connection ID (PROCESSLIST_ID from performance_schema.threads\r\n or the ID shown within SHOW PROCESSLIST)\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_disable_thread(3);\r\n +-------------------+\r\n | summary           |\r\n +-------------------+\r\n | Disabled 1 thread |\r\n +-------------------+\r\n 1 row in set (0.01 sec)\r\n \r\n To disable the current connection:\r\n \r\n mysql> CALL sys.ps_setup_disable_thread(CONNECTION_ID());\r\n +-------------------+\r\n | summary           |\r\n +-------------------+\r\n | Disabled 1 thread |\r\n +-------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN UPDATE performance_schema.threads SET instrumented = 'NO' WHERE processlist_id = in_connection_id;  SELECT CONCAT('Disabled ', @rows := ROW_COUNT(), ' thread', IF(@rows != 1, 's', '')) AS summary; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_enable_background_threads
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_enable_background_threads`;
delimiter ;;
CREATE PROCEDURE `ps_setup_enable_background_threads`()
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Enable all background thread instrumentation within Performance Schema.\r\n \r\n Parameters\r\n \r\n None.\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_enable_background_threads();\r\n +-------------------------------+\r\n | summary                       |\r\n +-------------------------------+\r\n | Enabled 18 background threads |\r\n +-------------------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN UPDATE performance_schema.threads SET instrumented = 'YES' WHERE type = 'BACKGROUND';  SELECT CONCAT('Enabled ', @rows := ROW_COUNT(), ' background thread', IF(@rows != 1, 's', '')) AS summary; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_enable_consumer
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_enable_consumer`;
delimiter ;;
CREATE PROCEDURE `ps_setup_enable_consumer`(IN consumer VARCHAR(128))
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Enables consumers within Performance Schema \r\n matching the input pattern.\r\n \r\n Parameters\r\n \r\n consumer (VARCHAR(128)):\r\n A LIKE pattern match (using \"%consumer%\") of consumers to enable\r\n \r\n Example\r\n \r\n To enable all consumers:\r\n \r\n mysql> CALL sys.ps_setup_enable_consumer(\'\');\r\n +-------------------------+\r\n | summary                 |\r\n +-------------------------+\r\n | Enabled 10 consumers    |\r\n +-------------------------+\r\n 1 row in set (0.02 sec)\r\n \r\n Query OK, 0 rows affected (0.02 sec)\r\n \r\n To enable just \"waits\" consumers:\r\n \r\n mysql> CALL sys.ps_setup_enable_consumer(\'waits\');\r\n +-----------------------+\r\n | summary               |\r\n +-----------------------+\r\n | Enabled 3 consumers   |\r\n +-----------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n Query OK, 0 rows affected (0.00 sec)\r\n '
BEGIN UPDATE performance_schema.setup_consumers SET enabled = 'YES' WHERE name LIKE CONCAT('%', consumer, '%');  SELECT CONCAT('Enabled ', @rows := ROW_COUNT(), ' consumer', IF(@rows != 1, 's', '')) AS summary; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_enable_instrument
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_enable_instrument`;
delimiter ;;
CREATE PROCEDURE `ps_setup_enable_instrument`(IN in_pattern VARCHAR(128))
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Enables instruments within Performance Schema \r\n matching the input pattern.\r\n \r\n Parameters\r\n \r\n in_pattern (VARCHAR(128)):\r\n A LIKE pattern match (using \"%in_pattern%\") of events to enable\r\n \r\n Example\r\n \r\n To enable all mutex instruments:\r\n \r\n mysql> CALL sys.ps_setup_enable_instrument(\'wait/synch/mutex\');\r\n +-------------------------+\r\n | summary                 |\r\n +-------------------------+\r\n | Enabled 155 instruments |\r\n +-------------------------+\r\n 1 row in set (0.02 sec)\r\n \r\n Query OK, 0 rows affected (0.02 sec)\r\n \r\n To enable just a specific TCP/IP based network IO instrument:\r\n \r\n mysql> CALL sys.ps_setup_enable_instrument(\'wait/io/socket/sql/server_tcpip_socket\');\r\n +-----------------------+\r\n | summary               |\r\n +-----------------------+\r\n | Enabled 1 instruments |\r\n +-----------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n Query OK, 0 rows affected (0.00 sec)\r\n \r\n To enable all instruments:\r\n \r\n mysql> CALL sys.ps_setup_enable_instrument(\'\');\r\n +-------------------------+\r\n | summary                 |\r\n +-------------------------+\r\n | Enabled 547 instruments |\r\n +-------------------------+\r\n 1 row in set (0.01 sec)\r\n \r\n Query OK, 0 rows affected (0.01 sec)\r\n '
BEGIN UPDATE performance_schema.setup_instruments SET enabled = 'YES', timed = 'YES' WHERE name LIKE CONCAT('%', in_pattern, '%');  SELECT CONCAT('Enabled ', @rows := ROW_COUNT(), ' instrument', IF(@rows != 1, 's', '')) AS summary; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_enable_thread
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_enable_thread`;
delimiter ;;
CREATE PROCEDURE `ps_setup_enable_thread`(IN in_connection_id BIGINT)
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Enable the given connection/thread in Performance Schema.\r\n \r\n Parameters\r\n \r\n in_connection_id (BIGINT):\r\n The connection ID (PROCESSLIST_ID from performance_schema.threads\r\n or the ID shown within SHOW PROCESSLIST)\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_enable_thread(3);\r\n +------------------+\r\n | summary          |\r\n +------------------+\r\n | Enabled 1 thread |\r\n +------------------+\r\n 1 row in set (0.01 sec)\r\n \r\n To enable the current connection:\r\n \r\n mysql> CALL sys.ps_setup_enable_thread(CONNECTION_ID());\r\n +------------------+\r\n | summary          |\r\n +------------------+\r\n | Enabled 1 thread |\r\n +------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN UPDATE performance_schema.threads SET instrumented = 'YES' WHERE processlist_id = in_connection_id;  SELECT CONCAT('Enabled ', @rows := ROW_COUNT(), ' thread', IF(@rows != 1, 's', '')) AS summary; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_reload_saved
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_reload_saved`;
delimiter ;;
CREATE PROCEDURE `ps_setup_reload_saved`()
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Reloads a saved Performance Schema configuration,\r\n so that you can alter the setup for debugging purposes, \r\n but restore it to a previous state.\r\n \r\n Use the companion procedure - ps_setup_save(), to \r\n save a configuration.\r\n \r\n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\r\n \r\n Parameters\r\n \r\n None.\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_save();\r\n Query OK, 0 rows affected (0.08 sec)\r\n \r\n mysql> UPDATE performance_schema.setup_instruments SET enabled = \'YES\', timed = \'YES\';\r\n Query OK, 547 rows affected (0.40 sec)\r\n Rows matched: 784  Changed: 547  Warnings: 0\r\n \r\n /* Run some tests that need more detailed instrumentation here */\r\n \r\n mysql> CALL sys.ps_setup_reload_saved();\r\n Query OK, 0 rows affected (0.32 sec)\r\n '
BEGIN DECLARE v_done bool DEFAULT FALSE; DECLARE v_lock_result INT; DECLARE v_lock_used_by BIGINT; DECLARE v_signal_message TEXT; DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN SIGNAL SQLSTATE VALUE '90001' SET MESSAGE_TEXT = 'An error occurred, was sys.ps_setup_save() run before this procedure?'; END;  SET @log_bin := @@sql_log_bin; SET sql_log_bin = 0;  SELECT IS_USED_LOCK('sys.ps_setup_save') INTO v_lock_used_by;  IF (v_lock_used_by != CONNECTION_ID()) THEN SET v_signal_message = CONCAT('The sys.ps_setup_save lock is currently owned by ', v_lock_used_by); SIGNAL SQLSTATE VALUE '90002' SET MESSAGE_TEXT = v_signal_message; END IF;  DELETE FROM performance_schema.setup_actors; INSERT INTO performance_schema.setup_actors SELECT * FROM tmp_setup_actors;  BEGIN DECLARE v_name varchar(64); DECLARE v_enabled enum('YES', 'NO'); DECLARE c_consumers CURSOR FOR SELECT NAME, ENABLED FROM tmp_setup_consumers; DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;  SET v_done = FALSE; OPEN c_consumers; c_consumers_loop: LOOP FETCH c_consumers INTO v_name, v_enabled; IF v_done THEN LEAVE c_consumers_loop; END IF;  UPDATE performance_schema.setup_consumers SET ENABLED = v_enabled WHERE NAME = v_name; END LOOP; CLOSE c_consumers; END;  UPDATE performance_schema.setup_instruments INNER JOIN tmp_setup_instruments USING (NAME) SET performance_schema.setup_instruments.ENABLED = tmp_setup_instruments.ENABLED, performance_schema.setup_instruments.TIMED   = tmp_setup_instruments.TIMED; BEGIN DECLARE v_thread_id bigint unsigned; DECLARE v_instrumented enum('YES', 'NO'); DECLARE c_threads CURSOR FOR SELECT THREAD_ID, INSTRUMENTED FROM tmp_threads; DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;  SET v_done = FALSE; OPEN c_threads; c_threads_loop: LOOP FETCH c_threads INTO v_thread_id, v_instrumented; IF v_done THEN LEAVE c_threads_loop; END IF;  UPDATE performance_schema.threads SET INSTRUMENTED = v_instrumented WHERE THREAD_ID = v_thread_id; END LOOP; CLOSE c_threads; END;  UPDATE performance_schema.threads SET INSTRUMENTED = IF(PROCESSLIST_USER IS NOT NULL, sys.ps_is_account_enabled(PROCESSLIST_HOST, PROCESSLIST_USER), 'YES') WHERE THREAD_ID NOT IN (SELECT THREAD_ID FROM tmp_threads);  DROP TEMPORARY TABLE tmp_setup_actors; DROP TEMPORARY TABLE tmp_setup_consumers; DROP TEMPORARY TABLE tmp_setup_instruments; DROP TEMPORARY TABLE tmp_threads;  SELECT RELEASE_LOCK('sys.ps_setup_save') INTO v_lock_result;  SET sql_log_bin = @log_bin;  END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_reset_to_default
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_reset_to_default`;
delimiter ;;
CREATE PROCEDURE `ps_setup_reset_to_default`(IN in_verbose BOOLEAN)
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Resets the Performance Schema setup to the default settings.\r\n \r\n Parameters\r\n \r\n in_verbose (BOOLEAN):\r\n Whether to print each setup stage (including the SQL) whilst running.\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_reset_to_default(true)\\G\r\n *************************** 1. row ***************************\r\n status: Resetting: setup_actors\r\n DELETE\r\n FROM performance_schema.setup_actors\r\n WHERE NOT (HOST = \'%\' AND USER = \'%\' AND `ROLE` = \'%\')\r\n 1 row in set (0.00 sec)\r\n \r\n *************************** 1. row ***************************\r\n status: Resetting: setup_actors\r\n INSERT IGNORE INTO performance_schema.setup_actors\r\n VALUES (\'%\', \'%\', \'%\')\r\n 1 row in set (0.00 sec)\r\n ...\r\n \r\n mysql> CALL sys.ps_setup_reset_to_default(false)\\G\r\n Query OK, 0 rows affected (0.00 sec)\r\n '
BEGIN SET @query = 'DELETE FROM performance_schema.setup_actors WHERE NOT (HOST = ''%'' AND USER = ''%'' AND `ROLE` = ''%'')';  IF (in_verbose) THEN SELECT CONCAT('Resetting: setup_actors\n', REPLACE(@query, '  ', '')) AS status; END IF;  PREPARE reset_stmt FROM @query; EXECUTE reset_stmt; DEALLOCATE PREPARE reset_stmt;  SET @query = 'INSERT IGNORE INTO performance_schema.setup_actors VALUES (''%'', ''%'', ''%'', ''YES'', ''YES'')';  IF (in_verbose) THEN SELECT CONCAT('Resetting: setup_actors\n', REPLACE(@query, '  ', '')) AS status; END IF;  PREPARE reset_stmt FROM @query; EXECUTE reset_stmt; DEALLOCATE PREPARE reset_stmt;  SET @query = 'UPDATE performance_schema.setup_instruments SET ENABLED = sys.ps_is_instrument_default_enabled(NAME), TIMED   = sys.ps_is_instrument_default_timed(NAME)';  IF (in_verbose) THEN SELECT CONCAT('Resetting: setup_instruments\n', REPLACE(@query, '  ', '')) AS status; END IF;  PREPARE reset_stmt FROM @query; EXECUTE reset_stmt; DEALLOCATE PREPARE reset_stmt;  SET @query = 'UPDATE performance_schema.setup_consumers SET ENABLED = IF(NAME IN (''events_statements_current'', ''events_transactions_current'', ''global_instrumentation'', ''thread_instrumentation'', ''statements_digest''), ''YES'', ''NO'')';  IF (in_verbose) THEN SELECT CONCAT('Resetting: setup_consumers\n', REPLACE(@query, '  ', '')) AS status; END IF;  PREPARE reset_stmt FROM @query; EXECUTE reset_stmt; DEALLOCATE PREPARE reset_stmt;  SET @query = 'DELETE FROM performance_schema.setup_objects WHERE NOT (OBJECT_TYPE IN (''EVENT'', ''FUNCTION'', ''PROCEDURE'', ''TABLE'', ''TRIGGER'') AND OBJECT_NAME = ''%''  AND (OBJECT_SCHEMA = ''mysql''              AND ENABLED = ''NO''  AND TIMED = ''NO'' ) OR (OBJECT_SCHEMA = ''performance_schema'' AND ENABLED = ''NO''  AND TIMED = ''NO'' ) OR (OBJECT_SCHEMA = ''information_schema'' AND ENABLED = ''NO''  AND TIMED = ''NO'' ) OR (OBJECT_SCHEMA = ''%''                  AND ENABLED = ''YES'' AND TIMED = ''YES''))';  IF (in_verbose) THEN SELECT CONCAT('Resetting: setup_objects\n', REPLACE(@query, '  ', '')) AS status; END IF;  PREPARE reset_stmt FROM @query; EXECUTE reset_stmt; DEALLOCATE PREPARE reset_stmt;  SET @query = 'INSERT IGNORE INTO performance_schema.setup_objects VALUES (''EVENT''    , ''mysql''             , ''%'', ''NO'' , ''NO'' ), (''EVENT''    , ''performance_schema'', ''%'', ''NO'' , ''NO'' ), (''EVENT''    , ''information_schema'', ''%'', ''NO'' , ''NO'' ), (''EVENT''    , ''%''                 , ''%'', ''YES'', ''YES''), (''FUNCTION'' , ''mysql''             , ''%'', ''NO'' , ''NO'' ), (''FUNCTION'' , ''performance_schema'', ''%'', ''NO'' , ''NO'' ), (''FUNCTION'' , ''information_schema'', ''%'', ''NO'' , ''NO'' ), (''FUNCTION'' , ''%''                 , ''%'', ''YES'', ''YES''), (''PROCEDURE'', ''mysql''             , ''%'', ''NO'' , ''NO'' ), (''PROCEDURE'', ''performance_schema'', ''%'', ''NO'' , ''NO'' ), (''PROCEDURE'', ''information_schema'', ''%'', ''NO'' , ''NO'' ), (''PROCEDURE'', ''%''                 , ''%'', ''YES'', ''YES''), (''TABLE''    , ''mysql''             , ''%'', ''NO'' , ''NO'' ), (''TABLE''    , ''performance_schema'', ''%'', ''NO'' , ''NO'' ), (''TABLE''    , ''information_schema'', ''%'', ''NO'' , ''NO'' ), (''TABLE''    , ''%''                 , ''%'', ''YES'', ''YES''), (''TRIGGER''  , ''mysql''             , ''%'', ''NO'' , ''NO'' ), (''TRIGGER''  , ''performance_schema'', ''%'', ''NO'' , ''NO'' ), (''TRIGGER''  , ''information_schema'', ''%'', ''NO'' , ''NO'' ), (''TRIGGER''  , ''%''                 , ''%'', ''YES'', ''YES'')';  IF (in_verbose) THEN SELECT CONCAT('Resetting: setup_objects\n', REPLACE(@query, '  ', '')) AS status; END IF;  PREPARE reset_stmt FROM @query; EXECUTE reset_stmt; DEALLOCATE PREPARE reset_stmt;  SET @query = 'UPDATE performance_schema.threads SET INSTRUMENTED = ''YES''';  IF (in_verbose) THEN SELECT CONCAT('Resetting: threads\n', REPLACE(@query, '  ', '')) AS status; END IF;  PREPARE reset_stmt FROM @query; EXECUTE reset_stmt; DEALLOCATE PREPARE reset_stmt; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_save
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_save`;
delimiter ;;
CREATE PROCEDURE `ps_setup_save`(IN in_timeout INT)
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Saves the current configuration of Performance Schema, \r\n so that you can alter the setup for debugging purposes, \r\n but restore it to a previous state.\r\n \r\n Use the companion procedure - ps_setup_reload_saved(), to \r\n restore the saved config.\r\n \r\n The named lock \"sys.ps_setup_save\" is taken before the\r\n current configuration is saved. If the attempt to get the named\r\n lock times out, an error occurs.\r\n \r\n The lock is released after the settings have been restored by\r\n calling ps_setup_reload_saved().\r\n \r\n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\r\n \r\n Parameters\r\n \r\n in_timeout INT\r\n The timeout in seconds used when trying to obtain the lock.\r\n A negative timeout means infinite timeout.\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_save(-1);\r\n Query OK, 0 rows affected (0.08 sec)\r\n \r\n mysql> UPDATE performance_schema.setup_instruments \r\n ->    SET enabled = \'YES\', timed = \'YES\';\r\n Query OK, 547 rows affected (0.40 sec)\r\n Rows matched: 784  Changed: 547  Warnings: 0\r\n \r\n /* Run some tests that need more detailed instrumentation here */\r\n \r\n mysql> CALL sys.ps_setup_reload_saved();\r\n Query OK, 0 rows affected (0.32 sec)\r\n '
BEGIN DECLARE v_lock_result INT;  SET @log_bin := @@sql_log_bin; SET sql_log_bin = 0;  SELECT GET_LOCK('sys.ps_setup_save', in_timeout) INTO v_lock_result;  IF v_lock_result THEN DROP TEMPORARY TABLE IF EXISTS tmp_setup_actors; DROP TEMPORARY TABLE IF EXISTS tmp_setup_consumers; DROP TEMPORARY TABLE IF EXISTS tmp_setup_instruments; DROP TEMPORARY TABLE IF EXISTS tmp_threads;  CREATE TEMPORARY TABLE tmp_setup_actors LIKE performance_schema.setup_actors; CREATE TEMPORARY TABLE tmp_setup_consumers LIKE performance_schema.setup_consumers; CREATE TEMPORARY TABLE tmp_setup_instruments LIKE performance_schema.setup_instruments; CREATE TEMPORARY TABLE tmp_threads (THREAD_ID bigint unsigned NOT NULL PRIMARY KEY, INSTRUMENTED enum('YES','NO') NOT NULL);  INSERT INTO tmp_setup_actors SELECT * FROM performance_schema.setup_actors; INSERT INTO tmp_setup_consumers SELECT * FROM performance_schema.setup_consumers; INSERT INTO tmp_setup_instruments SELECT * FROM performance_schema.setup_instruments; INSERT INTO tmp_threads SELECT THREAD_ID, INSTRUMENTED FROM performance_schema.threads; ELSE SIGNAL SQLSTATE VALUE '90000' SET MESSAGE_TEXT = 'Could not lock the sys.ps_setup_save user lock, another thread has a saved configuration'; END IF;  SET sql_log_bin = @log_bin; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_show_disabled
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_show_disabled`;
delimiter ;;
CREATE PROCEDURE `ps_setup_show_disabled`(IN in_show_instruments BOOLEAN, IN in_show_threads BOOLEAN)
  READS SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Shows all currently disable Performance Schema configuration.\r\n \r\n Disabled users is only available for MySQL 5.7.6 and later.\r\n In earlier versions it was only possible to enable users.\r\n \r\n Parameters\r\n \r\n in_show_instruments (BOOLEAN):\r\n Whether to print disabled instruments (can print many items)\r\n \r\n in_show_threads (BOOLEAN):\r\n Whether to print disabled threads\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_show_disabled(TRUE, TRUE);\r\n +----------------------------+\r\n | performance_schema_enabled |\r\n +----------------------------+\r\n |                          1 |\r\n +----------------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n +--------------------+\r\n | disabled_users     |\r\n +--------------------+\r\n | \'mark\'@\'localhost\' |\r\n +--------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n +-------------+----------------------+---------+-------+\r\n | object_type | objects              | enabled | timed |\r\n +-------------+----------------------+---------+-------+\r\n | EVENT       | mysql.%              | NO      | NO    |\r\n | EVENT       | performance_schema.% | NO      | NO    |\r\n | EVENT       | information_schema.% | NO      | NO    |\r\n | FUNCTION    | mysql.%              | NO      | NO    |\r\n | FUNCTION    | performance_schema.% | NO      | NO    |\r\n | FUNCTION    | information_schema.% | NO      | NO    |\r\n | PROCEDURE   | mysql.%              | NO      | NO    |\r\n | PROCEDURE   | performance_schema.% | NO      | NO    |\r\n | PROCEDURE   | information_schema.% | NO      | NO    |\r\n | TABLE       | mysql.%              | NO      | NO    |\r\n | TABLE       | performance_schema.% | NO      | NO    |\r\n | TABLE       | information_schema.% | NO      | NO    |\r\n | TRIGGER     | mysql.%              | NO      | NO    |\r\n | TRIGGER     | performance_schema.% | NO      | NO    |\r\n | TRIGGER     | information_schema.% | NO      | NO    |\r\n +-------------+----------------------+---------+-------+\r\n 15 rows in set (0.00 sec)\r\n \r\n +----------------------------------+\r\n | disabled_consumers               |\r\n +----------------------------------+\r\n | events_stages_current            |\r\n | events_stages_history            |\r\n | events_stages_history_long       |\r\n | events_statements_history        |\r\n | events_statements_history_long   |\r\n | events_transactions_history      |\r\n | events_transactions_history_long |\r\n | events_waits_current             |\r\n | events_waits_history             |\r\n | events_waits_history_long        |\r\n +----------------------------------+\r\n 10 rows in set (0.00 sec)\r\n \r\n Empty set (0.00 sec)\r\n \r\n +---------------------------------------------------------------------------------------+-------+\r\n | disabled_instruments                                                                  | timed |\r\n +---------------------------------------------------------------------------------------+-------+\r\n | wait/synch/mutex/sql/TC_LOG_MMAP::LOCK_tc                                             | NO    |\r\n | wait/synch/mutex/sql/LOCK_des_key_file                                                | NO    |\r\n | wait/synch/mutex/sql/MYSQL_BIN_LOG::LOCK_commit                                       | NO    |\r\n ...\r\n | memory/sql/servers_cache                                                              | NO    |\r\n | memory/sql/udf_mem                                                                    | NO    |\r\n | wait/lock/metadata/sql/mdl                                                            | NO    |\r\n +---------------------------------------------------------------------------------------+-------+\r\n 547 rows in set (0.00 sec)\r\n \r\n Query OK, 0 rows affected (0.01 sec)\r\n '
BEGIN SELECT @@performance_schema AS performance_schema_enabled;   SELECT CONCAT('\'', user, '\'@\'', host, '\'') AS disabled_users FROM performance_schema.setup_actors WHERE enabled = 'NO' ORDER BY disabled_users;   SELECT object_type, CONCAT(object_schema, '.', object_name) AS objects, enabled, timed FROM performance_schema.setup_objects WHERE enabled = 'NO' ORDER BY object_type, objects;  SELECT name AS disabled_consumers FROM performance_schema.setup_consumers WHERE enabled = 'NO' ORDER BY disabled_consumers;  IF (in_show_threads) THEN SELECT IF(name = 'thread/sql/one_connection',  CONCAT(processlist_user, '@', processlist_host),  REPLACE(name, 'thread/', '')) AS disabled_threads, TYPE AS thread_type FROM performance_schema.threads WHERE INSTRUMENTED = 'NO' ORDER BY disabled_threads; END IF;  IF (in_show_instruments) THEN SELECT name AS disabled_instruments, timed FROM performance_schema.setup_instruments WHERE enabled = 'NO' ORDER BY disabled_instruments; END IF; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_show_disabled_consumers
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_show_disabled_consumers`;
delimiter ;;
CREATE PROCEDURE `ps_setup_show_disabled_consumers`()
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Shows all currently disabled consumers.\r\n \r\n Parameters\r\n \r\n None\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_show_disabled_consumers();\r\n \r\n +---------------------------+\r\n | disabled_consumers        |\r\n +---------------------------+\r\n | events_statements_current |\r\n | global_instrumentation    |\r\n | thread_instrumentation    |\r\n | statements_digest         |\r\n +---------------------------+\r\n 4 rows in set (0.05 sec)\r\n '
BEGIN SELECT name AS disabled_consumers FROM performance_schema.setup_consumers WHERE enabled = 'NO' ORDER BY disabled_consumers; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_show_disabled_instruments
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_show_disabled_instruments`;
delimiter ;;
CREATE PROCEDURE `ps_setup_show_disabled_instruments`()
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Shows all currently disabled instruments.\r\n \r\n Parameters\r\n \r\n None\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_show_disabled_instruments();\r\n '
BEGIN SELECT name AS disabled_instruments, timed FROM performance_schema.setup_instruments WHERE enabled = 'NO' ORDER BY disabled_instruments; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_show_enabled
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_show_enabled`;
delimiter ;;
CREATE PROCEDURE `ps_setup_show_enabled`(IN in_show_instruments BOOLEAN, IN in_show_threads BOOLEAN)
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Shows all currently enabled Performance Schema configuration.\r\n \r\n Parameters\r\n \r\n in_show_instruments (BOOLEAN):\r\n Whether to print enabled instruments (can print many items)\r\n \r\n in_show_threads (BOOLEAN):\r\n Whether to print enabled threads\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_show_enabled(TRUE, TRUE);\r\n +----------------------------+\r\n | performance_schema_enabled |\r\n +----------------------------+\r\n |                          1 |\r\n +----------------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n +---------------+\r\n | enabled_users |\r\n +---------------+\r\n | \'%\'@\'%\'       |\r\n +---------------+\r\n 1 row in set (0.01 sec)\r\n \r\n +-------------+---------+---------+-------+\r\n | object_type | objects | enabled | timed |\r\n +-------------+---------+---------+-------+\r\n | EVENT       | %.%     | YES     | YES   |\r\n | FUNCTION    | %.%     | YES     | YES   |\r\n | PROCEDURE   | %.%     | YES     | YES   |\r\n | TABLE       | %.%     | YES     | YES   |\r\n | TRIGGER     | %.%     | YES     | YES   |\r\n +-------------+---------+---------+-------+\r\n 5 rows in set (0.01 sec)\r\n \r\n +---------------------------+\r\n | enabled_consumers         |\r\n +---------------------------+\r\n | events_statements_current |\r\n | global_instrumentation    |\r\n | thread_instrumentation    |\r\n | statements_digest         |\r\n +---------------------------+\r\n 4 rows in set (0.05 sec)\r\n \r\n +---------------------------------+-------------+\r\n | enabled_threads                 | thread_type |\r\n +---------------------------------+-------------+\r\n | sql/main                        | BACKGROUND  |\r\n | sql/thread_timer_notifier       | BACKGROUND  |\r\n | innodb/io_ibuf_thread           | BACKGROUND  |\r\n | innodb/io_log_thread            | BACKGROUND  |\r\n | innodb/io_read_thread           | BACKGROUND  |\r\n | innodb/io_read_thread           | BACKGROUND  |\r\n | innodb/io_write_thread          | BACKGROUND  |\r\n | innodb/io_write_thread          | BACKGROUND  |\r\n | innodb/page_cleaner_thread      | BACKGROUND  |\r\n | innodb/srv_lock_timeout_thread  | BACKGROUND  |\r\n | innodb/srv_error_monitor_thread | BACKGROUND  |\r\n | innodb/srv_monitor_thread       | BACKGROUND  |\r\n | innodb/srv_master_thread        | BACKGROUND  |\r\n | innodb/srv_purge_thread         | BACKGROUND  |\r\n | innodb/srv_worker_thread        | BACKGROUND  |\r\n | innodb/srv_worker_thread        | BACKGROUND  |\r\n | innodb/srv_worker_thread        | BACKGROUND  |\r\n | innodb/buf_dump_thread          | BACKGROUND  |\r\n | innodb/dict_stats_thread        | BACKGROUND  |\r\n | sql/signal_handler              | BACKGROUND  |\r\n | sql/compress_gtid_table         | FOREGROUND  |\r\n | root@localhost                  | FOREGROUND  |\r\n +---------------------------------+-------------+\r\n 22 rows in set (0.01 sec)\r\n \r\n +-------------------------------------+-------+\r\n | enabled_instruments                 | timed |\r\n +-------------------------------------+-------+\r\n | wait/io/file/sql/map                | YES   |\r\n | wait/io/file/sql/binlog             | YES   |\r\n ...\r\n | statement/com/Error                 | YES   |\r\n | statement/com/                      | YES   |\r\n | idle                                | YES   |\r\n +-------------------------------------+-------+\r\n 210 rows in set (0.08 sec)\r\n \r\n Query OK, 0 rows affected (0.89 sec)\r\n '
BEGIN SELECT @@performance_schema AS performance_schema_enabled;  SELECT CONCAT('\'', user, '\'@\'', host, '\'') AS enabled_users FROM performance_schema.setup_actors  WHERE enabled = 'YES'  ORDER BY enabled_users;  SELECT object_type, CONCAT(object_schema, '.', object_name) AS objects, enabled, timed FROM performance_schema.setup_objects WHERE enabled = 'YES' ORDER BY object_type, objects;  SELECT name AS enabled_consumers FROM performance_schema.setup_consumers WHERE enabled = 'YES' ORDER BY enabled_consumers;  IF (in_show_threads) THEN SELECT IF(name = 'thread/sql/one_connection',  CONCAT(processlist_user, '@', processlist_host),  REPLACE(name, 'thread/', '')) AS enabled_threads, TYPE AS thread_type FROM performance_schema.threads WHERE INSTRUMENTED = 'YES' ORDER BY enabled_threads; END IF;  IF (in_show_instruments) THEN SELECT name AS enabled_instruments, timed FROM performance_schema.setup_instruments WHERE enabled = 'YES' ORDER BY enabled_instruments; END IF; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_show_enabled_consumers
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_show_enabled_consumers`;
delimiter ;;
CREATE PROCEDURE `ps_setup_show_enabled_consumers`()
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Shows all currently enabled consumers.\r\n \r\n Parameters\r\n \r\n None\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_show_enabled_consumers();\r\n \r\n +---------------------------+\r\n | enabled_consumers         |\r\n +---------------------------+\r\n | events_statements_current |\r\n | global_instrumentation    |\r\n | thread_instrumentation    |\r\n | statements_digest         |\r\n +---------------------------+\r\n 4 rows in set (0.05 sec)\r\n '
BEGIN SELECT name AS enabled_consumers FROM performance_schema.setup_consumers WHERE enabled = 'YES' ORDER BY enabled_consumers; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_setup_show_enabled_instruments
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_setup_show_enabled_instruments`;
delimiter ;;
CREATE PROCEDURE `ps_setup_show_enabled_instruments`()
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Shows all currently enabled instruments.\r\n \r\n Parameters\r\n \r\n None\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_setup_show_enabled_instruments();\r\n '
BEGIN SELECT name AS enabled_instruments, timed FROM performance_schema.setup_instruments WHERE enabled = 'YES' ORDER BY enabled_instruments; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_statement_avg_latency_histogram
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_statement_avg_latency_histogram`;
delimiter ;;
CREATE PROCEDURE `ps_statement_avg_latency_histogram`()
  READS SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Outputs a textual histogram graph of the average latency values\r\n across all normalized queries tracked within the Performance Schema\r\n events_statements_summary_by_digest table.\r\n \r\n Can be used to show a very high level picture of what kind of \r\n latency distribution statements running within this instance have.\r\n \r\n Parameters\r\n \r\n None.\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_statement_avg_latency_histogram()\\G\r\n *************************** 1. row ***************************\r\n Performance Schema Statement Digest Average Latency Histogram:\r\n \r\n . = 1 unit\r\n * = 2 units\r\n # = 3 units\r\n \r\n (0 - 38ms)     240 | ################################################################################\r\n (38 - 77ms)    38  | ......................................\r\n (77 - 115ms)   3   | ...\r\n (115 - 154ms)  62  | *******************************\r\n (154 - 192ms)  3   | ...\r\n (192 - 231ms)  0   |\r\n (231 - 269ms)  0   |\r\n (269 - 307ms)  0   |\r\n (307 - 346ms)  0   |\r\n (346 - 384ms)  1   | .\r\n (384 - 423ms)  1   | .\r\n (423 - 461ms)  0   |\r\n (461 - 499ms)  0   |\r\n (499 - 538ms)  0   |\r\n (538 - 576ms)  0   |\r\n (576 - 615ms)  1   | .\r\n \r\n Total Statements: 350; Buckets: 16; Bucket Size: 38 ms;\r\n '
BEGIN SELECT CONCAT('\n', '\n  . = 1 unit', '\n  * = 2 units', '\n  # = 3 units\n', @label := CONCAT(@label_inner := CONCAT('\n(0 - ', ROUND((@bucket_size := (SELECT ROUND((MAX(avg_us) - MIN(avg_us)) / (@buckets := 16)) AS size FROM sys.x$ps_digest_avg_latency_distribution)) / (@unit_div := 1000)), (@unit := 'ms'), ')'), REPEAT(' ', (@max_label_size := ((1 + LENGTH(ROUND((@bucket_size * 15) / @unit_div)) + 3 + LENGTH(ROUND(@bucket_size * 16) / @unit_div)) + 1)) - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us <= @bucket_size), 0)), REPEAT(' ', (@max_label_len := (@max_label_size + LENGTH((@total_queries := (SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution)))) + 1) - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < (@one_unit := 40), '.', IF(@count_in_bucket < (@two_unit := 80), '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''),  @label := CONCAT(@label_inner := CONCAT('\n(', ROUND(@bucket_size / @unit_div), ' - ', ROUND((@bucket_size * 2) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size AND b1.avg_us <= @bucket_size * 2), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 2) / @unit_div), ' - ', ROUND((@bucket_size * 3) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 2 AND b1.avg_us <= @bucket_size * 3), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 3) / @unit_div), ' - ', ROUND((@bucket_size * 4) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 3 AND b1.avg_us <= @bucket_size * 4), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 4) / @unit_div), ' - ', ROUND((@bucket_size * 5) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 4 AND b1.avg_us <= @bucket_size * 5), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 5) / @unit_div), ' - ', ROUND((@bucket_size * 6) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 5 AND b1.avg_us <= @bucket_size * 6), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 6) / @unit_div), ' - ', ROUND((@bucket_size * 7) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 6 AND b1.avg_us <= @bucket_size * 7), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 7) / @unit_div), ' - ', ROUND((@bucket_size * 8) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 7 AND b1.avg_us <= @bucket_size * 8), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 8) / @unit_div), ' - ', ROUND((@bucket_size * 9) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 8 AND b1.avg_us <= @bucket_size * 9), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 9) / @unit_div), ' - ', ROUND((@bucket_size * 10) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 9 AND b1.avg_us <= @bucket_size * 10), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 10) / @unit_div), ' - ', ROUND((@bucket_size * 11) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 10 AND b1.avg_us <= @bucket_size * 11), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 11) / @unit_div), ' - ', ROUND((@bucket_size * 12) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 11 AND b1.avg_us <= @bucket_size * 12), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 12) / @unit_div), ' - ', ROUND((@bucket_size * 13) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 12 AND b1.avg_us <= @bucket_size * 13), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 13) / @unit_div), ' - ', ROUND((@bucket_size * 14) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 13 AND b1.avg_us <= @bucket_size * 14), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 14) / @unit_div), ' - ', ROUND((@bucket_size * 15) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 14 AND b1.avg_us <= @bucket_size * 15), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''), @label := CONCAT(@label_inner := CONCAT('\n(', ROUND((@bucket_size * 15) / @unit_div), ' - ', ROUND((@bucket_size * 16) / @unit_div), @unit, ')'), REPEAT(' ', @max_label_size - LENGTH(@label_inner)), @count_in_bucket := IFNULL((SELECT SUM(cnt) FROM sys.x$ps_digest_avg_latency_distribution AS b1  WHERE b1.avg_us > @bucket_size * 15 AND b1.avg_us <= @bucket_size * 16), 0)), REPEAT(' ', @max_label_len - LENGTH(@label)), '| ', IFNULL(REPEAT(IF(@count_in_bucket < @one_unit, '.', IF(@count_in_bucket < @two_unit, '*', '#')),  	             IF(@count_in_bucket < @one_unit, @count_in_bucket, 	             	IF(@count_in_bucket < @two_unit, @count_in_bucket / 2, @count_in_bucket / 3))), ''),  '\n\n  Total Statements: ', @total_queries, '; Buckets: ', @buckets , '; Bucket Size: ', ROUND(@bucket_size / @unit_div) , ' ', @unit, ';\n'  ) AS `Performance Schema Statement Digest Average Latency Histogram`;  END
;;
delimiter ;

-- ----------------------------
-- Function structure for ps_thread_account
-- ----------------------------
DROP FUNCTION IF EXISTS `ps_thread_account`;
delimiter ;;
CREATE FUNCTION `ps_thread_account`(in_thread_id BIGINT UNSIGNED)
 RETURNS text CHARSET utf8mb4
  READS SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Return the user@host account for the given Performance Schema thread id.\r\n \r\n Parameters\r\n \r\n in_thread_id (BIGINT UNSIGNED):\r\n The id of the thread to return the account for.\r\n \r\n Example\r\n \r\n mysql> select thread_id, processlist_user, processlist_host from performance_schema.threads where type = \'foreground\';\r\n +-----------+------------------+------------------+\r\n | thread_id | processlist_user | processlist_host |\r\n +-----------+------------------+------------------+\r\n |        23 | NULL             | NULL             |\r\n |        30 | root             | localhost        |\r\n |        31 | msandbox         | localhost        |\r\n |        32 | msandbox         | localhost        |\r\n +-----------+------------------+------------------+\r\n 4 rows in set (0.00 sec)\r\n \r\n mysql> select sys.ps_thread_account(31);\r\n +---------------------------+\r\n | sys.ps_thread_account(31) |\r\n +---------------------------+\r\n | msandbox@localhost        |\r\n +---------------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN RETURN (SELECT IF( type = 'FOREGROUND', CONCAT(processlist_user, '@', processlist_host), type ) AS account FROM `performance_schema`.`threads` WHERE thread_id = in_thread_id); END
;;
delimiter ;

-- ----------------------------
-- Function structure for ps_thread_id
-- ----------------------------
DROP FUNCTION IF EXISTS `ps_thread_id`;
delimiter ;;
CREATE FUNCTION `ps_thread_id`(in_connection_id BIGINT UNSIGNED)
 RETURNS bigint(20) unsigned
  READS SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Return the Performance Schema THREAD_ID for the specified connection ID.\r\n \r\n Parameters\r\n \r\n in_connection_id (BIGINT UNSIGNED):\r\n The id of the connection to return the thread id for. If NULL, the current\r\n connection thread id is returned.\r\n \r\n Example\r\n \r\n mysql> SELECT sys.ps_thread_id(79);\r\n +----------------------+\r\n | sys.ps_thread_id(79) |\r\n +----------------------+\r\n |                   98 |\r\n +----------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> SELECT sys.ps_thread_id(CONNECTION_ID());\r\n +-----------------------------------+\r\n | sys.ps_thread_id(CONNECTION_ID()) |\r\n +-----------------------------------+\r\n |                                98 |\r\n +-----------------------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN RETURN (SELECT THREAD_ID FROM `performance_schema`.`threads` WHERE PROCESSLIST_ID = IFNULL(in_connection_id, CONNECTION_ID()) ); END
;;
delimiter ;

-- ----------------------------
-- Function structure for ps_thread_stack
-- ----------------------------
DROP FUNCTION IF EXISTS `ps_thread_stack`;
delimiter ;;
CREATE FUNCTION `ps_thread_stack`(thd_id BIGINT UNSIGNED, debug BOOLEAN)
 RETURNS longtext CHARSET latin1
  READS SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Outputs a JSON formatted stack of all statements, stages and events\r\n within Performance Schema for the specified thread.\r\n \r\n Parameters\r\n \r\n thd_id (BIGINT UNSIGNED):\r\n The id of the thread to trace. This should match the thread_id\r\n column from the performance_schema.threads table.\r\n in_verbose (BOOLEAN):\r\n Include file:lineno information in the events.\r\n \r\n Example\r\n \r\n (line separation added for output)\r\n \r\n mysql> SELECT sys.ps_thread_stack(37, FALSE) AS thread_stack\\G\r\n *************************** 1. row ***************************\r\n thread_stack: {\"rankdir\": \"LR\",\"nodesep\": \"0.10\",\"stack_created\": \"2014-02-19 13:39:03\",\r\n \"mysql_version\": \"5.7.3-m13\",\"mysql_user\": \"root@localhost\",\"events\": \r\n [{\"nesting_event_id\": \"0\", \"event_id\": \"10\", \"timer_wait\": 256.35, \"event_info\": \r\n \"sql/select\", \"wait_info\": \"select @@version_comment limit 1\\nerrors: 0\\nwarnings: 0\\nlock time:\r\n ...\r\n '
BEGIN  DECLARE json_objects LONGTEXT;   UPDATE performance_schema.threads SET instrumented = 'NO' WHERE processlist_id = CONNECTION_ID();   SET SESSION group_concat_max_len=@@global.max_allowed_packet;  SELECT GROUP_CONCAT(CONCAT( '{' , CONCAT_WS( ', ' , CONCAT('"nesting_event_id": "', IF(nesting_event_id IS NULL, '0', nesting_event_id), '"') , CONCAT('"event_id": "', event_id, '"') , CONCAT( '"timer_wait": ', ROUND(timer_wait/1000000, 2))   , CONCAT( '"event_info": "' , CASE WHEN event_name NOT LIKE 'wait/io%' THEN REPLACE(SUBSTRING_INDEX(event_name, '/', -2), '\\', '\\\\') WHEN event_name NOT LIKE 'wait/io/file%' OR event_name NOT LIKE 'wait/io/socket%' THEN REPLACE(SUBSTRING_INDEX(event_name, '/', -4), '\\', '\\\\') ELSE event_name END , '"' ) , CONCAT( '"wait_info": "', IFNULL(wait_info, ''), '"') , CONCAT( '"source": "', IF(true AND event_name LIKE 'wait%', IFNULL(wait_info, ''), ''), '"') , CASE  WHEN event_name LIKE 'wait/io/file%'      THEN '"event_type": "io/file"' WHEN event_name LIKE 'wait/io/table%'     THEN '"event_type": "io/table"' WHEN event_name LIKE 'wait/io/socket%'    THEN '"event_type": "io/socket"' WHEN event_name LIKE 'wait/synch/mutex%'  THEN '"event_type": "synch/mutex"' WHEN event_name LIKE 'wait/synch/cond%'   THEN '"event_type": "synch/cond"' WHEN event_name LIKE 'wait/synch/rwlock%' THEN '"event_type": "synch/rwlock"' WHEN event_name LIKE 'wait/lock%'         THEN '"event_type": "lock"' WHEN event_name LIKE 'statement/%'        THEN '"event_type": "stmt"' WHEN event_name LIKE 'stage/%'            THEN '"event_type": "stage"' WHEN event_name LIKE '%idle%'             THEN '"event_type": "idle"' ELSE ''  END                    ) , '}' ) ORDER BY event_id ASC SEPARATOR ',') event INTO json_objects FROM (  (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id,  CONCAT(sql_text, '\\n', 'errors: ', errors, '\\n', 'warnings: ', warnings, '\\n', 'lock time: ', ROUND(lock_time/1000000, 2),'us\\n', 'rows affected: ', rows_affected, '\\n', 'rows sent: ', rows_sent, '\\n', 'rows examined: ', rows_examined, '\\n', 'tmp tables: ', created_tmp_tables, '\\n', 'tmp disk tables: ', created_tmp_disk_tables, '\\n', 'select scan: ', select_scan, '\\n', 'select full join: ', select_full_join, '\\n', 'select full range join: ', select_full_range_join, '\\n', 'select range: ', select_range, '\\n', 'select range check: ', select_range_check, '\\n',  'sort merge passes: ', sort_merge_passes, '\\n', 'sort rows: ', sort_rows, '\\n', 'sort range: ', sort_range, '\\n', 'sort scan: ', sort_scan, '\\n', 'no index used: ', IF(no_index_used, 'TRUE', 'FALSE'), '\\n', 'no good index used: ', IF(no_good_index_used, 'TRUE', 'FALSE'), '\\n' ) AS wait_info FROM performance_schema.events_statements_history_long WHERE thread_id = thd_id) UNION  (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id, null AS wait_info FROM performance_schema.events_stages_history_long WHERE thread_id = thd_id)  UNION  (SELECT thread_id, event_id,  CONCAT(event_name ,  IF(event_name NOT LIKE 'wait/synch/mutex%', IFNULL(CONCAT(' - ', operation), ''), ''),  IF(number_of_bytes IS NOT NULL, CONCAT(' ', number_of_bytes, ' bytes'), ''), IF(event_name LIKE 'wait/io/file%', '\\n', ''), IF(object_schema IS NOT NULL, CONCAT('\\nObject: ', object_schema, '.'), ''),  IF(object_name IS NOT NULL,  IF (event_name LIKE 'wait/io/socket%', CONCAT(IF (object_name LIKE ':0%', @@socket, object_name)), object_name), ''),  IF(index_name IS NOT NULL, CONCAT(' Index: ', index_name), ''), '\\n' ) AS event_name, timer_wait, timer_start, nesting_event_id, source AS wait_info FROM performance_schema.events_waits_history_long WHERE thread_id = thd_id)) events  ORDER BY event_id;  RETURN CONCAT('{',  CONCAT_WS(',',  '"rankdir": "LR"', '"nodesep": "0.10"', CONCAT('"stack_created": "', NOW(), '"'), CONCAT('"mysql_version": "', VERSION(), '"'), CONCAT('"mysql_user": "', CURRENT_USER(), '"'), CONCAT('"events": [', IFNULL(json_objects,''), ']') ), '}');  END
;;
delimiter ;

-- ----------------------------
-- Function structure for ps_thread_trx_info
-- ----------------------------
DROP FUNCTION IF EXISTS `ps_thread_trx_info`;
delimiter ;;
CREATE FUNCTION `ps_thread_trx_info`(in_thread_id BIGINT UNSIGNED)
 RETURNS longtext CHARSET utf8mb4
  READS SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Returns a JSON object with info on the given threads current transaction, \r\n and the statements it has already executed, derived from the\r\n performance_schema.events_transactions_current and\r\n performance_schema.events_statements_history tables (so the consumers \r\n for these also have to be enabled within Performance Schema to get full\r\n data in the object).\r\n \r\n When the output exceeds the default truncation length (65535), a JSON error\r\n object is returned, such as:\r\n \r\n { \"error\": \"Trx info truncated: Row 6 was cut by GROUP_CONCAT()\" }\r\n \r\n Similar error objects are returned for other warnings/and exceptions raised\r\n when calling the function.\r\n \r\n The max length of the output of this function can be controlled with the\r\n ps_thread_trx_info.max_length variable set via sys_config, or the\r\n @sys.ps_thread_trx_info.max_length user variable, as appropriate.\r\n \r\n Parameters\r\n \r\n in_thread_id (BIGINT UNSIGNED):\r\n The id of the thread to return the transaction info for.\r\n \r\n Example\r\n \r\n SELECT sys.ps_thread_trx_info(48)\\G\r\n *************************** 1. row ***************************\r\n sys.ps_thread_trx_info(48): [\r\n {\r\n \"time\": \"790.70 us\",\r\n \"state\": \"COMMITTED\",\r\n \"mode\": \"READ WRITE\",\r\n \"autocommitted\": \"NO\",\r\n \"gtid\": \"AUTOMATIC\",\r\n \"isolation\": \"REPEATABLE READ\",\r\n \"statements_executed\": [\r\n {\r\n \"sql_text\": \"INSERT INTO info VALUES (1, \'foo\')\",\r\n \"time\": \"471.02 us\",\r\n \"schema\": \"trx\",\r\n \"rows_examined\": 0,\r\n \"rows_affected\": 1,\r\n \"rows_sent\": 0,\r\n \"tmp_tables\": 0,\r\n \"tmp_disk_tables\": 0,\r\n \"sort_rows\": 0,\r\n \"sort_merge_passes\": 0\r\n },\r\n {\r\n \"sql_text\": \"COMMIT\",\r\n \"time\": \"254.42 us\",\r\n \"schema\": \"trx\",\r\n \"rows_examined\": 0,\r\n \"rows_affected\": 0,\r\n \"rows_sent\": 0,\r\n \"tmp_tables\": 0,\r\n \"tmp_disk_tables\": 0,\r\n \"sort_rows\": 0,\r\n \"sort_merge_passes\": 0\r\n }\r\n ]\r\n },\r\n {\r\n \"time\": \"426.20 us\",\r\n \"state\": \"COMMITTED\",\r\n \"mode\": \"READ WRITE\",\r\n \"autocommitted\": \"NO\",\r\n \"gtid\": \"AUTOMATIC\",\r\n \"isolation\": \"REPEATABLE READ\",\r\n \"statements_executed\": [\r\n {\r\n \"sql_text\": \"INSERT INTO info VALUES (2, \'bar\')\",\r\n \"time\": \"107.33 us\",\r\n \"schema\": \"trx\",\r\n \"rows_examined\": 0,\r\n \"rows_affected\": 1,\r\n \"rows_sent\": 0,\r\n \"tmp_tables\": 0,\r\n \"tmp_disk_tables\": 0,\r\n \"sort_rows\": 0,\r\n \"sort_merge_passes\": 0\r\n },\r\n {\r\n \"sql_text\": \"COMMIT\",\r\n \"time\": \"213.23 us\",\r\n \"schema\": \"trx\",\r\n \"rows_examined\": 0,\r\n \"rows_affected\": 0,\r\n \"rows_sent\": 0,\r\n \"tmp_tables\": 0,\r\n \"tmp_disk_tables\": 0,\r\n \"sort_rows\": 0,\r\n \"sort_merge_passes\": 0\r\n }\r\n ]\r\n }\r\n ]\r\n 1 row in set (0.03 sec)\r\n '
BEGIN DECLARE v_output LONGTEXT DEFAULT '{}'; DECLARE v_msg_text TEXT DEFAULT ''; DECLARE v_signal_msg TEXT DEFAULT ''; DECLARE v_mysql_errno INT; DECLARE v_max_output_len BIGINT; DECLARE EXIT HANDLER FOR SQLWARNING, SQLEXCEPTION BEGIN GET DIAGNOSTICS CONDITION 1 v_msg_text = MESSAGE_TEXT, v_mysql_errno = MYSQL_ERRNO;  IF v_mysql_errno = 1260 THEN SET v_signal_msg = CONCAT('{ "error": "Trx info truncated: ', v_msg_text, '" }'); ELSE SET v_signal_msg = CONCAT('{ "error": "', v_msg_text, '" }'); END IF;  RETURN v_signal_msg; END;  IF (@sys.ps_thread_trx_info.max_length IS NULL) THEN SET @sys.ps_thread_trx_info.max_length = sys.sys_get_config('ps_thread_trx_info.max_length', 65535); END IF;  IF (@sys.ps_thread_trx_info.max_length != @@session.group_concat_max_len) THEN SET @old_group_concat_max_len = @@session.group_concat_max_len; SET v_max_output_len = (@sys.ps_thread_trx_info.max_length - 5); SET SESSION group_concat_max_len = v_max_output_len; END IF;  SET v_output = ( SELECT CONCAT('[', IFNULL(GROUP_CONCAT(trx_info ORDER BY event_id), ''), '\n]') AS trx_info FROM (SELECT trxi.thread_id,  trxi.event_id, GROUP_CONCAT( IFNULL( CONCAT('\n  {\n', '    "time": "', IFNULL(sys.format_time(trxi.timer_wait), ''), '",\n', '    "state": "', IFNULL(trxi.state, ''), '",\n', '    "mode": "', IFNULL(trxi.access_mode, ''), '",\n', '    "autocommitted": "', IFNULL(trxi.autocommit, ''), '",\n', '    "gtid": "', IFNULL(trxi.gtid, ''), '",\n', '    "isolation": "', IFNULL(trxi.isolation_level, ''), '",\n', '    "statements_executed": [', IFNULL(s.stmts, ''), IF(s.stmts IS NULL, ' ]\n', '\n    ]\n'), '  }' ),  '')  ORDER BY event_id) AS trx_info  FROM ( (SELECT thread_id, event_id, timer_wait, state,access_mode, autocommit, gtid, isolation_level FROM performance_schema.events_transactions_current WHERE thread_id = in_thread_id AND end_event_id IS NULL) UNION (SELECT thread_id, event_id, timer_wait, state,access_mode, autocommit, gtid, isolation_level FROM performance_schema.events_transactions_history WHERE thread_id = in_thread_id) ) AS trxi LEFT JOIN (SELECT thread_id, nesting_event_id, GROUP_CONCAT( IFNULL( CONCAT('\n      {\n', '        "sql_text": "', IFNULL(sys.format_statement(REPLACE(sql_text, '\\', '\\\\')), ''), '",\n', '        "time": "', IFNULL(sys.format_time(timer_wait), ''), '",\n', '        "schema": "', IFNULL(current_schema, ''), '",\n', '        "rows_examined": ', IFNULL(rows_examined, ''), ',\n', '        "rows_affected": ', IFNULL(rows_affected, ''), ',\n', '        "rows_sent": ', IFNULL(rows_sent, ''), ',\n', '        "tmp_tables": ', IFNULL(created_tmp_tables, ''), ',\n', '        "tmp_disk_tables": ', IFNULL(created_tmp_disk_tables, ''), ',\n', '        "sort_rows": ', IFNULL(sort_rows, ''), ',\n', '        "sort_merge_passes": ', IFNULL(sort_merge_passes, ''), '\n', '      }'), '') ORDER BY event_id) AS stmts FROM performance_schema.events_statements_history WHERE sql_text IS NOT NULL AND thread_id = in_thread_id GROUP BY thread_id, nesting_event_id ) AS s  ON trxi.thread_id = s.thread_id  AND trxi.event_id = s.nesting_event_id WHERE trxi.thread_id = in_thread_id GROUP BY trxi.thread_id, trxi.event_id ) trxs GROUP BY thread_id );  IF (@old_group_concat_max_len IS NOT NULL) THEN SET SESSION group_concat_max_len = @old_group_concat_max_len; END IF;  RETURN v_output; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_trace_statement_digest
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_trace_statement_digest`;
delimiter ;;
CREATE PROCEDURE `ps_trace_statement_digest`(IN in_digest VARCHAR(64), IN in_runtime INT, IN in_interval DECIMAL(2,2), IN in_start_fresh BOOLEAN, IN in_auto_enable BOOLEAN)
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Traces all instrumentation within Performance Schema for a specific\r\n Statement Digest.\r\n \r\n When finding a statement of interest within the\r\n performance_schema.events_statements_summary_by_digest table, feed\r\n the DIGEST value in to this procedure, set how long to poll for,\r\n and at what interval to poll, and it will generate a report of all\r\n statistics tracked within Performance Schema for that digest for the\r\n interval.\r\n \r\n It will also attempt to generate an EXPLAIN for the longest running\r\n example of the digest during the interval. Note this may fail, as:\r\n \r\n * Performance Schema truncates long SQL_TEXT values (and hence the\r\n EXPLAIN will fail due to parse errors)\r\n * the default schema is sys (so tables that are not fully qualified\r\n in the query may not be found)\r\n * some queries such as SHOW are not supported in EXPLAIN.\r\n \r\n When the EXPLAIN fails, the error will be ignored and no EXPLAIN\r\n output generated.\r\n \r\n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\r\n \r\n Parameters\r\n \r\n in_digest (VARCHAR(64)):\r\n The statement digest identifier you would like to analyze\r\n in_runtime (INT):\r\n The number of seconds to run analysis for\r\n in_interval (DECIMAL(2,2)):\r\n The interval (in seconds, may be fractional) at which to try\r\n and take snapshots\r\n in_start_fresh (BOOLEAN):\r\n Whether to TRUNCATE the events_statements_history_long and\r\n events_stages_history_long tables before starting\r\n in_auto_enable (BOOLEAN):\r\n Whether to automatically turn on required consumers\r\n \r\n Example\r\n \r\n mysql> call ps_trace_statement_digest(\'891ec6860f98ba46d89dd20b0c03652c\', 10, 0.1, true, true);\r\n +--------------------+\r\n | SUMMARY STATISTICS |\r\n +--------------------+\r\n | SUMMARY STATISTICS |\r\n +--------------------+\r\n 1 row in set (9.11 sec)\r\n \r\n +------------+-----------+-----------+-----------+---------------+------------+------------+\r\n | executions | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scans |\r\n +------------+-----------+-----------+-----------+---------------+------------+------------+\r\n |         21 | 4.11 ms   | 2.00 ms   |         0 |            21 |          0 |          0 |\r\n +------------+-----------+-----------+-----------+---------------+------------+------------+\r\n 1 row in set (9.11 sec)\r\n \r\n +------------------------------------------+-------+-----------+\r\n | event_name                               | count | latency   |\r\n +------------------------------------------+-------+-----------+\r\n | stage/sql/checking query cache for query |    16 | 724.37 us |\r\n | stage/sql/statistics                     |    16 | 546.92 us |\r\n | stage/sql/freeing items                  |    18 | 520.11 us |\r\n | stage/sql/init                           |    51 | 466.80 us |\r\n ...\r\n | stage/sql/cleaning up                    |    18 | 11.92 us  |\r\n | stage/sql/executing                      |    16 | 6.95 us   |\r\n +------------------------------------------+-------+-----------+\r\n 17 rows in set (9.12 sec)\r\n \r\n +---------------------------+\r\n | LONGEST RUNNING STATEMENT |\r\n +---------------------------+\r\n | LONGEST RUNNING STATEMENT |\r\n +---------------------------+\r\n 1 row in set (9.16 sec)\r\n \r\n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\r\n | thread_id | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scan |\r\n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\r\n |    166646 | 618.43 us | 1.00 ms   |         0 |             1 |          0 |         0 |\r\n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\r\n 1 row in set (9.16 sec)\r\n \r\n // Truncated for clarity...\r\n +-----------------------------------------------------------------+\r\n | sql_text                                                        |\r\n +-----------------------------------------------------------------+\r\n | select hibeventhe0_.id as id1382_, hibeventhe0_.createdTime ... |\r\n +-----------------------------------------------------------------+\r\n 1 row in set (9.17 sec)\r\n \r\n +------------------------------------------+-----------+\r\n | event_name                               | latency   |\r\n +------------------------------------------+-----------+\r\n | stage/sql/init                           | 8.61 us   |\r\n | stage/sql/Waiting for query cache lock   | 453.23 us |\r\n | stage/sql/init                           | 331.07 ns |\r\n | stage/sql/checking query cache for query | 43.04 us  |\r\n ...\r\n | stage/sql/freeing items                  | 30.46 us  |\r\n | stage/sql/cleaning up                    | 662.13 ns |\r\n +------------------------------------------+-----------+\r\n 18 rows in set (9.23 sec)\r\n \r\n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\r\n | id | select_type | table        | type  | possible_keys | key       | key_len | ref         | rows | Extra |\r\n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\r\n |  1 | SIMPLE      | hibeventhe0_ | const | fixedTime     | fixedTime | 775     | const,const |    1 | NULL  |\r\n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\r\n 1 row in set (9.27 sec)\r\n \r\n Query OK, 0 rows affected (9.28 sec)\r\n '
BEGIN  DECLARE v_start_fresh BOOLEAN DEFAULT false; DECLARE v_auto_enable BOOLEAN DEFAULT false; DECLARE v_explain     BOOLEAN DEFAULT true; DECLARE v_this_thread_enabed ENUM('YES', 'NO'); DECLARE v_runtime INT DEFAULT 0; DECLARE v_start INT DEFAULT 0; DECLARE v_found_stmts INT;  SET @log_bin := @@sql_log_bin; SET sql_log_bin = 0;  SELECT INSTRUMENTED INTO v_this_thread_enabed FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID(); CALL sys.ps_setup_disable_thread(CONNECTION_ID());  DROP TEMPORARY TABLE IF EXISTS stmt_trace; CREATE TEMPORARY TABLE stmt_trace ( thread_id BIGINT UNSIGNED, timer_start BIGINT UNSIGNED, event_id BIGINT UNSIGNED, sql_text longtext, timer_wait BIGINT UNSIGNED, lock_time BIGINT UNSIGNED, errors BIGINT UNSIGNED, mysql_errno INT, rows_sent BIGINT UNSIGNED, rows_affected BIGINT UNSIGNED, rows_examined BIGINT UNSIGNED, created_tmp_tables BIGINT UNSIGNED, created_tmp_disk_tables BIGINT UNSIGNED, no_index_used BIGINT UNSIGNED, PRIMARY KEY (thread_id, timer_start) );  DROP TEMPORARY TABLE IF EXISTS stmt_stages; CREATE TEMPORARY TABLE stmt_stages ( event_id BIGINT UNSIGNED, stmt_id BIGINT UNSIGNED, event_name VARCHAR(128), timer_wait BIGINT UNSIGNED, PRIMARY KEY (event_id) );  SET v_start_fresh = in_start_fresh; IF v_start_fresh THEN TRUNCATE TABLE performance_schema.events_statements_history_long; TRUNCATE TABLE performance_schema.events_stages_history_long; END IF;  SET v_auto_enable = in_auto_enable; IF v_auto_enable THEN CALL sys.ps_setup_save(0);  UPDATE performance_schema.threads SET INSTRUMENTED = IF(PROCESSLIST_ID IS NOT NULL, 'YES', 'NO');  UPDATE performance_schema.setup_consumers SET ENABLED = 'YES' WHERE NAME NOT LIKE '%\_history' AND NAME NOT LIKE 'events_wait%' AND NAME NOT LIKE 'events_transactions%' AND NAME <> 'statements_digest';  UPDATE performance_schema.setup_instruments SET ENABLED = 'YES', TIMED   = 'YES' WHERE NAME LIKE 'statement/%' OR NAME LIKE 'stage/%'; END IF;  WHILE v_runtime < in_runtime DO SELECT UNIX_TIMESTAMP() INTO v_start;  INSERT IGNORE INTO stmt_trace SELECT thread_id, timer_start, event_id, sql_text, timer_wait, lock_time, errors, mysql_errno,  rows_sent, rows_affected, rows_examined, created_tmp_tables, created_tmp_disk_tables, no_index_used FROM performance_schema.events_statements_history_long WHERE digest = in_digest;  INSERT IGNORE INTO stmt_stages SELECT stages.event_id, stmt_trace.event_id, stages.event_name, stages.timer_wait FROM performance_schema.events_stages_history_long AS stages JOIN stmt_trace ON stages.nesting_event_id = stmt_trace.event_id;  SELECT SLEEP(in_interval) INTO @sleep; SET v_runtime = v_runtime + (UNIX_TIMESTAMP() - v_start); END WHILE;  SELECT "SUMMARY STATISTICS";  SELECT COUNT(*) executions, sys.format_time(SUM(timer_wait)) AS exec_time, sys.format_time(SUM(lock_time)) AS lock_time, SUM(rows_sent) AS rows_sent, SUM(rows_affected) AS rows_affected, SUM(rows_examined) AS rows_examined, SUM(created_tmp_tables) AS tmp_tables, SUM(no_index_used) AS full_scans FROM stmt_trace;  SELECT event_name, COUNT(*) as count, sys.format_time(SUM(timer_wait)) as latency FROM stmt_stages GROUP BY event_name ORDER BY SUM(timer_wait) DESC;  SELECT "LONGEST RUNNING STATEMENT";  SELECT thread_id, sys.format_time(timer_wait) AS exec_time, sys.format_time(lock_time) AS lock_time, rows_sent, rows_affected, rows_examined, created_tmp_tables AS tmp_tables, no_index_used AS full_scan FROM stmt_trace ORDER BY timer_wait DESC LIMIT 1;  SELECT sql_text FROM stmt_trace ORDER BY timer_wait DESC LIMIT 1;  SELECT sql_text, event_id INTO @sql, @sql_id FROM stmt_trace ORDER BY timer_wait DESC LIMIT 1;  IF (@sql_id IS NOT NULL) THEN SELECT event_name, sys.format_time(timer_wait) as latency FROM stmt_stages WHERE stmt_id = @sql_id ORDER BY event_id; END IF;  DROP TEMPORARY TABLE stmt_trace; DROP TEMPORARY TABLE stmt_stages;  IF (@sql IS NOT NULL) THEN SET @stmt := CONCAT("EXPLAIN FORMAT=JSON ", @sql); BEGIN DECLARE CONTINUE HANDLER FOR 1064, 1146 SET v_explain = false;  PREPARE explain_stmt FROM @stmt; END;  IF (v_explain) THEN EXECUTE explain_stmt; DEALLOCATE PREPARE explain_stmt; END IF; END IF;  IF v_auto_enable THEN CALL sys.ps_setup_reload_saved(); END IF; IF (v_this_thread_enabed = 'YES') THEN CALL sys.ps_setup_enable_thread(CONNECTION_ID()); END IF;  SET sql_log_bin = @log_bin; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_trace_thread
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_trace_thread`;
delimiter ;;
CREATE PROCEDURE `ps_trace_thread`(IN in_thread_id BIGINT UNSIGNED, IN in_outfile VARCHAR(255), IN in_max_runtime DECIMAL(20,2), IN in_interval DECIMAL(20,2), IN in_start_fresh BOOLEAN, IN in_auto_setup BOOLEAN, IN in_debug BOOLEAN)
  MODIFIES SQL DATA 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Dumps all data within Performance Schema for an instrumented thread,\r\n to create a DOT formatted graph file. \r\n \r\n Each resultset returned from the procedure should be used for a complete graph\r\n \r\n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\r\n \r\n Parameters\r\n \r\n in_thread_id (BIGINT UNSIGNED):\r\n The thread that you would like a stack trace for\r\n in_outfile  (VARCHAR(255)):\r\n The filename the dot file will be written to\r\n in_max_runtime (DECIMAL(20,2)):\r\n The maximum time to keep collecting data.\r\n Use NULL to get the default which is 60 seconds.\r\n in_interval (DECIMAL(20,2)): \r\n How long to sleep between data collections. \r\n Use NULL to get the default which is 1 second.\r\n in_start_fresh (BOOLEAN):\r\n Whether to reset all Performance Schema data before tracing.\r\n in_auto_setup (BOOLEAN):\r\n Whether to disable all other threads and enable all consumers/instruments. \r\n This will also reset the settings at the end of the run.\r\n in_debug (BOOLEAN):\r\n Whether you would like to include file:lineno in the graph\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_trace_thread(25, CONCAT(\'/tmp/stack-\', REPLACE(NOW(), \' \', \'-\'), \'.dot\'), NULL, NULL, TRUE, TRUE, TRUE);\r\n +-------------------+\r\n | summary           |\r\n +-------------------+\r\n | Disabled 1 thread |\r\n +-------------------+\r\n 1 row in set (0.00 sec)\r\n \r\n +---------------------------------------------+\r\n | Info                                        |\r\n +---------------------------------------------+\r\n | Data collection starting for THREAD_ID = 25 |\r\n +---------------------------------------------+\r\n 1 row in set (0.03 sec)\r\n \r\n +-----------------------------------------------------------+\r\n | Info                                                      |\r\n +-----------------------------------------------------------+\r\n | Stack trace written to /tmp/stack-2014-02-16-21:18:41.dot |\r\n +-----------------------------------------------------------+\r\n 1 row in set (60.07 sec)\r\n \r\n +-------------------------------------------------------------------+\r\n | Convert to PDF                                                    |\r\n +-------------------------------------------------------------------+\r\n | dot -Tpdf -o /tmp/stack_25.pdf /tmp/stack-2014-02-16-21:18:41.dot |\r\n +-------------------------------------------------------------------+\r\n 1 row in set (60.07 sec)\r\n \r\n +-------------------------------------------------------------------+\r\n | Convert to PNG                                                    |\r\n +-------------------------------------------------------------------+\r\n | dot -Tpng -o /tmp/stack_25.png /tmp/stack-2014-02-16-21:18:41.dot |\r\n +-------------------------------------------------------------------+\r\n 1 row in set (60.07 sec)\r\n \r\n +------------------+\r\n | summary          |\r\n +------------------+\r\n | Enabled 1 thread |\r\n +------------------+\r\n 1 row in set (60.32 sec)\r\n '
BEGIN DECLARE v_done bool DEFAULT FALSE; DECLARE v_start, v_runtime DECIMAL(20,2) DEFAULT 0.0; DECLARE v_min_event_id bigint unsigned DEFAULT 0; DECLARE v_this_thread_enabed ENUM('YES', 'NO'); DECLARE v_event longtext; DECLARE c_stack CURSOR FOR SELECT CONCAT(IF(nesting_event_id IS NOT NULL, CONCAT(nesting_event_id, ' -> '), ''),  event_id, '; ', event_id, ' [label="', '(', sys.format_time(timer_wait), ') ', IF (event_name NOT LIKE 'wait/io%',  SUBSTRING_INDEX(event_name, '/', -2),  IF (event_name NOT LIKE 'wait/io/file%' OR event_name NOT LIKE 'wait/io/socket%', SUBSTRING_INDEX(event_name, '/', -4), event_name) ), IF (event_name LIKE 'transaction', IFNULL(CONCAT('\\n', wait_info), ''), ''), IF (event_name LIKE 'statement/%', IFNULL(CONCAT('\\n', wait_info), ''), ''), IF (in_debug AND event_name LIKE 'wait%', wait_info, ''), '", ',  CASE WHEN event_name LIKE 'wait/io/file%' THEN  'shape=box, style=filled, color=red' WHEN event_name LIKE 'wait/io/table%' THEN  'shape=box, style=filled, color=green' WHEN event_name LIKE 'wait/io/socket%' THEN 'shape=box, style=filled, color=yellow' WHEN event_name LIKE 'wait/synch/mutex%' THEN 'style=filled, color=lightskyblue' WHEN event_name LIKE 'wait/synch/cond%' THEN 'style=filled, color=darkseagreen3' WHEN event_name LIKE 'wait/synch/rwlock%' THEN 'style=filled, color=orchid' WHEN event_name LIKE 'wait/synch/sxlock%' THEN 'style=filled, color=palevioletred'  WHEN event_name LIKE 'wait/lock%' THEN 'shape=box, style=filled, color=tan' WHEN event_name LIKE 'statement/%' THEN CONCAT('shape=box, style=bold', CASE WHEN event_name LIKE 'statement/com/%' THEN ' style=filled, color=darkseagreen' ELSE IF((timer_wait/1000000000000) > @@long_query_time,  ' style=filled, color=red',  ' style=filled, color=lightblue') END ) WHEN event_name LIKE 'transaction' THEN 'shape=box, style=filled, color=lightblue3' WHEN event_name LIKE 'stage/%' THEN 'style=filled, color=slategray3' WHEN event_name LIKE '%idle%' THEN 'shape=box, style=filled, color=firebrick3' ELSE '' END, '];\n' ) event, event_id FROM ( (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id, CONCAT('trx_id: ',  IFNULL(trx_id, ''), '\\n', 'gtid: ', IFNULL(gtid, ''), '\\n', 'state: ', state, '\\n', 'mode: ', access_mode, '\\n', 'isolation: ', isolation_level, '\\n', 'autocommit: ', autocommit, '\\n', 'savepoints: ', number_of_savepoints, '\\n' ) AS wait_info FROM performance_schema.events_transactions_history_long WHERE thread_id = in_thread_id AND event_id > v_min_event_id) UNION (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id,  CONCAT('statement: ', sql_text, '\\n', 'errors: ', errors, '\\n', 'warnings: ', warnings, '\\n', 'lock time: ', sys.format_time(lock_time),'\\n', 'rows affected: ', rows_affected, '\\n', 'rows sent: ', rows_sent, '\\n', 'rows examined: ', rows_examined, '\\n', 'tmp tables: ', created_tmp_tables, '\\n', 'tmp disk tables: ', created_tmp_disk_tables, '\\n' 'select scan: ', select_scan, '\\n', 'select full join: ', select_full_join, '\\n', 'select full range join: ', select_full_range_join, '\\n', 'select range: ', select_range, '\\n', 'select range check: ', select_range_check, '\\n',  'sort merge passes: ', sort_merge_passes, '\\n', 'sort rows: ', sort_rows, '\\n', 'sort range: ', sort_range, '\\n', 'sort scan: ', sort_scan, '\\n', 'no index used: ', IF(no_index_used, 'TRUE', 'FALSE'), '\\n', 'no good index used: ', IF(no_good_index_used, 'TRUE', 'FALSE'), '\\n' ) AS wait_info FROM performance_schema.events_statements_history_long WHERE thread_id = in_thread_id AND event_id > v_min_event_id) UNION (SELECT thread_id, event_id, event_name, timer_wait, timer_start, nesting_event_id, null AS wait_info FROM performance_schema.events_stages_history_long  WHERE thread_id = in_thread_id AND event_id > v_min_event_id) UNION  (SELECT thread_id, event_id,  CONCAT(event_name,  IF(event_name NOT LIKE 'wait/synch/mutex%', IFNULL(CONCAT(' - ', operation), ''), ''),  IF(number_of_bytes IS NOT NULL, CONCAT(' ', number_of_bytes, ' bytes'), ''), IF(event_name LIKE 'wait/io/file%', '\\n', ''), IF(object_schema IS NOT NULL, CONCAT('\\nObject: ', object_schema, '.'), ''),  IF(object_name IS NOT NULL,  IF (event_name LIKE 'wait/io/socket%', CONCAT('\\n', IF (object_name LIKE ':0%', @@socket, object_name)), object_name), '' ), IF(index_name IS NOT NULL, CONCAT(' Index: ', index_name), ''), '\\n' ) AS event_name, timer_wait, timer_start, nesting_event_id, source AS wait_info FROM performance_schema.events_waits_history_long WHERE thread_id = in_thread_id AND event_id > v_min_event_id) ) events  ORDER BY event_id; DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;  SET @log_bin := @@sql_log_bin; SET sql_log_bin = 0;  SELECT INSTRUMENTED INTO v_this_thread_enabed FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID(); CALL sys.ps_setup_disable_thread(CONNECTION_ID());  IF (in_auto_setup) THEN CALL sys.ps_setup_save(0);  DELETE FROM performance_schema.setup_actors;  UPDATE performance_schema.threads SET INSTRUMENTED = IF(THREAD_ID = in_thread_id, 'YES', 'NO');  UPDATE performance_schema.setup_consumers SET ENABLED = 'YES' WHERE NAME NOT LIKE '%\_history';  UPDATE performance_schema.setup_instruments SET ENABLED = 'YES', TIMED   = 'YES'; END IF;  IF (in_start_fresh) THEN TRUNCATE performance_schema.events_transactions_history_long; TRUNCATE performance_schema.events_statements_history_long; TRUNCATE performance_schema.events_stages_history_long; TRUNCATE performance_schema.events_waits_history_long; END IF;  DROP TEMPORARY TABLE IF EXISTS tmp_events; CREATE TEMPORARY TABLE tmp_events ( event_id bigint unsigned NOT NULL, event longblob, PRIMARY KEY (event_id) );  INSERT INTO tmp_events VALUES (0, CONCAT('digraph events { rankdir=LR; nodesep=0.10;\n', '// Stack created .....: ', NOW(), '\n', '// MySQL version .....: ', VERSION(), '\n', '// MySQL hostname ....: ', @@hostname, '\n', '// MySQL port ........: ', @@port, '\n', '// MySQL socket ......: ', @@socket, '\n', '// MySQL user ........: ', CURRENT_USER(), '\n'));  SELECT CONCAT('Data collection starting for THREAD_ID = ', in_thread_id) AS 'Info';  SET v_min_event_id = 0, v_start        = UNIX_TIMESTAMP(), in_interval    = IFNULL(in_interval, 1.00), in_max_runtime = IFNULL(in_max_runtime, 60.00);  WHILE (v_runtime < in_max_runtime AND (SELECT INSTRUMENTED FROM performance_schema.threads WHERE THREAD_ID = in_thread_id) = 'YES') DO SET v_done = FALSE; OPEN c_stack; c_stack_loop: LOOP FETCH c_stack INTO v_event, v_min_event_id; IF v_done THEN LEAVE c_stack_loop; END IF;  IF (LENGTH(v_event) > 0) THEN INSERT INTO tmp_events VALUES (v_min_event_id, v_event); END IF; END LOOP; CLOSE c_stack;  SELECT SLEEP(in_interval) INTO @sleep; SET v_runtime = (UNIX_TIMESTAMP() - v_start); END WHILE;  INSERT INTO tmp_events VALUES (v_min_event_id+1, '}');  SET @query = CONCAT('SELECT event FROM tmp_events ORDER BY event_id INTO OUTFILE ''', in_outfile, ''' FIELDS ESCAPED BY '''' LINES TERMINATED BY '''''); PREPARE stmt_output FROM @query; EXECUTE stmt_output; DEALLOCATE PREPARE stmt_output;  SELECT CONCAT('Stack trace written to ', in_outfile) AS 'Info'; SELECT CONCAT('dot -Tpdf -o /tmp/stack_', in_thread_id, '.pdf ', in_outfile) AS 'Convert to PDF'; SELECT CONCAT('dot -Tpng -o /tmp/stack_', in_thread_id, '.png ', in_outfile) AS 'Convert to PNG'; DROP TEMPORARY TABLE tmp_events;  IF (in_auto_setup) THEN CALL sys.ps_setup_reload_saved(); END IF; IF (v_this_thread_enabed = 'YES') THEN CALL sys.ps_setup_enable_thread(CONNECTION_ID()); END IF;  SET sql_log_bin = @log_bin; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for ps_truncate_all_tables
-- ----------------------------
DROP PROCEDURE IF EXISTS `ps_truncate_all_tables`;
delimiter ;;
CREATE PROCEDURE `ps_truncate_all_tables`(IN in_verbose BOOLEAN)
  MODIFIES SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Truncates all summary tables within Performance Schema, \r\n resetting all aggregated instrumentation as a snapshot.\r\n \r\n Parameters\r\n \r\n in_verbose (BOOLEAN):\r\n Whether to print each TRUNCATE statement before running\r\n \r\n Example\r\n \r\n mysql> CALL sys.ps_truncate_all_tables(false);\r\n +---------------------+\r\n | summary             |\r\n +---------------------+\r\n | Truncated 44 tables |\r\n +---------------------+\r\n 1 row in set (0.10 sec)\r\n \r\n Query OK, 0 rows affected (0.10 sec)\r\n '
BEGIN DECLARE v_done INT DEFAULT FALSE; DECLARE v_total_tables INT DEFAULT 0; DECLARE v_ps_table VARCHAR(64); DECLARE ps_tables CURSOR FOR SELECT table_name  FROM INFORMATION_SCHEMA.TABLES  WHERE table_schema = 'performance_schema'  AND (table_name LIKE '%summary%'  OR table_name LIKE '%history%'); DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;  OPEN ps_tables;  ps_tables_loop: LOOP FETCH ps_tables INTO v_ps_table; IF v_done THEN LEAVE ps_tables_loop; END IF;  SET @truncate_stmt := CONCAT('TRUNCATE TABLE performance_schema.', v_ps_table); IF in_verbose THEN SELECT CONCAT('Running: ', @truncate_stmt) AS status; END IF;  PREPARE truncate_stmt FROM @truncate_stmt; EXECUTE truncate_stmt; DEALLOCATE PREPARE truncate_stmt;  SET v_total_tables = v_total_tables + 1; END LOOP;  CLOSE ps_tables;  SELECT CONCAT('Truncated ', v_total_tables, ' tables') AS summary;  END
;;
delimiter ;

-- ----------------------------
-- Function structure for quote_identifier
-- ----------------------------
DROP FUNCTION IF EXISTS `quote_identifier`;
delimiter ;;
CREATE FUNCTION `quote_identifier`(in_identifier TEXT)
 RETURNS text CHARSET utf8mb4
  NO SQL 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Takes an unquoted identifier (schema name, table name, etc.) and\r\n returns the identifier quoted with backticks.\r\n \r\n Parameters\r\n \r\n in_identifier (TEXT):\r\n The identifier to quote.\r\n \r\n Returns\r\n \r\n TEXT CHARSET UTF8MB4\r\n \r\n Example\r\n \r\n mysql> SELECT sys.quote_identifier(\'my_identifier\') AS Identifier;\r\n +-----------------+\r\n | Identifier      |\r\n +-----------------+\r\n | `my_identifier` |\r\n +-----------------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> SELECT sys.quote_identifier(\'my`idenfier\') AS Identifier;\r\n +----------------+\r\n | Identifier     |\r\n +----------------+\r\n | `my``idenfier` |\r\n +----------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN RETURN CONCAT('`', REPLACE(in_identifier, '`', '``'), '`'); END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for statement_performance_analyzer
-- ----------------------------
DROP PROCEDURE IF EXISTS `statement_performance_analyzer`;
delimiter ;;
CREATE PROCEDURE `statement_performance_analyzer`(IN in_action ENUM('snapshot', 'overall', 'delta', 'create_table', 'create_tmp', 'save', 'cleanup'), IN in_table VARCHAR(129), IN in_views SET ('with_runtimes_in_95th_percentile', 'analysis', 'with_errors_or_warnings', 'with_full_table_scans', 'with_sorting', 'with_temp_tables', 'custom'))
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Create a report of the statements running on the server.\r\n \r\n The views are calculated based on the overall and/or delta activity.\r\n \r\n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\r\n \r\n Parameters\r\n \r\n in_action (ENUM(\'snapshot\', \'overall\', \'delta\', \'create_tmp\', \'create_table\', \'save\', \'cleanup\')):\r\n The action to take. Supported actions are:\r\n * snapshot      Store a snapshot. The default is to make a snapshot of the current content of\r\n performance_schema.events_statements_summary_by_digest, but by setting in_table\r\n this can be overwritten to copy the content of the specified table.\r\n The snapshot is stored in the sys.tmp_digests temporary table.\r\n * overall       Generate analyzis based on the content specified by in_table. For the overall analyzis,\r\n in_table can be NOW() to use a fresh snapshot. This will overwrite an existing snapshot.\r\n Use NULL for in_table to use the existing snapshot. If in_table IS NULL and no snapshot\r\n exists, a new will be created.\r\n See also in_views and @sys.statement_performance_analyzer.limit.\r\n * delta         Generate a delta analysis. The delta will be calculated between the reference table in\r\n in_table and the snapshot. An existing snapshot must exist.\r\n The action uses the sys.tmp_digests_delta temporary table.\r\n See also in_views and @sys.statement_performance_analyzer.limit.\r\n * create_table  Create a regular table suitable for storing the snapshot for later use, e.g. for\r\n calculating deltas.\r\n * create_tmp    Create a temporary table suitable for storing the snapshot for later use, e.g. for\r\n calculating deltas.\r\n * save          Save the snapshot in the table specified by in_table. The table must exists and have\r\n the correct structure.\r\n If no snapshot exists, a new is created.\r\n * cleanup       Remove the temporary tables used for the snapshot and delta.\r\n \r\n in_table (VARCHAR(129)):\r\n The table argument used for some actions. Use the format \'db1.t1\' or \'t1\' without using any backticks (`)\r\n for quoting. Periods (.) are not supported in the database and table names.\r\n \r\n The meaning of the table for each action supporting the argument is:\r\n \r\n * snapshot      The snapshot is created based on the specified table. Set to NULL or NOW() to use\r\n the current content of performance_schema.events_statements_summary_by_digest.\r\n * overall       The table with the content to create the overall analyzis for. The following values\r\n can be used:\r\n - A table name - use the content of that table.\r\n - NOW()        - create a fresh snapshot and overwrite the existing snapshot.\r\n - NULL         - use the last stored snapshot.\r\n * delta         The table name is mandatory and specified the reference view to compare the currently\r\n stored snapshot against. If no snapshot exists, a new will be created.\r\n * create_table  The name of the regular table to create.\r\n * create_tmp    The name of the temporary table to create.\r\n * save          The name of the table to save the currently stored snapshot into.\r\n \r\n in_views (SET (\'with_runtimes_in_95th_percentile\', \'analysis\', \'with_errors_or_warnings\',\r\n \'with_full_table_scans\', \'with_sorting\', \'with_temp_tables\', \'custom\'))\r\n Which views to include:  * with_runtimes_in_95th_percentile  Based on the sys.statements_with_runtimes_in_95th_percentile view * analysis                          Based on the sys.statement_analysis view * with_errors_or_warnings           Based on the sys.statements_with_errors_or_warnings view * with_full_table_scans             Based on the sys.statements_with_full_table_scans view * with_sorting                      Based on the sys.statements_with_sorting view * with_temp_tables                  Based on the sys.statements_with_temp_tables view * custom                            Use a custom view. This view must be specified in @sys.statement_performance_analyzer.view to an existing view or a query  Default is to include all except \'custom\'.   Configuration Options  sys.statement_performance_analyzer.limit The maximum number of rows to include for the views that does not have a built-in limit (e.g. the 95th percentile view). If not set the limit is 100.  sys.statement_performance_analyzer.view Used together with the \'custom\' view. If the value contains a space, it is considered a query, otherwise it must be an existing view querying the performance_schema.events_statements_summary_by_digest table. There cannot be any limit clause including in the query or view definition if @sys.statement_performance_analyzer.limit > 0. If specifying a view, use the same format as for in_table.  sys.debug Whether to provide debugging output. Default is \'OFF\'. Set to \'ON\' to include.   Example  To create a report with the queries in the 95th percentile since last truncate of performance_schema.events_statements_summary_by_digest and the delta for a 1 minute period:  1. Create a temporary table to store the initial snapshot. 2. Create the initial snapshot. 3. Save the initial snapshot in the temporary table. 4. Wait one minute. 5. Create a new snapshot. 6. Perform analyzis based on the new snapshot. 7. Perform analyzis based on the delta between the initial and new snapshots.  mysql> CALL sys.statement_performance_analyzer(\'create_tmp\', \'mydb.tmp_digests_ini\', NULL); Query OK, 0 rows affected (0.08 sec)  mysql> CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL); Query OK, 0 rows affected (0.02 sec)  mysql> CALL sys.statement_performance_analyzer(\'save\', \'mydb.tmp_digests_ini\', NULL); Query OK, 0 rows affected (0.00 sec)  mysql> DO SLEEP(60); Query OK, 0 rows affected (1 min 0.00 sec)  mysql> CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL); Query OK, 0 rows affected (0.02 sec)  mysql> CALL sys.statement_performance_analyzer(\'overall\', NULL, \'with_runtimes_in_95th_percentile\'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.05 sec)  ...  mysql> CALL sys.statement_performance_analyzer(\'delta\', \'mydb.tmp_digests_ini\', \'with_runtimes_in_95th_percentile\'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.03 sec)  ...   To create an overall report of the 95th percentile queries and the top 10 queries with full table scans:  mysql> CALL sys.statement_performance_analyzer(\'snapshot\', NULL, NULL); Query OK, 0 rows affected (0.01 sec)  mysql> SET @sys.statement_performance_analyzer.limit = 10; Query OK, 0 rows affected (0.00 sec)  mysql> CALL sys.statement_performance_analyzer(\'overall\', NULL, \'with_runtimes_in_95th_percentile,with_full_table_scans\'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.01 sec)  ...  +-------------------------------------+ | Next Output                         | +-------------------------------------+ | Top 10 Queries with Full Table Scan | +-------------------------------------+ 1 row in set (0.09 sec)  ...   Use a custom view showing the top 10 query sorted by total execution time refreshing the view every minute using the watch command in Linux.  mysql> CREATE OR REPLACE VIEW mydb.my_statements AS -> SELECT sys.format_statement(DIGEST_TEXT) AS query, ->        SCHEMA_NAME AS db, ->        COUNT_STAR AS exec_count, ->        sys.format_time(SUM_TIMER_WAIT) AS total_latency, ->        sys.format_time(AVG_TIMER_WAIT) AS avg_latency, ->        ROUND(IFNULL(SUM_ROWS_SENT / NULLIF(COUNT_STAR, 0), 0)) AS rows_sent_avg, ->        ROUND(IFNULL(SUM_ROWS_EXAMINED / NULLIF(COUNT_STAR, 0), 0)) AS rows_examined_avg, ->        ROUND(IFNULL(SUM_ROWS_AFFECTED / NULLIF(COUNT_STAR, 0), 0)) AS rows_affected_avg, ->        DIGEST AS digest ->   FROM performance_schema.events_statements_summary_by_digest -> ORDER BY SUM_TIMER_WAIT DESC; Query OK, 0 rows affected (0.01 sec)  mysql> CALL sys.statement_performance_analyzer(\'create_table\', \'mydb.digests_prev\', NULL); Query OK, 0 rows affected (0.10 sec)  shell$ watch -n 60 \"mysql sys --table -e \" > SET @sys.statement_performance_analyzer.view = \'mydb.my_statements\'; > SET @sys.statement_performance_analyzer.limit = 10; > CALL statement_performance_analyzer(\'snapshot\', NULL, NULL); > CALL statement_performance_analyzer(\'delta\', \'mydb.digests_prev\', \'custom\'); > CALL statement_performance_analyzer(\'save\', \'mydb.digests_prev\', NULL); > \"\"  Every 60.0s: mysql sys --table -e \"                                                                                                   ...  Mon Dec 22 10:58:51 2014  +----------------------------------+ | Next Output                      | +----------------------------------+ | Top 10 Queries Using Custom View | +----------------------------------+ +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+ | query             | db    | exec_count | total_latency | avg_latency | rows_sent_avg | rows_examined_avg | rows_affected_avg | digest                           | +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+ ... '
BEGIN DECLARE v_table_exists, v_tmp_digests_table_exists, v_custom_view_exists ENUM('', 'BASE TABLE', 'VIEW', 'TEMPORARY') DEFAULT ''; DECLARE v_this_thread_enabled ENUM('YES', 'NO'); DECLARE v_force_new_snapshot BOOLEAN DEFAULT FALSE; DECLARE v_digests_table VARCHAR(133); DECLARE v_quoted_table, v_quoted_custom_view VARCHAR(133) DEFAULT ''; DECLARE v_table_db, v_table_name, v_custom_db, v_custom_name VARCHAR(64); DECLARE v_digest_table_template, v_checksum_ref, v_checksum_table text; DECLARE v_sql longtext; DECLARE v_error_msg VARCHAR(128); DECLARE v_old_group_concat_max_len INT UNSIGNED DEFAULT 0;   SELECT INSTRUMENTED INTO v_this_thread_enabled FROM performance_schema.threads WHERE PROCESSLIST_ID = CONNECTION_ID(); IF (v_this_thread_enabled = 'YES') THEN CALL sys.ps_setup_disable_thread(CONNECTION_ID()); END IF;  SET @log_bin := @@sql_log_bin; IF (@log_bin = 1) THEN SET sql_log_bin = 0; END IF;   IF (@sys.statement_performance_analyzer.limit IS NULL) THEN SET @sys.statement_performance_analyzer.limit = sys.sys_get_config('statement_performance_analyzer.limit', '100'); END IF; IF (@sys.debug IS NULL) THEN SET @sys.debug                                = sys.sys_get_config('debug'                               , 'OFF'); END IF;   IF (in_table = 'NOW()') THEN SET v_force_new_snapshot = TRUE, in_table             = NULL; ELSEIF (in_table IS NOT NULL) THEN IF (NOT INSTR(in_table, '.')) THEN SET v_table_db   = DATABASE(), v_table_name = in_table; ELSE SET v_table_db   = SUBSTRING_INDEX(in_table, '.', 1); SET v_table_name = SUBSTRING(in_table, CHAR_LENGTH(v_table_db)+2); END IF;  SET v_quoted_table = CONCAT('`', v_table_db, '`.`', v_table_name, '`');  IF (@sys.debug = 'ON') THEN SELECT CONCAT('in_table is: db = ''', v_table_db, ''', table = ''', v_table_name, '''') AS 'Debug'; END IF;  IF (v_table_db = DATABASE() AND (v_table_name = 'tmp_digests' OR v_table_name = 'tmp_digests_delta')) THEN SET v_error_msg = CONCAT('Invalid value for in_table: ', v_quoted_table, ' is reserved table name.'); SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = v_error_msg; END IF;  CALL sys.table_exists(v_table_db, v_table_name, v_table_exists); IF (@sys.debug = 'ON') THEN SELECT CONCAT('v_table_exists = ', v_table_exists) AS 'Debug'; END IF;  IF (v_table_exists = 'BASE TABLE') THEN SET v_old_group_concat_max_len = @@session.group_concat_max_len; SET @@session.group_concat_max_len = 2048; SET v_checksum_ref = ( SELECT GROUP_CONCAT(CONCAT(COLUMN_NAME, COLUMN_TYPE) ORDER BY ORDINAL_POSITION) AS Checksum FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'performance_schema' AND TABLE_NAME = 'events_statements_summary_by_digest' ), v_checksum_table = ( SELECT GROUP_CONCAT(CONCAT(COLUMN_NAME, COLUMN_TYPE) ORDER BY ORDINAL_POSITION) AS Checksum FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = v_table_db AND TABLE_NAME = v_table_name ); SET @@session.group_concat_max_len = v_old_group_concat_max_len; IF (v_checksum_ref <> v_checksum_table) THEN SET v_error_msg = CONCAT('The table ', IF(CHAR_LENGTH(v_quoted_table) > 93, CONCAT('...', SUBSTRING(v_quoted_table, -90)), v_quoted_table), ' has the wrong definition.'); SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = v_error_msg; END IF; END IF; END IF;   IF (in_views IS NULL OR in_views = '') THEN SET in_views = 'with_runtimes_in_95th_percentile,analysis,with_errors_or_warnings,with_full_table_scans,with_sorting,with_temp_tables'; END IF;   CALL sys.table_exists(DATABASE(), 'tmp_digests', v_tmp_digests_table_exists); IF (@sys.debug = 'ON') THEN SELECT CONCAT('v_tmp_digests_table_exists = ', v_tmp_digests_table_exists) AS 'Debug'; END IF;  CASE WHEN in_action IN ('snapshot', 'overall') THEN IF (in_table IS NOT NULL) THEN IF (NOT v_table_exists IN ('TEMPORARY', 'BASE TABLE')) THEN SET v_error_msg = CONCAT('The ', in_action, ' action requires in_table to be NULL, NOW() or specify an existing table.', ' The table ', IF(CHAR_LENGTH(v_quoted_table) > 16, CONCAT('...', SUBSTRING(v_quoted_table, -13)), v_quoted_table), ' does not exist.'); SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = v_error_msg; END IF; END IF;  WHEN in_action IN ('delta', 'save') THEN IF (v_table_exists NOT IN ('TEMPORARY', 'BASE TABLE')) THEN SET v_error_msg = CONCAT('The ', in_action, ' action requires in_table to be an existing table.', IF(in_table IS NOT NULL, CONCAT(' The table ', IF(CHAR_LENGTH(v_quoted_table) > 39, CONCAT('...', SUBSTRING(v_quoted_table, -36)), v_quoted_table), ' does not exist.'), '')); SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = v_error_msg; END IF;  IF (in_action = 'delta' AND v_tmp_digests_table_exists <> 'TEMPORARY') THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'An existing snapshot generated with the statement_performance_analyzer() must exist.'; END IF; WHEN in_action = 'create_tmp' THEN IF (v_table_exists = 'TEMPORARY') THEN SET v_error_msg = CONCAT('Cannot create the table ', IF(CHAR_LENGTH(v_quoted_table) > 72, CONCAT('...', SUBSTRING(v_quoted_table, -69)), v_quoted_table), ' as it already exists.'); SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = v_error_msg; END IF;  WHEN in_action = 'create_table' THEN IF (v_table_exists <> '') THEN SET v_error_msg = CONCAT('Cannot create the table ', IF(CHAR_LENGTH(v_quoted_table) > 52, CONCAT('...', SUBSTRING(v_quoted_table, -49)), v_quoted_table), ' as it already exists', IF(v_table_exists = 'TEMPORARY', ' as a temporary table.', '.')); SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = v_error_msg; END IF;  WHEN in_action = 'cleanup' THEN DO (SELECT 1); ELSE SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Unknown action. Supported actions are: cleanup, create_table, create_tmp, delta, overall, save, snapshot'; END CASE;  SET v_digest_table_template = 'CREATE %{TEMPORARY}TABLE %{TABLE_NAME} ( `SCHEMA_NAME` varchar(64) DEFAULT NULL, `DIGEST` varchar(64) DEFAULT NULL, `DIGEST_TEXT` longtext, `COUNT_STAR` bigint(20) unsigned NOT NULL, `SUM_TIMER_WAIT` bigint(20) unsigned NOT NULL, `MIN_TIMER_WAIT` bigint(20) unsigned NOT NULL, `AVG_TIMER_WAIT` bigint(20) unsigned NOT NULL, `MAX_TIMER_WAIT` bigint(20) unsigned NOT NULL, `SUM_LOCK_TIME` bigint(20) unsigned NOT NULL, `SUM_ERRORS` bigint(20) unsigned NOT NULL, `SUM_WARNINGS` bigint(20) unsigned NOT NULL, `SUM_ROWS_AFFECTED` bigint(20) unsigned NOT NULL, `SUM_ROWS_SENT` bigint(20) unsigned NOT NULL, `SUM_ROWS_EXAMINED` bigint(20) unsigned NOT NULL, `SUM_CREATED_TMP_DISK_TABLES` bigint(20) unsigned NOT NULL, `SUM_CREATED_TMP_TABLES` bigint(20) unsigned NOT NULL, `SUM_SELECT_FULL_JOIN` bigint(20) unsigned NOT NULL, `SUM_SELECT_FULL_RANGE_JOIN` bigint(20) unsigned NOT NULL, `SUM_SELECT_RANGE` bigint(20) unsigned NOT NULL, `SUM_SELECT_RANGE_CHECK` bigint(20) unsigned NOT NULL, `SUM_SELECT_SCAN` bigint(20) unsigned NOT NULL, `SUM_SORT_MERGE_PASSES` bigint(20) unsigned NOT NULL, `SUM_SORT_RANGE` bigint(20) unsigned NOT NULL, `SUM_SORT_ROWS` bigint(20) unsigned NOT NULL, `SUM_SORT_SCAN` bigint(20) unsigned NOT NULL, `SUM_NO_INDEX_USED` bigint(20) unsigned NOT NULL, `SUM_NO_GOOD_INDEX_USED` bigint(20) unsigned NOT NULL, `FIRST_SEEN` timestamp(6) NULL DEFAULT NULL, `LAST_SEEN` timestamp(6) NULL DEFAULT NULL, `QUANTILE_95` bigint(20) unsigned NOT NULL, `QUANTILE_99` bigint(20) unsigned NOT NULL, `QUANTILE_999` bigint(20) unsigned NOT NULL, `QUERY_SAMPLE_TEXT` longtext, `QUERY_SAMPLE_SEEN` timestamp(6) NULL DEFAULT NULL, `QUERY_SAMPLE_TIMER_WAIT` bigint(20) unsigned NOT NULL, INDEX (SCHEMA_NAME, DIGEST) ) DEFAULT CHARSET=utf8mb4';  IF (v_force_new_snapshot OR in_action = 'snapshot' OR (in_action = 'overall' AND in_table IS NULL) OR (in_action = 'save' AND v_tmp_digests_table_exists <> 'TEMPORARY') ) THEN IF (v_tmp_digests_table_exists = 'TEMPORARY') THEN IF (@sys.debug = 'ON') THEN SELECT 'DROP TEMPORARY TABLE IF EXISTS tmp_digests' AS 'Debug'; END IF; DROP TEMPORARY TABLE IF EXISTS tmp_digests; END IF; CALL sys.execute_prepared_stmt(REPLACE(REPLACE(v_digest_table_template, '%{TEMPORARY}', 'TEMPORARY '), '%{TABLE_NAME}', 'tmp_digests'));  SET v_sql = CONCAT('INSERT INTO tmp_digests SELECT * FROM ', IF(in_table IS NULL OR in_action = 'save', 'performance_schema.events_statements_summary_by_digest', v_quoted_table)); CALL sys.execute_prepared_stmt(v_sql); END IF;  IF (in_action IN ('create_table', 'create_tmp')) THEN IF (in_action = 'create_table') THEN CALL sys.execute_prepared_stmt(REPLACE(REPLACE(v_digest_table_template, '%{TEMPORARY}', ''), '%{TABLE_NAME}', v_quoted_table)); ELSE CALL sys.execute_prepared_stmt(REPLACE(REPLACE(v_digest_table_template, '%{TEMPORARY}', 'TEMPORARY '), '%{TABLE_NAME}', v_quoted_table)); END IF; ELSEIF (in_action = 'save') THEN CALL sys.execute_prepared_stmt(CONCAT('DELETE FROM ', v_quoted_table)); CALL sys.execute_prepared_stmt(CONCAT('INSERT INTO ', v_quoted_table, ' SELECT * FROM tmp_digests')); ELSEIF (in_action = 'cleanup') THEN DROP TEMPORARY TABLE IF EXISTS sys.tmp_digests; DROP TEMPORARY TABLE IF EXISTS sys.tmp_digests_delta; ELSEIF (in_action IN ('overall', 'delta')) THEN IF (in_action = 'overall') THEN IF (in_table IS NULL) THEN SET v_digests_table = 'tmp_digests'; ELSE SET v_digests_table = v_quoted_table; END IF; ELSE SET v_digests_table = 'tmp_digests_delta'; DROP TEMPORARY TABLE IF EXISTS tmp_digests_delta; CREATE TEMPORARY TABLE tmp_digests_delta LIKE tmp_digests; SET v_sql = CONCAT('INSERT INTO tmp_digests_delta SELECT `d_end`.`SCHEMA_NAME`, `d_end`.`DIGEST`, `d_end`.`DIGEST_TEXT`, `d_end`.`COUNT_STAR`-IFNULL(`d_start`.`COUNT_STAR`, 0) AS ''COUNT_STAR'', `d_end`.`SUM_TIMER_WAIT`-IFNULL(`d_start`.`SUM_TIMER_WAIT`, 0) AS ''SUM_TIMER_WAIT'', `d_end`.`MIN_TIMER_WAIT` AS ''MIN_TIMER_WAIT'', IFNULL((`d_end`.`SUM_TIMER_WAIT`-IFNULL(`d_start`.`SUM_TIMER_WAIT`, 0))/NULLIF(`d_end`.`COUNT_STAR`-IFNULL(`d_start`.`COUNT_STAR`, 0), 0), 0) AS ''AVG_TIMER_WAIT'', `d_end`.`MAX_TIMER_WAIT` AS ''MAX_TIMER_WAIT'', `d_end`.`SUM_LOCK_TIME`-IFNULL(`d_start`.`SUM_LOCK_TIME`, 0) AS ''SUM_LOCK_TIME'', `d_end`.`SUM_ERRORS`-IFNULL(`d_start`.`SUM_ERRORS`, 0) AS ''SUM_ERRORS'', `d_end`.`SUM_WARNINGS`-IFNULL(`d_start`.`SUM_WARNINGS`, 0) AS ''SUM_WARNINGS'', `d_end`.`SUM_ROWS_AFFECTED`-IFNULL(`d_start`.`SUM_ROWS_AFFECTED`, 0) AS ''SUM_ROWS_AFFECTED'', `d_end`.`SUM_ROWS_SENT`-IFNULL(`d_start`.`SUM_ROWS_SENT`, 0) AS ''SUM_ROWS_SENT'', `d_end`.`SUM_ROWS_EXAMINED`-IFNULL(`d_start`.`SUM_ROWS_EXAMINED`, 0) AS ''SUM_ROWS_EXAMINED'', `d_end`.`SUM_CREATED_TMP_DISK_TABLES`-IFNULL(`d_start`.`SUM_CREATED_TMP_DISK_TABLES`, 0) AS ''SUM_CREATED_TMP_DISK_TABLES'', `d_end`.`SUM_CREATED_TMP_TABLES`-IFNULL(`d_start`.`SUM_CREATED_TMP_TABLES`, 0) AS ''SUM_CREATED_TMP_TABLES'', `d_end`.`SUM_SELECT_FULL_JOIN`-IFNULL(`d_start`.`SUM_SELECT_FULL_JOIN`, 0) AS ''SUM_SELECT_FULL_JOIN'', `d_end`.`SUM_SELECT_FULL_RANGE_JOIN`-IFNULL(`d_start`.`SUM_SELECT_FULL_RANGE_JOIN`, 0) AS ''SUM_SELECT_FULL_RANGE_JOIN'', `d_end`.`SUM_SELECT_RANGE`-IFNULL(`d_start`.`SUM_SELECT_RANGE`, 0) AS ''SUM_SELECT_RANGE'', `d_end`.`SUM_SELECT_RANGE_CHECK`-IFNULL(`d_start`.`SUM_SELECT_RANGE_CHECK`, 0) AS ''SUM_SELECT_RANGE_CHECK'', `d_end`.`SUM_SELECT_SCAN`-IFNULL(`d_start`.`SUM_SELECT_SCAN`, 0) AS ''SUM_SELECT_SCAN'', `d_end`.`SUM_SORT_MERGE_PASSES`-IFNULL(`d_start`.`SUM_SORT_MERGE_PASSES`, 0) AS ''SUM_SORT_MERGE_PASSES'', `d_end`.`SUM_SORT_RANGE`-IFNULL(`d_start`.`SUM_SORT_RANGE`, 0) AS ''SUM_SORT_RANGE'', `d_end`.`SUM_SORT_ROWS`-IFNULL(`d_start`.`SUM_SORT_ROWS`, 0) AS ''SUM_SORT_ROWS'', `d_end`.`SUM_SORT_SCAN`-IFNULL(`d_start`.`SUM_SORT_SCAN`, 0) AS ''SUM_SORT_SCAN'', `d_end`.`SUM_NO_INDEX_USED`-IFNULL(`d_start`.`SUM_NO_INDEX_USED`, 0) AS ''SUM_NO_INDEX_USED'', `d_end`.`SUM_NO_GOOD_INDEX_USED`-IFNULL(`d_start`.`SUM_NO_GOOD_INDEX_USED`, 0) AS ''SUM_NO_GOOD_INDEX_USED'', `d_end`.`FIRST_SEEN`, `d_end`.`LAST_SEEN`, `d_end`.`QUANTILE_95`, `d_end`.`QUANTILE_99`, `d_end`.`QUANTILE_999`, `d_end`.`QUERY_SAMPLE_TEXT`, `d_end`.`QUERY_SAMPLE_SEEN`, `d_end`.`QUERY_SAMPLE_TIMER_WAIT` FROM tmp_digests d_end LEFT OUTER JOIN ', v_quoted_table, ' d_start ON `d_start`.`DIGEST` = `d_end`.`DIGEST` AND (`d_start`.`SCHEMA_NAME` = `d_end`.`SCHEMA_NAME` OR (`d_start`.`SCHEMA_NAME` IS NULL AND `d_end`.`SCHEMA_NAME` IS NULL) ) WHERE `d_end`.`COUNT_STAR`-IFNULL(`d_start`.`COUNT_STAR`, 0) > 0'); CALL sys.execute_prepared_stmt(v_sql); END IF;  IF (FIND_IN_SET('with_runtimes_in_95th_percentile', in_views)) THEN SELECT 'Queries with Runtime in 95th Percentile' AS 'Next Output';  DROP TEMPORARY TABLE IF EXISTS tmp_digest_avg_latency_distribution1; DROP TEMPORARY TABLE IF EXISTS tmp_digest_avg_latency_distribution2; DROP TEMPORARY TABLE IF EXISTS tmp_digest_95th_percentile_by_avg_us;  CREATE TEMPORARY TABLE tmp_digest_avg_latency_distribution1 ( cnt bigint unsigned NOT NULL, avg_us decimal(21,0) NOT NULL, PRIMARY KEY (avg_us) ) ENGINE=InnoDB;  SET v_sql = CONCAT('INSERT INTO tmp_digest_avg_latency_distribution1 SELECT COUNT(*) cnt, ROUND(avg_timer_wait/1000000) AS avg_us FROM ', v_digests_table, ' GROUP BY avg_us'); CALL sys.execute_prepared_stmt(v_sql);  CREATE TEMPORARY TABLE tmp_digest_avg_latency_distribution2 LIKE tmp_digest_avg_latency_distribution1; INSERT INTO tmp_digest_avg_latency_distribution2 SELECT * FROM tmp_digest_avg_latency_distribution1;  CREATE TEMPORARY TABLE tmp_digest_95th_percentile_by_avg_us ( avg_us decimal(21,0) NOT NULL, percentile decimal(46,4) NOT NULL, PRIMARY KEY (avg_us) ) ENGINE=InnoDB;  SET v_sql = CONCAT('INSERT INTO tmp_digest_95th_percentile_by_avg_us SELECT s2.avg_us avg_us, IFNULL(SUM(s1.cnt)/NULLIF((SELECT COUNT(*) FROM ', v_digests_table, '), 0), 0) percentile FROM tmp_digest_avg_latency_distribution1 AS s1 JOIN tmp_digest_avg_latency_distribution2 AS s2 ON s1.avg_us <= s2.avg_us GROUP BY s2.avg_us HAVING percentile > 0.95 ORDER BY percentile LIMIT 1'); CALL sys.execute_prepared_stmt(v_sql);  SET v_sql = REPLACE( REPLACE( (SELECT VIEW_DEFINITION FROM information_schema.VIEWS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'statements_with_runtimes_in_95th_percentile' ), '`performance_schema`.`events_statements_summary_by_digest`', v_digests_table ), 'sys.x$ps_digest_95th_percentile_by_avg_us', '`sys`.`x$ps_digest_95th_percentile_by_avg_us`' ); CALL sys.execute_prepared_stmt(v_sql);  DROP TEMPORARY TABLE tmp_digest_avg_latency_distribution1; DROP TEMPORARY TABLE tmp_digest_avg_latency_distribution2; DROP TEMPORARY TABLE tmp_digest_95th_percentile_by_avg_us; END IF;  IF (FIND_IN_SET('analysis', in_views)) THEN SELECT CONCAT('Top ', @sys.statement_performance_analyzer.limit, ' Queries Ordered by Total Latency') AS 'Next Output'; SET v_sql = REPLACE( (SELECT VIEW_DEFINITION FROM information_schema.VIEWS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'statement_analysis' ), '`performance_schema`.`events_statements_summary_by_digest`', v_digests_table ); IF (@sys.statement_performance_analyzer.limit > 0) THEN SET v_sql = CONCAT(v_sql, ' LIMIT ', @sys.statement_performance_analyzer.limit); END IF; CALL sys.execute_prepared_stmt(v_sql); END IF;  IF (FIND_IN_SET('with_errors_or_warnings', in_views)) THEN SELECT CONCAT('Top ', @sys.statement_performance_analyzer.limit, ' Queries with Errors') AS 'Next Output'; SET v_sql = REPLACE( (SELECT VIEW_DEFINITION FROM information_schema.VIEWS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'statements_with_errors_or_warnings' ), '`performance_schema`.`events_statements_summary_by_digest`', v_digests_table ); IF (@sys.statement_performance_analyzer.limit > 0) THEN SET v_sql = CONCAT(v_sql, ' LIMIT ', @sys.statement_performance_analyzer.limit); END IF; CALL sys.execute_prepared_stmt(v_sql); END IF;  IF (FIND_IN_SET('with_full_table_scans', in_views)) THEN SELECT CONCAT('Top ', @sys.statement_performance_analyzer.limit, ' Queries with Full Table Scan') AS 'Next Output'; SET v_sql = REPLACE( (SELECT VIEW_DEFINITION FROM information_schema.VIEWS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'statements_with_full_table_scans' ), '`performance_schema`.`events_statements_summary_by_digest`', v_digests_table ); IF (@sys.statement_performance_analyzer.limit > 0) THEN SET v_sql = CONCAT(v_sql, ' LIMIT ', @sys.statement_performance_analyzer.limit); END IF; CALL sys.execute_prepared_stmt(v_sql); END IF;  IF (FIND_IN_SET('with_sorting', in_views)) THEN SELECT CONCAT('Top ', @sys.statement_performance_analyzer.limit, ' Queries with Sorting') AS 'Next Output'; SET v_sql = REPLACE( (SELECT VIEW_DEFINITION FROM information_schema.VIEWS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'statements_with_sorting' ), '`performance_schema`.`events_statements_summary_by_digest`', v_digests_table ); IF (@sys.statement_performance_analyzer.limit > 0) THEN SET v_sql = CONCAT(v_sql, ' LIMIT ', @sys.statement_performance_analyzer.limit); END IF; CALL sys.execute_prepared_stmt(v_sql); END IF;  IF (FIND_IN_SET('with_temp_tables', in_views)) THEN SELECT CONCAT('Top ', @sys.statement_performance_analyzer.limit, ' Queries with Internal Temporary Tables') AS 'Next Output'; SET v_sql = REPLACE( (SELECT VIEW_DEFINITION FROM information_schema.VIEWS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'statements_with_temp_tables' ), '`performance_schema`.`events_statements_summary_by_digest`', v_digests_table ); IF (@sys.statement_performance_analyzer.limit > 0) THEN SET v_sql = CONCAT(v_sql, ' LIMIT ', @sys.statement_performance_analyzer.limit); END IF; CALL sys.execute_prepared_stmt(v_sql); END IF;  IF (FIND_IN_SET('custom', in_views)) THEN SELECT CONCAT('Top ', @sys.statement_performance_analyzer.limit, ' Queries Using Custom View') AS 'Next Output';  IF (@sys.statement_performance_analyzer.view IS NULL) THEN SET @sys.statement_performance_analyzer.view = sys.sys_get_config('statement_performance_analyzer.view', NULL); END IF; IF (@sys.statement_performance_analyzer.view IS NULL) THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'The @sys.statement_performance_analyzer.view user variable must be set with the view or query to use.'; END IF;  IF (NOT INSTR(@sys.statement_performance_analyzer.view, ' ')) THEN IF (NOT INSTR(@sys.statement_performance_analyzer.view, '.')) THEN SET v_custom_db   = DATABASE(), v_custom_name = @sys.statement_performance_analyzer.view; ELSE SET v_custom_db   = SUBSTRING_INDEX(@sys.statement_performance_analyzer.view, '.', 1); SET v_custom_name = SUBSTRING(@sys.statement_performance_analyzer.view, CHAR_LENGTH(v_custom_db)+2); END IF;  CALL sys.table_exists(v_custom_db, v_custom_name, v_custom_view_exists); IF (v_custom_view_exists <> 'VIEW') THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'The @sys.statement_performance_analyzer.view user variable is set but specified neither an existing view nor a query.'; END IF;  SET v_sql = REPLACE( (SELECT VIEW_DEFINITION FROM information_schema.VIEWS WHERE TABLE_SCHEMA = v_custom_db AND TABLE_NAME = v_custom_name ), '`performance_schema`.`events_statements_summary_by_digest`', v_digests_table ); ELSE SET v_sql = REPLACE(@sys.statement_performance_analyzer.view, '`performance_schema`.`events_statements_summary_by_digest`', v_digests_table); END IF;  IF (@sys.statement_performance_analyzer.limit > 0) THEN SET v_sql = CONCAT(v_sql, ' LIMIT ', @sys.statement_performance_analyzer.limit); END IF;  CALL sys.execute_prepared_stmt(v_sql); END IF; END IF;  IF (v_this_thread_enabled = 'YES') THEN CALL sys.ps_setup_enable_thread(CONNECTION_ID()); END IF;  IF (@log_bin = 1) THEN SET sql_log_bin = @log_bin; END IF; END
;;
delimiter ;

-- ----------------------------
-- Function structure for sys_get_config
-- ----------------------------
DROP FUNCTION IF EXISTS `sys_get_config`;
delimiter ;;
CREATE FUNCTION `sys_get_config`(in_variable_name VARCHAR(128), in_default_value VARCHAR(128))
 RETURNS varchar(128) CHARSET utf8mb4
  READS SQL DATA 
  DETERMINISTIC
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Returns the value for the requested variable using the following logic:\r\n \r\n 1. If the option exists in sys.sys_config return the value from there.\r\n 2. Else fall back on the provided default value.\r\n \r\n Notes for using sys_get_config():\r\n \r\n * If the default value argument to sys_get_config() is NULL and case 2. is reached, NULL is returned.\r\n It is then expected that the caller is able to handle NULL for the given configuration option.\r\n * The convention is to name the user variables @sys.<name of variable>. It is <name of variable> that\r\n is stored in the sys_config table and is what is expected as the argument to sys_get_config().\r\n * If you want to check whether the configuration option has already been set and if not assign with\r\n the return value of sys_get_config() you can use IFNULL(...) (see example below). However this should\r\n not be done inside a loop (e.g. for each row in a result set) as for repeated calls where assignment\r\n is only needed in the first iteration using IFNULL(...) is expected to be significantly slower than\r\n using an IF (...) THEN ... END IF; block (see example below).\r\n \r\n Parameters\r\n \r\n in_variable_name (VARCHAR(128)):\r\n The name of the config option to return the value for.\r\n \r\n in_default_value (VARCHAR(128)):\r\n The default value to return if the variable does not exist in sys.sys_config.\r\n \r\n Returns\r\n \r\n VARCHAR(128)\r\n \r\n Example\r\n \r\n mysql> SELECT sys.sys_get_config(\'statement_truncate_len\', 128) AS Value;\r\n +-------+\r\n | Value |\r\n +-------+\r\n | 64    |\r\n +-------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> SET @sys.statement_truncate_len = IFNULL(@sys.statement_truncate_len, sys.sys_get_config(\'statement_truncate_len\', 64));\r\n Query OK, 0 rows affected (0.00 sec)\r\n \r\n IF (@sys.statement_truncate_len IS NULL) THEN\r\n SET @sys.statement_truncate_len = sys.sys_get_config(\'statement_truncate_len\', 64);\r\n END IF;\r\n '
BEGIN DECLARE v_value VARCHAR(128) DEFAULT NULL;  SET v_value = (SELECT value FROM sys.sys_config WHERE variable = in_variable_name);  IF (v_value IS NULL) THEN SET v_value = in_default_value; END IF;  RETURN v_value; END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for table_exists
-- ----------------------------
DROP PROCEDURE IF EXISTS `table_exists`;
delimiter ;;
CREATE PROCEDURE `table_exists`(IN in_db VARCHAR(64), IN in_table VARCHAR(64), OUT out_exists ENUM('', 'BASE TABLE', 'VIEW', 'TEMPORARY'))
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Tests whether the table specified in in_db and in_table exists either as a regular\r\n table, or as a temporary table. The returned value corresponds to the table that\r\n will be used, so if there\'s both a temporary and a permanent table with the given\r\n name, then \'TEMPORARY\' will be returned.\r\n \r\n Parameters\r\n \r\n in_db (VARCHAR(64)):\r\n The database name to check for the existance of the table in.\r\n \r\n in_table (VARCHAR(64)):\r\n The name of the table to check the existance of.\r\n \r\n out_exists ENUM(\'\', \'BASE TABLE\', \'VIEW\', \'TEMPORARY\'):\r\n The return value: whether the table exists. The value is one of:\r\n * \'\'           - the table does not exist neither as a base table, view, nor temporary table.\r\n * \'BASE TABLE\' - the table name exists as a permanent base table table.\r\n * \'VIEW\'       - the table name exists as a view.\r\n * \'TEMPORARY\'  - the table name exists as a temporary table.\r\n \r\n Example\r\n \r\n mysql> CREATE DATABASE db1;\r\n Query OK, 1 row affected (0.07 sec)\r\n \r\n mysql> use db1;\r\n Database changed\r\n mysql> CREATE TABLE t1 (id INT PRIMARY KEY);\r\n Query OK, 0 rows affected (0.08 sec)\r\n \r\n mysql> CREATE TABLE t2 (id INT PRIMARY KEY);\r\n Query OK, 0 rows affected (0.08 sec)\r\n \r\n mysql> CREATE view v_t1 AS SELECT * FROM t1;\r\n Query OK, 0 rows affected (0.00 sec)\r\n \r\n mysql> CREATE TEMPORARY TABLE t1 (id INT PRIMARY KEY);\r\n Query OK, 0 rows affected (0.00 sec)\r\n \r\n mysql> CALL sys.table_exists(\'db1\', \'t1\', @exists); SELECT @exists;\r\n Query OK, 0 rows affected (0.00 sec)\r\n \r\n +------------+\r\n | @exists    |\r\n +------------+\r\n | TEMPORARY  |\r\n +------------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> CALL sys.table_exists(\'db1\', \'t2\', @exists); SELECT @exists;\r\n Query OK, 0 rows affected (0.00 sec)\r\n \r\n +------------+\r\n | @exists    |\r\n +------------+\r\n | BASE TABLE |\r\n +------------+\r\n 1 row in set (0.01 sec)\r\n \r\n mysql> CALL sys.table_exists(\'db1\', \'v_t1\', @exists); SELECT @exists;\r\n Query OK, 0 rows affected (0.00 sec)\r\n \r\n +---------+\r\n | @exists |\r\n +---------+\r\n | VIEW    |\r\n +---------+\r\n 1 row in set (0.00 sec)\r\n \r\n mysql> CALL sys.table_exists(\'db1\', \'t3\', @exists); SELECT @exists;\r\n Query OK, 0 rows affected (0.01 sec)\r\n \r\n +---------+\r\n | @exists |\r\n +---------+\r\n |         |\r\n +---------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN DECLARE v_error BOOLEAN DEFAULT FALSE; DECLARE CONTINUE HANDLER FOR 1050 SET v_error = TRUE; DECLARE CONTINUE HANDLER FOR 1146 SET v_error = TRUE;  SET out_exists = '';  IF (EXISTS(SELECT 1 FROM information_schema.TABLES WHERE TABLE_SCHEMA = in_db AND TABLE_NAME = in_table)) THEN SET @sys.tmp.table_exists.SQL = CONCAT('CREATE TEMPORARY TABLE `', in_db, '`.`', in_table, '` (id INT PRIMARY KEY)'); PREPARE stmt_create_table FROM @sys.tmp.table_exists.SQL; EXECUTE stmt_create_table; DEALLOCATE PREPARE stmt_create_table; IF (v_error) THEN SET out_exists = 'TEMPORARY'; ELSE SET @sys.tmp.table_exists.SQL = CONCAT('DROP TEMPORARY TABLE `', in_db, '`.`', in_table, '`'); PREPARE stmt_drop_table FROM @sys.tmp.table_exists.SQL; EXECUTE stmt_drop_table; DEALLOCATE PREPARE stmt_drop_table; SET out_exists = (SELECT TABLE_TYPE FROM information_schema.TABLES WHERE TABLE_SCHEMA = in_db AND TABLE_NAME = in_table); END IF; ELSE SET @sys.tmp.table_exists.SQL = CONCAT('SELECT COUNT(*) FROM `', in_db, '`.`', in_table, '`'); PREPARE stmt_select FROM @sys.tmp.table_exists.SQL; IF (NOT v_error) THEN DEALLOCATE PREPARE stmt_select; SET out_exists = 'TEMPORARY'; END IF; END IF; END
;;
delimiter ;

-- ----------------------------
-- Function structure for version_major
-- ----------------------------
DROP FUNCTION IF EXISTS `version_major`;
delimiter ;;
CREATE FUNCTION `version_major`()
 RETURNS tinyint(3) unsigned
  NO SQL 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Returns the major version of MySQL Server.\r\n \r\n Returns\r\n \r\n TINYINT UNSIGNED\r\n \r\n Example\r\n \r\n mysql> SELECT VERSION(), sys.version_major();\r\n +--------------------------------------+---------------------+\r\n | VERSION()                            | sys.version_major() |\r\n +--------------------------------------+---------------------+\r\n | 5.7.9-enterprise-commercial-advanced | 5                   |\r\n +--------------------------------------+---------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN RETURN SUBSTRING_INDEX(SUBSTRING_INDEX(VERSION(), '-', 1), '.', 1); END
;;
delimiter ;

-- ----------------------------
-- Function structure for version_minor
-- ----------------------------
DROP FUNCTION IF EXISTS `version_minor`;
delimiter ;;
CREATE FUNCTION `version_minor`()
 RETURNS tinyint(3) unsigned
  NO SQL 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Returns the minor (release series) version of MySQL Server.\r\n \r\n Returns\r\n \r\n TINYINT UNSIGNED\r\n \r\n Example\r\n \r\n mysql> SELECT VERSION(), sys.server_minor();\r\n +--------------------------------------+---------------------+\r\n | VERSION()                            | sys.version_minor() |\r\n +--------------------------------------+---------------------+\r\n | 5.7.9-enterprise-commercial-advanced | 7                   |\r\n +--------------------------------------+---------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN RETURN SUBSTRING_INDEX(SUBSTRING_INDEX(SUBSTRING_INDEX(VERSION(), '-', 1), '.', 2), '.', -1); END
;;
delimiter ;

-- ----------------------------
-- Function structure for version_patch
-- ----------------------------
DROP FUNCTION IF EXISTS `version_patch`;
delimiter ;;
CREATE FUNCTION `version_patch`()
 RETURNS tinyint(3) unsigned
  NO SQL 
  SQL SECURITY INVOKER
  COMMENT '\r\n Description\r\n \r\n Returns the patch release version of MySQL Server.\r\n \r\n Returns\r\n \r\n TINYINT UNSIGNED\r\n \r\n Example\r\n \r\n mysql> SELECT VERSION(), sys.version_patch();\r\n +--------------------------------------+---------------------+\r\n | VERSION()                            | sys.version_patch() |\r\n +--------------------------------------+---------------------+\r\n | 5.7.9-enterprise-commercial-advanced | 9                   |\r\n +--------------------------------------+---------------------+\r\n 1 row in set (0.00 sec)\r\n '
BEGIN RETURN SUBSTRING_INDEX(SUBSTRING_INDEX(VERSION(), '-', 1), '.', -1); END
;;
delimiter ;

SET FOREIGN_KEY_CHECKS = 1;
